/* Copyright (c) 2019-2021 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2019-2021 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */

import * from deemon;

@@List of *known* functions that GCC considers noexcept, even if they may not be.
@@Declarations of these functions may require special work-arounds in headers.
global final GCC_NCX: {string...} = HashSet.Frozen({
	"aligned_alloc",
	"ceil",
	"ceilf",
	"ceill",
	"copysign",
	"copysignf",
	"copysignl",
	"fabs",
	"fabsf",
	"fabsl",
	"fabsd32",
	"fabsd64",
	"fabsd128",
	"feclearexcept",
	"fegetenv",
	"fegetexceptflag",
	"fegetround",
	"feholdexcept",
	"fesetenv",
	"fesetexceptflag",
	"fesetround",
	"fetestexcept",
	"feupdateenv",
	"floor",
	"floorf",
	"floorl",
	"fmax",
	"fmaxf",
	"fmaxl",
	"fmin",
	"fminf",
	"fminl",
	"huge_val",
	"huge_valf",
	"huge_vall",
	"iceil",
	"iceilf",
	"iceill",
	"ifloor",
	"ifloorf",
	"ifloorl",
	"inf",
	"inff",
	"infl",
	"infd32",
	"infd64",
	"infd128",
	"lceil",
	"lceilf",
	"lceill",
	"lfloor",
	"lfloorf",
	"lfloorl",
	"llceil",
	"llceilf",
	"llceill",
	"llfloor",
	"llfloorf",
	"llfloorl",
	"nan",
	"nanf",
	"nanl",
	"nand32",
	"nand64",
	"nand128",
	"nans",
	"nansf",
	"nansl",
	"nearbyint",
	"nearbyintf",
	"nearbyintl",
	"round",
	"roundf",
	"roundl",
	"signbit",
	"signbitf",
	"signbitl",
	"signbitd32",
	"signbitd64",
	"signbitd128",
	"trunc",
	"truncf",
	"truncl",
	"cimag",
	"cimagf",
	"cimagl",
	"conj",
	"conjf",
	"conjl",
	"cproj",
	"cprojf",
	"cprojl",
	"creal",
	"crealf",
	"creall",
	"bcmp",
	"bcopy",
	"bzero",
	"index",
	"memchr",
	"memcmp",
	"memcpy",
	"memmove",
	"mempcpy",
	"memset",
	"rindex",
	"stpcpy",
	"stpncpy",
	"strcasecmp",
	"strcat",
	"strchr",
	"strcmp",
	"strcpy",
	"strcspn",
	"strdup",
	"strndup",
	"strlen",
	"strncasecmp",
	"strncat",
	"strncmp",
	"strncpy",
	"strnlen",
	"strpbrk",
	"strrchr",
	"strspn",
	"strstr",
	"snprintf",
	"sprintf",
	"sscanf",
	"vsnprintf",
	"vsprintf",
	"vsscanf",
	"isalnum",
	"isalpha",
	"isascii",
	"isblank",
	"iscntrl",
	"isdigit",
	"isgraph",
	"islower",
	"isprint",
	"ispunct",
	"isspace",
	"isupper",
	"isxdigit",
	"toascii",
	"tolower",
	"toupper",
	"iswalnum",
	"iswalpha",
	"iswblank",
	"iswcntrl",
	"iswdigit",
	"iswgraph",
	"iswlower",
	"iswprint",
	"iswpunct",
	"iswspace",
	"iswupper",
	"iswxdigit",
	"towlower",
	"towupper",
	"abort",
	"abs",
	"calloc",
	"execl",
	"execlp",
	"execle",
	"execv",
	"execvp",
	"execve",
	"exit",
	"ffs",
	"ffsimax",
	"ffsl",
	"ffsll",
	"fork",
	"free",
	"imaxabs",
	"finite",
	"finitef",
	"finitel",
	"finited32",
	"finited64",
	"finited128",
	"fpclassify",
	"isfinite",
	"isinf_sign",
	"isinf",
	"isinff",
	"isinfl",
	"isinfd32",
	"isinfd64",
	"isinfd128",
	"isnan",
	"isnanf",
	"isnanl",
	"isnand32",
	"isnand64",
	"isnand128",
	"labs",
	"llabs",
	"longjmp",
	"malloc",
	"posix_memalign",
	"realloc",
	"return",
	"setjmp",
	"strfmon",
	"strftime",
	"_exit",
	"_Exit",
	"__memcpy_chk",
	"__memmove_chk",
	"__mempcpy_chk",
	"__memset_chk",
	"__stpcpy_chk",
	"__stpncpy_chk",
	"__strcat_chk",
	"__strcpy_chk",
	"__strncat_chk",
	"__strncpy_chk",
	"__snprintf_chk",
	"__sprintf_chk",
	"__vsnprintf_chk",
	"__vsprintf_chk",
});

