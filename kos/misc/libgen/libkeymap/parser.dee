/* Copyright (c) 2019-2024 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2019-2024 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */


/* Keymap definitions file format:
 *
 * Any line  starting  with  a  #-character  is  a  comment
 * Such comments are terminated when a line-feed is reached
 *
 * All other lines follow one of the following formats:
 *  <KEY_NAME>:<MAPPED-C-ESCAPED-STRING>
 *  <KEY_NAME>:<MODIFIERS>:<MAPPED-C-ESCAPED-STRING>
 *
 * Where <KEY_NAME> is one of the <KEY_*> constants from the KOS system
 * header   <kos/keyboard.h>,   or    a   c-like   integer    constant.
 *
 * Where  <MODIFIERS>  is  a   `,'-seperated  list  of  `|'-seperated   modifer
 * flags that need  to be  present when  the key  is pressed.  - When  omitted,
 * the  associated  text   is  emit   when  no  modifier   keys  are   pressed.
 * When given,  each `,'-seperated  segment describes  a set  of  `|'-seperated
 * flags that are or'd together. Each of these flag-sets describes one modifier
 * combination for which the line describes a mapping
 * With this in mind, omitting <MODIFIERS> is the same as using `0' for it:
 * >> KEY_K:"k"
 * >> KEY_K:0:"k"
 *
 * A modifier flag is either a c-like integer constant, or one of the following macros:
 *   - lctrl  -- 0x1
 *   - rctrl  -- 0x2
 *   - lshift -- 0x4
 *   - rshift -- 0x8
 *   - lgui   -- 0x10
 *   - rgui   -- 0x20
 *   - lalt   -- 0x40
 *   - ralt   -- 0x80
 *   - raltgr -- 0x100
 *
 * Alternatively, <MODIFIERS> may be one of the following strings, to
 * describe pre-defined sets of modifier flags:
 *   - ctrl   --  lctrl,rctrl,lctrl|rctrl,capslock|lctrl,capslock|rctrl,capslock|lctrl|rctrl
 *   - shift  --  lshift,rshift,lshift|rshift,capslock
 *   - gui    --  lgui,rgui,lgui|rgui,capslock|lgui,capslock|rgui,capslock|lgui|rgui
 *   - alt    --  lalt,ralt,lalt|ralt,capslock|lalt,capslock|ralt,capslock|lalt|ralt
 *   - altgr  --  ralt,lctrl|lalt,lctrl|ralt,rctrl|lalt,rctrl|ralt,capslock|ralt,capslock|lctrl|lalt,capslock|lctrl|ralt,capslock|rctrl|lalt,capslock|rctrl|ralt
 *
 */

import fs;
import * from deemon;
import * from .linker;

#include "../../../include/kos/keyboard.h"

global final knownKeyNames: {string: int} = {

	"KEY_ESC" : KEY_ESC,
	"KEY_1" : KEY_1,
	"KEY_2" : KEY_2,
	"KEY_3" : KEY_3,
	"KEY_4" : KEY_4,
	"KEY_5" : KEY_5,
	"KEY_6" : KEY_6,
	"KEY_7" : KEY_7,
	"KEY_8" : KEY_8,
	"KEY_9" : KEY_9,
	"KEY_0" : KEY_0,
	"KEY_MINUS" : KEY_MINUS,
	"KEY_EQUAL" : KEY_EQUAL,
	"KEY_BACKSPACE" : KEY_BACKSPACE,
	"KEY_TAB" : KEY_TAB,
	"KEY_Q" : KEY_Q,
	"KEY_W" : KEY_W,
	"KEY_E" : KEY_E,
	"KEY_R" : KEY_R,
	"KEY_T" : KEY_T,
	"KEY_Y" : KEY_Y,
	"KEY_U" : KEY_U,
	"KEY_I" : KEY_I,
	"KEY_O" : KEY_O,
	"KEY_P" : KEY_P,
	"KEY_LEFTBRACE" : KEY_LEFTBRACE,
	"KEY_RIGHTBRACE" : KEY_RIGHTBRACE,
	"KEY_ENTER" : KEY_ENTER,
	"KEY_LEFTCTRL" : KEY_LEFTCTRL,
	"KEY_A" : KEY_A,
	"KEY_S" : KEY_S,
	"KEY_D" : KEY_D,
	"KEY_F" : KEY_F,
	"KEY_G" : KEY_G,
	"KEY_H" : KEY_H,
	"KEY_J" : KEY_J,
	"KEY_K" : KEY_K,
	"KEY_L" : KEY_L,
	"KEY_SEMICOLON" : KEY_SEMICOLON,
	"KEY_APOSTROPHE" : KEY_APOSTROPHE,
	"KEY_GRAVE" : KEY_GRAVE,
	"KEY_LEFTSHIFT" : KEY_LEFTSHIFT,
	"KEY_BACKSLASH" : KEY_BACKSLASH,
	"KEY_Z" : KEY_Z,
	"KEY_X" : KEY_X,
	"KEY_C" : KEY_C,
	"KEY_V" : KEY_V,
	"KEY_B" : KEY_B,
	"KEY_N" : KEY_N,
	"KEY_M" : KEY_M,
	"KEY_COMMA" : KEY_COMMA,
	"KEY_DOT" : KEY_DOT,
	"KEY_SLASH" : KEY_SLASH,
	"KEY_RIGHTSHIFT" : KEY_RIGHTSHIFT,
	"KEY_KPASTERISK" : KEY_KPASTERISK,
	"KEY_LEFTALT" : KEY_LEFTALT,
	"KEY_SPACE" : KEY_SPACE,
	"KEY_CAPSLOCK" : KEY_CAPSLOCK,
	"KEY_F1" : KEY_F1,
	"KEY_F2" : KEY_F2,
	"KEY_F3" : KEY_F3,
	"KEY_F4" : KEY_F4,
	"KEY_F5" : KEY_F5,
	"KEY_F6" : KEY_F6,
	"KEY_F7" : KEY_F7,
	"KEY_F8" : KEY_F8,
	"KEY_F9" : KEY_F9,
	"KEY_F10" : KEY_F10,
	"KEY_NUMLOCK" : KEY_NUMLOCK,
	"KEY_SCROLLLOCK" : KEY_SCROLLLOCK,
	"KEY_KP7" : KEY_KP7,
	"KEY_KP8" : KEY_KP8,
	"KEY_KP9" : KEY_KP9,
	"KEY_KPMINUS" : KEY_KPMINUS,
	"KEY_KP4" : KEY_KP4,
	"KEY_KP5" : KEY_KP5,
	"KEY_KP6" : KEY_KP6,
	"KEY_KPPLUS" : KEY_KPPLUS,
	"KEY_KP1" : KEY_KP1,
	"KEY_KP2" : KEY_KP2,
	"KEY_KP3" : KEY_KP3,
	"KEY_KP0" : KEY_KP0,
	"KEY_KPDOT" : KEY_KPDOT,
	"KEY_ZENKAKUHANKAKU" : KEY_ZENKAKUHANKAKU,
	"KEY_102ND" : KEY_102ND,
	"KEY_F11" : KEY_F11,
	"KEY_F12" : KEY_F12,
	"KEY_RO" : KEY_RO,
	"KEY_KATAKANA" : KEY_KATAKANA,
	"KEY_HIRAGANA" : KEY_HIRAGANA,
	"KEY_HENKAN" : KEY_HENKAN,
	"KEY_KATAKANAHIRAGANA" : KEY_KATAKANAHIRAGANA,
	"KEY_MUHENKAN" : KEY_MUHENKAN,
	"KEY_KPJPCOMMA" : KEY_KPJPCOMMA,
	"KEY_KPENTER" : KEY_KPENTER,
	"KEY_RIGHTCTRL" : KEY_RIGHTCTRL,
	"KEY_KPSLASH" : KEY_KPSLASH,
	"KEY_SYSRQ" : KEY_SYSRQ,
	"KEY_RIGHTALT" : KEY_RIGHTALT,
	"KEY_LINEFEED" : KEY_LINEFEED,
	"KEY_HOME" : KEY_HOME,
	"KEY_UP" : KEY_UP,
	"KEY_PAGEUP" : KEY_PAGEUP,
	"KEY_LEFT" : KEY_LEFT,
	"KEY_RIGHT" : KEY_RIGHT,
	"KEY_END" : KEY_END,
	"KEY_DOWN" : KEY_DOWN,
	"KEY_PAGEDOWN" : KEY_PAGEDOWN,
	"KEY_INSERT" : KEY_INSERT,
	"KEY_DELETE" : KEY_DELETE,
	"KEY_MACRO" : KEY_MACRO,
	"KEY_MUTE" : KEY_MUTE,
	"KEY_VOLUMEDOWN" : KEY_VOLUMEDOWN,
	"KEY_VOLUMEUP" : KEY_VOLUMEUP,
	"KEY_POWER" : KEY_POWER,
	"KEY_KPEQUAL" : KEY_KPEQUAL,
	"KEY_KPPLUSMINUS" : KEY_KPPLUSMINUS,
	"KEY_PAUSE" : KEY_PAUSE,
	"KEY_SCALE" : KEY_SCALE,
	"KEY_KPCOMMA" : KEY_KPCOMMA,
	"KEY_HANGEUL" : KEY_HANGEUL,
	"KEY_HANGUEL" : KEY_HANGUEL,
	"KEY_HANJA" : KEY_HANJA,
	"KEY_YEN" : KEY_YEN,
	"KEY_LEFTMETA" : KEY_LEFTMETA,
	"KEY_RIGHTMETA" : KEY_RIGHTMETA,
	"KEY_COMPOSE" : KEY_COMPOSE,
	"KEY_STOP" : KEY_STOP,
	"KEY_AGAIN" : KEY_AGAIN,
	"KEY_PROPS" : KEY_PROPS,
	"KEY_UNDO" : KEY_UNDO,
	"KEY_FRONT" : KEY_FRONT,
	"KEY_COPY" : KEY_COPY,
	"KEY_OPEN" : KEY_OPEN,
	"KEY_PASTE" : KEY_PASTE,
	"KEY_FIND" : KEY_FIND,
	"KEY_CUT" : KEY_CUT,
	"KEY_HELP" : KEY_HELP,
	"KEY_MENU" : KEY_MENU,
	"KEY_CALC" : KEY_CALC,
	"KEY_SETUP" : KEY_SETUP,
	"KEY_SLEEP" : KEY_SLEEP,
	"KEY_WAKEUP" : KEY_WAKEUP,
	"KEY_FILE" : KEY_FILE,
	"KEY_SENDFILE" : KEY_SENDFILE,
	"KEY_DELETEFILE" : KEY_DELETEFILE,
	"KEY_XFER" : KEY_XFER,
	"KEY_PROG1" : KEY_PROG1,
	"KEY_PROG2" : KEY_PROG2,
	"KEY_WWW" : KEY_WWW,
	"KEY_MSDOS" : KEY_MSDOS,
	"KEY_COFFEE" : KEY_COFFEE,
	"KEY_SCREENLOCK" : KEY_SCREENLOCK,
	"KEY_ROTATE_DISPLAY" : KEY_ROTATE_DISPLAY,
	"KEY_DIRECTION" : KEY_DIRECTION,
	"KEY_CYCLEWINDOWS" : KEY_CYCLEWINDOWS,
	"KEY_MAIL" : KEY_MAIL,
	"KEY_BOOKMARKS" : KEY_BOOKMARKS,
	"KEY_COMPUTER" : KEY_COMPUTER,
	"KEY_BACK" : KEY_BACK,
	"KEY_FORWARD" : KEY_FORWARD,
	"KEY_CLOSECD" : KEY_CLOSECD,
	"KEY_EJECTCD" : KEY_EJECTCD,
	"KEY_EJECTCLOSECD" : KEY_EJECTCLOSECD,
	"KEY_NEXTSONG" : KEY_NEXTSONG,
	"KEY_PLAYPAUSE" : KEY_PLAYPAUSE,
	"KEY_PREVIOUSSONG" : KEY_PREVIOUSSONG,
	"KEY_STOPCD" : KEY_STOPCD,
	"KEY_RECORD" : KEY_RECORD,
	"KEY_REWIND" : KEY_REWIND,
	"KEY_PHONE" : KEY_PHONE,
	"KEY_ISO" : KEY_ISO,
	"KEY_CONFIG" : KEY_CONFIG,
	"KEY_HOMEPAGE" : KEY_HOMEPAGE,
	"KEY_REFRESH" : KEY_REFRESH,
	"KEY_EXIT" : KEY_EXIT,
	"KEY_MOVE" : KEY_MOVE,
	"KEY_EDIT" : KEY_EDIT,
	"KEY_SCROLLUP" : KEY_SCROLLUP,
	"KEY_SCROLLDOWN" : KEY_SCROLLDOWN,
	"KEY_KPLEFTPAREN" : KEY_KPLEFTPAREN,
	"KEY_KPRIGHTPAREN" : KEY_KPRIGHTPAREN,
	"KEY_NEW" : KEY_NEW,
	"KEY_REDO" : KEY_REDO,
	"KEY_F13" : KEY_F13,
	"KEY_F14" : KEY_F14,
	"KEY_F15" : KEY_F15,
	"KEY_F16" : KEY_F16,
	"KEY_F17" : KEY_F17,
	"KEY_F18" : KEY_F18,
	"KEY_F19" : KEY_F19,
	"KEY_F20" : KEY_F20,
	"KEY_F21" : KEY_F21,
	"KEY_F22" : KEY_F22,
	"KEY_F23" : KEY_F23,
	"KEY_F24" : KEY_F24,
	"KEY_PLAYCD" : KEY_PLAYCD,
	"KEY_PAUSECD" : KEY_PAUSECD,
	"KEY_PROG3" : KEY_PROG3,
	"KEY_PROG4" : KEY_PROG4,
	"KEY_DASHBOARD" : KEY_DASHBOARD,
	"KEY_SUSPEND" : KEY_SUSPEND,
	"KEY_CLOSE" : KEY_CLOSE,
	"KEY_PLAY" : KEY_PLAY,
	"KEY_FASTFORWARD" : KEY_FASTFORWARD,
	"KEY_BASSBOOST" : KEY_BASSBOOST,
	"KEY_PRINT" : KEY_PRINT,
	"KEY_HP" : KEY_HP,
	"KEY_CAMERA" : KEY_CAMERA,
	"KEY_SOUND" : KEY_SOUND,
	"KEY_QUESTION" : KEY_QUESTION,
	"KEY_EMAIL" : KEY_EMAIL,
	"KEY_CHAT" : KEY_CHAT,
	"KEY_SEARCH" : KEY_SEARCH,
	"KEY_CONNECT" : KEY_CONNECT,
	"KEY_FINANCE" : KEY_FINANCE,
	"KEY_SPORT" : KEY_SPORT,
	"KEY_SHOP" : KEY_SHOP,
	"KEY_ALTERASE" : KEY_ALTERASE,
	"KEY_CANCEL" : KEY_CANCEL,
	"KEY_BRIGHTNESSDOWN" : KEY_BRIGHTNESSDOWN,
	"KEY_BRIGHTNESSUP" : KEY_BRIGHTNESSUP,
	"KEY_MEDIA" : KEY_MEDIA,
	"KEY_SWITCHVIDEOMODE" : KEY_SWITCHVIDEOMODE,
	"KEY_KBDILLUMTOGGLE" : KEY_KBDILLUMTOGGLE,
	"KEY_KBDILLUMDOWN" : KEY_KBDILLUMDOWN,
	"KEY_KBDILLUMUP" : KEY_KBDILLUMUP,
	"KEY_SEND" : KEY_SEND,
	"KEY_REPLY" : KEY_REPLY,
	"KEY_FORWARDMAIL" : KEY_FORWARDMAIL,
	"KEY_SAVE" : KEY_SAVE,
	"KEY_DOCUMENTS" : KEY_DOCUMENTS,
	"KEY_BATTERY" : KEY_BATTERY,
	"KEY_BLUETOOTH" : KEY_BLUETOOTH,
	"KEY_WLAN" : KEY_WLAN,
	"KEY_UWB" : KEY_UWB,
	"KEY_UNKNOWN" : KEY_UNKNOWN,
	"KEY_VIDEO_NEXT" : KEY_VIDEO_NEXT,
	"KEY_VIDEO_PREV" : KEY_VIDEO_PREV,
	"KEY_BRIGHTNESS_CYCLE" : KEY_BRIGHTNESS_CYCLE,
	"KEY_BRIGHTNESS_AUTO" : KEY_BRIGHTNESS_AUTO,
	"KEY_BRIGHTNESS_ZERO" : KEY_BRIGHTNESS_ZERO,
	"KEY_DISPLAY_OFF" : KEY_DISPLAY_OFF,
	"KEY_WWAN" : KEY_WWAN,
	"KEY_WIMAX" : KEY_WIMAX,
	"KEY_RFKILL" : KEY_RFKILL,
	"KEY_MICMUTE" : KEY_MICMUTE,
	"BTN_MISC" : BTN_MISC,
	"BTN_0" : BTN_0,
	"BTN_1" : BTN_1,
	"BTN_2" : BTN_2,
	"BTN_3" : BTN_3,
	"BTN_4" : BTN_4,
	"BTN_5" : BTN_5,
	"BTN_6" : BTN_6,
	"BTN_7" : BTN_7,
	"BTN_8" : BTN_8,
	"BTN_9" : BTN_9,
	"BTN_MOUSE" : BTN_MOUSE,
	"BTN_LEFT" : BTN_LEFT,
	"BTN_RIGHT" : BTN_RIGHT,
	"BTN_MIDDLE" : BTN_MIDDLE,
	"BTN_SIDE" : BTN_SIDE,
	"BTN_EXTRA" : BTN_EXTRA,
	"BTN_FORWARD" : BTN_FORWARD,
	"BTN_BACK" : BTN_BACK,
	"BTN_TASK" : BTN_TASK,
	"BTN_JOYSTICK" : BTN_JOYSTICK,
	"BTN_TRIGGER" : BTN_TRIGGER,
	"BTN_THUMB" : BTN_THUMB,
	"BTN_THUMB2" : BTN_THUMB2,
	"BTN_TOP" : BTN_TOP,
	"BTN_TOP2" : BTN_TOP2,
	"BTN_PINKIE" : BTN_PINKIE,
	"BTN_BASE" : BTN_BASE,
	"BTN_BASE2" : BTN_BASE2,
	"BTN_BASE3" : BTN_BASE3,
	"BTN_BASE4" : BTN_BASE4,
	"BTN_BASE5" : BTN_BASE5,
	"BTN_BASE6" : BTN_BASE6,
	"BTN_DEAD" : BTN_DEAD,
	"BTN_GAMEPAD" : BTN_GAMEPAD,
	"BTN_SOUTH" : BTN_SOUTH,
	"BTN_A" : BTN_A,
	"BTN_EAST" : BTN_EAST,
	"BTN_B" : BTN_B,
	"BTN_C" : BTN_C,
	"BTN_NORTH" : BTN_NORTH,
	"BTN_X" : BTN_X,
	"BTN_WEST" : BTN_WEST,
	"BTN_Y" : BTN_Y,
	"BTN_Z" : BTN_Z,
	"BTN_TL" : BTN_TL,
	"BTN_TR" : BTN_TR,
	"BTN_TL2" : BTN_TL2,
	"BTN_TR2" : BTN_TR2,
	"BTN_SELECT" : BTN_SELECT,
	"BTN_START" : BTN_START,
	"BTN_MODE" : BTN_MODE,
	"BTN_THUMBL" : BTN_THUMBL,
	"BTN_THUMBR" : BTN_THUMBR,
	"BTN_DIGI" : BTN_DIGI,
	"BTN_TOOL_PEN" : BTN_TOOL_PEN,
	"BTN_TOOL_RUBBER" : BTN_TOOL_RUBBER,
	"BTN_TOOL_BRUSH" : BTN_TOOL_BRUSH,
	"BTN_TOOL_PENCIL" : BTN_TOOL_PENCIL,
	"BTN_TOOL_AIRBRUSH" : BTN_TOOL_AIRBRUSH,
	"BTN_TOOL_FINGER" : BTN_TOOL_FINGER,
	"BTN_TOOL_MOUSE" : BTN_TOOL_MOUSE,
	"BTN_TOOL_LENS" : BTN_TOOL_LENS,
	"BTN_TOOL_QUINTTAP" : BTN_TOOL_QUINTTAP,
	"BTN_TOUCH" : BTN_TOUCH,
	"BTN_STYLUS" : BTN_STYLUS,
	"BTN_STYLUS2" : BTN_STYLUS2,
	"BTN_TOOL_DOUBLETAP" : BTN_TOOL_DOUBLETAP,
	"BTN_TOOL_TRIPLETAP" : BTN_TOOL_TRIPLETAP,
	"BTN_TOOL_QUADTAP" : BTN_TOOL_QUADTAP,
	"BTN_WHEEL" : BTN_WHEEL,
	"BTN_GEAR_DOWN" : BTN_GEAR_DOWN,
	"BTN_GEAR_UP" : BTN_GEAR_UP,
	"KEY_OK" : KEY_OK,
	"KEY_SELECT" : KEY_SELECT,
	"KEY_GOTO" : KEY_GOTO,
	"KEY_CLEAR" : KEY_CLEAR,
	"KEY_POWER2" : KEY_POWER2,
	"KEY_OPTION" : KEY_OPTION,
	"KEY_INFO" : KEY_INFO,
	"KEY_TIME" : KEY_TIME,
	"KEY_VENDOR" : KEY_VENDOR,
	"KEY_ARCHIVE" : KEY_ARCHIVE,
	"KEY_PROGRAM" : KEY_PROGRAM,
	"KEY_CHANNEL" : KEY_CHANNEL,
	"KEY_FAVORITES" : KEY_FAVORITES,
	"KEY_EPG" : KEY_EPG,
	"KEY_PVR" : KEY_PVR,
	"KEY_MHP" : KEY_MHP,
	"KEY_LANGUAGE" : KEY_LANGUAGE,
	"KEY_TITLE" : KEY_TITLE,
	"KEY_SUBTITLE" : KEY_SUBTITLE,
	"KEY_ANGLE" : KEY_ANGLE,
	"KEY_ZOOM" : KEY_ZOOM,
	"KEY_MODE" : KEY_MODE,
	"KEY_KEYBOARD" : KEY_KEYBOARD,
	"KEY_SCREEN" : KEY_SCREEN,
	"KEY_PC" : KEY_PC,
	"KEY_TV" : KEY_TV,
	"KEY_TV2" : KEY_TV2,
	"KEY_VCR" : KEY_VCR,
	"KEY_VCR2" : KEY_VCR2,
	"KEY_SAT" : KEY_SAT,
	"KEY_SAT2" : KEY_SAT2,
	"KEY_CD" : KEY_CD,
	"KEY_TAPE" : KEY_TAPE,
	"KEY_RADIO" : KEY_RADIO,
	"KEY_TUNER" : KEY_TUNER,
	"KEY_PLAYER" : KEY_PLAYER,
	"KEY_TEXT" : KEY_TEXT,
	"KEY_DVD" : KEY_DVD,
	"KEY_AUX" : KEY_AUX,
	"KEY_MP3" : KEY_MP3,
	"KEY_AUDIO" : KEY_AUDIO,
	"KEY_VIDEO" : KEY_VIDEO,
	"KEY_DIRECTORY" : KEY_DIRECTORY,
	"KEY_LIST" : KEY_LIST,
	"KEY_MEMO" : KEY_MEMO,
	"KEY_CALENDAR" : KEY_CALENDAR,
	"KEY_RED" : KEY_RED,
	"KEY_GREEN" : KEY_GREEN,
	"KEY_YELLOW" : KEY_YELLOW,
	"KEY_BLUE" : KEY_BLUE,
	"KEY_CHANNELUP" : KEY_CHANNELUP,
	"KEY_CHANNELDOWN" : KEY_CHANNELDOWN,
	"KEY_FIRST" : KEY_FIRST,
	"KEY_LAST" : KEY_LAST,
	"KEY_AB" : KEY_AB,
	"KEY_NEXT" : KEY_NEXT,
	"KEY_RESTART" : KEY_RESTART,
	"KEY_SLOW" : KEY_SLOW,
	"KEY_SHUFFLE" : KEY_SHUFFLE,
	"KEY_BREAK" : KEY_BREAK,
	"KEY_PREVIOUS" : KEY_PREVIOUS,
	"KEY_DIGITS" : KEY_DIGITS,
	"KEY_TEEN" : KEY_TEEN,
	"KEY_TWEN" : KEY_TWEN,
	"KEY_VIDEOPHONE" : KEY_VIDEOPHONE,
	"KEY_GAMES" : KEY_GAMES,
	"KEY_ZOOMIN" : KEY_ZOOMIN,
	"KEY_ZOOMOUT" : KEY_ZOOMOUT,
	"KEY_ZOOMRESET" : KEY_ZOOMRESET,
	"KEY_WORDPROCESSOR" : KEY_WORDPROCESSOR,
	"KEY_EDITOR" : KEY_EDITOR,
	"KEY_SPREADSHEET" : KEY_SPREADSHEET,
	"KEY_GRAPHICSEDITOR" : KEY_GRAPHICSEDITOR,
	"KEY_PRESENTATION" : KEY_PRESENTATION,
	"KEY_DATABASE" : KEY_DATABASE,
	"KEY_NEWS" : KEY_NEWS,
	"KEY_VOICEMAIL" : KEY_VOICEMAIL,
	"KEY_ADDRESSBOOK" : KEY_ADDRESSBOOK,
	"KEY_MESSENGER" : KEY_MESSENGER,
	"KEY_DISPLAYTOGGLE" : KEY_DISPLAYTOGGLE,
	"KEY_BRIGHTNESS_TOGGLE" : KEY_BRIGHTNESS_TOGGLE,
	"KEY_SPELLCHECK" : KEY_SPELLCHECK,
	"KEY_LOGOFF" : KEY_LOGOFF,
	"KEY_DOLLAR" : KEY_DOLLAR,
	"KEY_EURO" : KEY_EURO,
	"KEY_FRAMEBACK" : KEY_FRAMEBACK,
	"KEY_FRAMEFORWARD" : KEY_FRAMEFORWARD,
	"KEY_CONTEXT_MENU" : KEY_CONTEXT_MENU,
	"KEY_MEDIA_REPEAT" : KEY_MEDIA_REPEAT,
	"KEY_10CHANNELSUP" : KEY_10CHANNELSUP,
	"KEY_10CHANNELSDOWN" : KEY_10CHANNELSDOWN,
	"KEY_IMAGES" : KEY_IMAGES,
	"KEY_DEL_EOL" : KEY_DEL_EOL,
	"KEY_DEL_EOS" : KEY_DEL_EOS,
	"KEY_INS_LINE" : KEY_INS_LINE,
	"KEY_DEL_LINE" : KEY_DEL_LINE,
	"KEY_FN" : KEY_FN,
	"KEY_FN_ESC" : KEY_FN_ESC,
	"KEY_FN_F1" : KEY_FN_F1,
	"KEY_FN_F2" : KEY_FN_F2,
	"KEY_FN_F3" : KEY_FN_F3,
	"KEY_FN_F4" : KEY_FN_F4,
	"KEY_FN_F5" : KEY_FN_F5,
	"KEY_FN_F6" : KEY_FN_F6,
	"KEY_FN_F7" : KEY_FN_F7,
	"KEY_FN_F8" : KEY_FN_F8,
	"KEY_FN_F9" : KEY_FN_F9,
	"KEY_FN_F10" : KEY_FN_F10,
	"KEY_FN_F11" : KEY_FN_F11,
	"KEY_FN_F12" : KEY_FN_F12,
	"KEY_FN_1" : KEY_FN_1,
	"KEY_FN_2" : KEY_FN_2,
	"KEY_FN_D" : KEY_FN_D,
	"KEY_FN_E" : KEY_FN_E,
	"KEY_FN_F" : KEY_FN_F,
	"KEY_FN_S" : KEY_FN_S,
	"KEY_FN_B" : KEY_FN_B,
	"KEY_BRL_DOT1" : KEY_BRL_DOT1,
	"KEY_BRL_DOT2" : KEY_BRL_DOT2,
	"KEY_BRL_DOT3" : KEY_BRL_DOT3,
	"KEY_BRL_DOT4" : KEY_BRL_DOT4,
	"KEY_BRL_DOT5" : KEY_BRL_DOT5,
	"KEY_BRL_DOT6" : KEY_BRL_DOT6,
	"KEY_BRL_DOT7" : KEY_BRL_DOT7,
	"KEY_BRL_DOT8" : KEY_BRL_DOT8,
	"KEY_BRL_DOT9" : KEY_BRL_DOT9,
	"KEY_BRL_DOT10" : KEY_BRL_DOT10,
	"KEY_NUMERIC_0" : KEY_NUMERIC_0,
	"KEY_NUMERIC_1" : KEY_NUMERIC_1,
	"KEY_NUMERIC_2" : KEY_NUMERIC_2,
	"KEY_NUMERIC_3" : KEY_NUMERIC_3,
	"KEY_NUMERIC_4" : KEY_NUMERIC_4,
	"KEY_NUMERIC_5" : KEY_NUMERIC_5,
	"KEY_NUMERIC_6" : KEY_NUMERIC_6,
	"KEY_NUMERIC_7" : KEY_NUMERIC_7,
	"KEY_NUMERIC_8" : KEY_NUMERIC_8,
	"KEY_NUMERIC_9" : KEY_NUMERIC_9,
	"KEY_NUMERIC_STAR" : KEY_NUMERIC_STAR,
	"KEY_NUMERIC_POUND" : KEY_NUMERIC_POUND,
	"KEY_NUMERIC_A" : KEY_NUMERIC_A,
	"KEY_NUMERIC_B" : KEY_NUMERIC_B,
	"KEY_NUMERIC_C" : KEY_NUMERIC_C,
	"KEY_NUMERIC_D" : KEY_NUMERIC_D,
	"KEY_CAMERA_FOCUS" : KEY_CAMERA_FOCUS,
	"KEY_WPS_BUTTON" : KEY_WPS_BUTTON,
	"KEY_TOUCHPAD_TOGGLE" : KEY_TOUCHPAD_TOGGLE,
	"KEY_TOUCHPAD_ON" : KEY_TOUCHPAD_ON,
	"KEY_TOUCHPAD_OFF" : KEY_TOUCHPAD_OFF,
	"KEY_CAMERA_ZOOMIN" : KEY_CAMERA_ZOOMIN,
	"KEY_CAMERA_ZOOMOUT" : KEY_CAMERA_ZOOMOUT,
	"KEY_CAMERA_UP" : KEY_CAMERA_UP,
	"KEY_CAMERA_DOWN" : KEY_CAMERA_DOWN,
	"KEY_CAMERA_LEFT" : KEY_CAMERA_LEFT,
	"KEY_CAMERA_RIGHT" : KEY_CAMERA_RIGHT,
	"KEY_ATTENDANT_ON" : KEY_ATTENDANT_ON,
	"KEY_ATTENDANT_OFF" : KEY_ATTENDANT_OFF,
	"KEY_ATTENDANT_TOGGLE" : KEY_ATTENDANT_TOGGLE,
	"KEY_LIGHTS_TOGGLE" : KEY_LIGHTS_TOGGLE,
	"BTN_DPAD_UP" : BTN_DPAD_UP,
	"BTN_DPAD_DOWN" : BTN_DPAD_DOWN,
	"BTN_DPAD_LEFT" : BTN_DPAD_LEFT,
	"BTN_DPAD_RIGHT" : BTN_DPAD_RIGHT,
	"KEY_ALS_TOGGLE" : KEY_ALS_TOGGLE,
	"KEY_BUTTONCONFIG" : KEY_BUTTONCONFIG,
	"KEY_TASKMANAGER" : KEY_TASKMANAGER,
	"KEY_JOURNAL" : KEY_JOURNAL,
	"KEY_CONTROLPANEL" : KEY_CONTROLPANEL,
	"KEY_APPSELECT" : KEY_APPSELECT,
	"KEY_SCREENSAVER" : KEY_SCREENSAVER,
	"KEY_VOICECOMMAND" : KEY_VOICECOMMAND,
	"KEY_BRIGHTNESS_MIN" : KEY_BRIGHTNESS_MIN,
	"KEY_BRIGHTNESS_MAX" : KEY_BRIGHTNESS_MAX,
	"KEY_KBDINPUTASSIST_PREV" : KEY_KBDINPUTASSIST_PREV,
	"KEY_KBDINPUTASSIST_NEXT" : KEY_KBDINPUTASSIST_NEXT,
	"KEY_KBDINPUTASSIST_PREVGROUP" : KEY_KBDINPUTASSIST_PREVGROUP,
	"KEY_KBDINPUTASSIST_NEXTGROUP" : KEY_KBDINPUTASSIST_NEXTGROUP,
	"KEY_KBDINPUTASSIST_ACCEPT" : KEY_KBDINPUTASSIST_ACCEPT,
	"KEY_KBDINPUTASSIST_CANCEL" : KEY_KBDINPUTASSIST_CANCEL,
	"BTN_TRIGGER_HAPPY" : BTN_TRIGGER_HAPPY,
	"BTN_TRIGGER_HAPPY1" : BTN_TRIGGER_HAPPY1,
	"BTN_TRIGGER_HAPPY2" : BTN_TRIGGER_HAPPY2,
	"BTN_TRIGGER_HAPPY3" : BTN_TRIGGER_HAPPY3,
	"BTN_TRIGGER_HAPPY4" : BTN_TRIGGER_HAPPY4,
	"BTN_TRIGGER_HAPPY5" : BTN_TRIGGER_HAPPY5,
	"BTN_TRIGGER_HAPPY6" : BTN_TRIGGER_HAPPY6,
	"BTN_TRIGGER_HAPPY7" : BTN_TRIGGER_HAPPY7,
	"BTN_TRIGGER_HAPPY8" : BTN_TRIGGER_HAPPY8,
	"BTN_TRIGGER_HAPPY9" : BTN_TRIGGER_HAPPY9,
	"BTN_TRIGGER_HAPPY10" : BTN_TRIGGER_HAPPY10,
	"BTN_TRIGGER_HAPPY11" : BTN_TRIGGER_HAPPY11,
	"BTN_TRIGGER_HAPPY12" : BTN_TRIGGER_HAPPY12,
	"BTN_TRIGGER_HAPPY13" : BTN_TRIGGER_HAPPY13,
	"BTN_TRIGGER_HAPPY14" : BTN_TRIGGER_HAPPY14,
	"BTN_TRIGGER_HAPPY15" : BTN_TRIGGER_HAPPY15,
	"BTN_TRIGGER_HAPPY16" : BTN_TRIGGER_HAPPY16,
	"BTN_TRIGGER_HAPPY17" : BTN_TRIGGER_HAPPY17,
	"BTN_TRIGGER_HAPPY18" : BTN_TRIGGER_HAPPY18,
	"BTN_TRIGGER_HAPPY19" : BTN_TRIGGER_HAPPY19,
	"BTN_TRIGGER_HAPPY20" : BTN_TRIGGER_HAPPY20,
	"BTN_TRIGGER_HAPPY21" : BTN_TRIGGER_HAPPY21,
	"BTN_TRIGGER_HAPPY22" : BTN_TRIGGER_HAPPY22,
	"BTN_TRIGGER_HAPPY23" : BTN_TRIGGER_HAPPY23,
	"BTN_TRIGGER_HAPPY24" : BTN_TRIGGER_HAPPY24,
	"BTN_TRIGGER_HAPPY25" : BTN_TRIGGER_HAPPY25,
	"BTN_TRIGGER_HAPPY26" : BTN_TRIGGER_HAPPY26,
	"BTN_TRIGGER_HAPPY27" : BTN_TRIGGER_HAPPY27,
	"BTN_TRIGGER_HAPPY28" : BTN_TRIGGER_HAPPY28,
	"BTN_TRIGGER_HAPPY29" : BTN_TRIGGER_HAPPY29,
	"BTN_TRIGGER_HAPPY30" : BTN_TRIGGER_HAPPY30,
	"BTN_TRIGGER_HAPPY31" : BTN_TRIGGER_HAPPY31,
	"BTN_TRIGGER_HAPPY32" : BTN_TRIGGER_HAPPY32,
	"BTN_TRIGGER_HAPPY33" : BTN_TRIGGER_HAPPY33,
	"BTN_TRIGGER_HAPPY34" : BTN_TRIGGER_HAPPY34,
	"BTN_TRIGGER_HAPPY35" : BTN_TRIGGER_HAPPY35,
	"BTN_TRIGGER_HAPPY36" : BTN_TRIGGER_HAPPY36,
	"BTN_TRIGGER_HAPPY37" : BTN_TRIGGER_HAPPY37,
	"BTN_TRIGGER_HAPPY38" : BTN_TRIGGER_HAPPY38,
	"BTN_TRIGGER_HAPPY39" : BTN_TRIGGER_HAPPY39,
	"BTN_TRIGGER_HAPPY40" : BTN_TRIGGER_HAPPY40,

	"KEY_EQUALS" : KEY_EQUALS,
	"KEY_VOLUME_DOWN" : KEY_VOLUME_DOWN,
	"KEY_VOLUME_UP" : KEY_VOLUME_UP,
	"KEY_VOLUME_MUTE" : KEY_VOLUME_MUTE,
	"KEY_MM_PREVIOUS_TRACK" : KEY_MM_PREVIOUS_TRACK,
	"KEY_MM_NEXT_TRACK" : KEY_MM_NEXT_TRACK,
	"KEY_MM_PLAY_PAUSE" : KEY_MM_PLAY_PAUSE,
	"KEY_MM_STOP" : KEY_MM_STOP,
	"KEY_MM_SELECT" : KEY_MM_SELECT,
	"KEY_MY_COMPUTER" : KEY_MY_COMPUTER,
	"KEY_MEDIA_PLAYER" : KEY_MEDIA_PLAYER,
	"KEY_EMAIL_CLIENT" : KEY_EMAIL_CLIENT,
	"KEY_CALCULATOR" : KEY_CALCULATOR,
	"KEY_WWW_SEARCH" : KEY_WWW_SEARCH,
	"KEY_WWW_FAVORITES" : KEY_WWW_FAVORITES,
	"KEY_WWW_REFRESH" : KEY_WWW_REFRESH,
	"KEY_WWW_STOP" : KEY_WWW_STOP,
	"KEY_WWW_FORWARD" : KEY_WWW_FORWARD,
	"KEY_WWW_BACK" : KEY_WWW_BACK,
	"KEY_WWW_HOME" : KEY_WWW_HOME,
	"KEY_APIC_POWER" : KEY_APIC_POWER,
	"KEY_APIC_SLEEP" : KEY_APIC_SLEEP,
	"KEY_APIC_WAKE" : KEY_APIC_WAKE,
	"KEY_PRINTSCREEN" : KEY_PRINTSCREEN,
	"KEY_PGUP" : KEY_PGUP,
	"KEY_PGDOWN" : KEY_PGDOWN,
	"KEY_BACKTICK" : KEY_BACKTICK,
	"KEY_GRAVE_ACCENT" : KEY_GRAVE_ACCENT,
	"KEY_LBRACKET" : KEY_LBRACKET,
	"KEY_RBRACKET" : KEY_RBRACKET,
	"KEY_SINGLEQUOTE" : KEY_SINGLEQUOTE,
	"KEY_NUMBERSIGN" : KEY_NUMBERSIGN,
	"KEY_LSHIFT" : KEY_LSHIFT,
	"KEY_LESS" : KEY_LESS,
	"KEY_RSHIFT" : KEY_RSHIFT,
	"KEY_LCTRL" : KEY_LCTRL,
	"KEY_LGUI" : KEY_LGUI,
	"KEY_LALT" : KEY_LALT,
	"KEY_RALT" : KEY_RALT,
	"KEY_RGUI" : KEY_RGUI,
	"KEY_APPS" : KEY_APPS,
	"KEY_RCTRL" : KEY_RCTRL,
	"KEY_ALTGR" : KEY_ALTGR,
	"KEY_LMETA" : KEY_LMETA,
	"KEY_RMETA" : KEY_RMETA,
	"KEY_KP_NUMLOCK" : KEY_KP_NUMLOCK,
	"KEY_KP_SLASH" : KEY_KP_SLASH,
	"KEY_KP_STAR" : KEY_KP_STAR,
	"KEY_KP_MINUS" : KEY_KP_MINUS,
	"KEY_KP_7" : KEY_KP_7,
	"KEY_KP_8" : KEY_KP_8,
	"KEY_KP_9" : KEY_KP_9,
	"KEY_KP_PLUS" : KEY_KP_PLUS,
	"KEY_KP_4" : KEY_KP_4,
	"KEY_KP_5" : KEY_KP_5,
	"KEY_KP_6" : KEY_KP_6,
	"KEY_KP_1" : KEY_KP_1,
	"KEY_KP_2" : KEY_KP_2,
	"KEY_KP_3" : KEY_KP_3,
	"KEY_KP_ENTER" : KEY_KP_ENTER,
	"KEY_KP_0" : KEY_KP_0,
	"KEY_KP_DOT" : KEY_KP_DOT,
	"KEY_KP_DIVIDE" : KEY_KP_DIVIDE,
	"KEY_KP_MULTIPLY" : KEY_KP_MULTIPLY,
	"KEY_KP_SUBTRACT" : KEY_KP_SUBTRACT,
	"KEY_KP_ADD" : KEY_KP_ADD,
	"KEY_KP_DECIMAL" : KEY_KP_DECIMAL,
	"KEY_KP_COMMA" : KEY_KP_COMMA,
};

global final knownModifierFlags: {string: int} = {
	"lctrl" : KEYMOD_LCTRL,
	"rctrl" : KEYMOD_RCTRL,
	"lshift" : KEYMOD_LSHIFT,
	"rshift" : KEYMOD_RSHIFT,
	"lgui" : KEYMOD_LGUI,
	"rgui" : KEYMOD_RGUI,
	"lalt" : KEYMOD_LALT,
	"ralt" : KEYMOD_RALT,
	"capslock" : KEYMOD_CAPSLOCK,
};

global final knownModifierFlagCombinations: {string: {int...}} = {
	"ctrl"  : {
		KEYMOD_LCTRL,
		KEYMOD_RCTRL,
		KEYMOD_LCTRL | KEYMOD_RCTRL,
		KEYMOD_CAPSLOCK | KEYMOD_LCTRL,
		KEYMOD_CAPSLOCK | KEYMOD_RCTRL,
		KEYMOD_CAPSLOCK | KEYMOD_LCTRL | KEYMOD_RCTRL
	},
	"shift" : {
		KEYMOD_LSHIFT,
		KEYMOD_RSHIFT,
		KEYMOD_LSHIFT | KEYMOD_RSHIFT,
		KEYMOD_CAPSLOCK
	},
	"gui"   : {
		KEYMOD_LGUI,
		KEYMOD_RGUI,
		KEYMOD_LGUI | KEYMOD_RGUI,
		KEYMOD_CAPSLOCK | KEYMOD_LGUI,
		KEYMOD_CAPSLOCK | KEYMOD_RGUI,
		KEYMOD_CAPSLOCK | KEYMOD_LGUI | KEYMOD_RGUI
	},
	"alt"   : {
		KEYMOD_LALT,
		KEYMOD_RALT,
		KEYMOD_LALT | KEYMOD_RALT,
		KEYMOD_CAPSLOCK | KEYMOD_LALT,
		KEYMOD_CAPSLOCK | KEYMOD_RALT,
		KEYMOD_CAPSLOCK | KEYMOD_LALT | KEYMOD_RALT
	},
	"altgr" : {
		KEYMOD_RALT,
		KEYMOD_RALT | KEYMOD_LCTRL,
		KEYMOD_RALT | KEYMOD_RCTRL,
		KEYMOD_LALT | KEYMOD_LCTRL,
		KEYMOD_LALT | KEYMOD_RCTRL,
		KEYMOD_CAPSLOCK | KEYMOD_RALT,
		KEYMOD_CAPSLOCK | KEYMOD_RALT | KEYMOD_LCTRL,
		KEYMOD_CAPSLOCK | KEYMOD_RALT | KEYMOD_RCTRL,
		KEYMOD_CAPSLOCK | KEYMOD_LALT | KEYMOD_LCTRL,
		KEYMOD_CAPSLOCK | KEYMOD_LALT | KEYMOD_RCTRL,
	},
};


function parserError(fp: File | string, lineno: int, message: string) {
	if (fp is File)
		fp = fp.filename;
	print fs.abspath(fp),;
	print "(",;
	print 1 + lineno,;
	print ") : Error : ",;
	print message;
	throw Error("Parser error : " + message);
}

@@Parse a given keymap definitions text file @fp and return the mappings it defines
function parseKeymap(fp: File): {int: {int : string}} {
	local lineno = 0;
	local mappedKeys: {(int, int)...} = HashSet();
	for (local l: fp) {
		l = l.strip();
		if (!l || l.startswith("#"))
			goto nextline;
		local mappedStringStart = l.find("'");
		if (mappedStringStart < 0) {
			mappedStringStart = l.find("\"");
			if (mappedStringStart < 0)
				parserError(fp, lineno, "Missing mapping string in line " + repr(l));
		}
		local mappedString = l[mappedStringStart+1:];
		if (!mappedString.endswith(l[mappedStringStart]))
			parserError(fp, lineno, "Missing end-of-string of mapped string in line: " + repr(l));
		try {
			mappedString = mappedString[:-1].decode("utf-8").decode("c-escape");
		} catch (e...) {
			parserError(fp, lineno, "Invalid c-string " + repr(mappedString) + " (" + repr(e) + ") (in line " + repr(l) + ")");
		}
		local unparsed_l = l[:mappedStringStart];
		if (!unparsed_l.endswith(":"))
			parserError(fp, lineno, "Missing `:' before mapping string (in line " + repr(l) + ")");
		unparsed_l = unparsed_l[:-1].rstrip();
		local keyName = unparsed_l;
		local mods = { 0 };
		if (":" in unparsed_l) {
			local modsString;
			keyName, none, modsString = unparsed_l.partition(":")...;
			keyName = keyName.rstrip();
			modsString = modsString.lstrip();
			local comb = knownModifierFlagCombinations.get(modsString);
			if (comb !is none) {
				mods = comb;
			} else {
				mods = [];
				for (local flagset: modsString.split(",")) {
					local flags_value = 0;
					for (local flag: flagset.split("|")) {
						flag = flag.strip();
						local flagval = knownModifierFlags.get(flag);
						if (flagval is none) {
							try {
								flagval = int(flag);
							} catch (e...) {
								parserError(fp, lineno, "Invalid flag name: " + repr(flag) + " (" + repr(e) + ")");
							}
						}
						flags_value |= flagval;
					}
					mods.append(flags_value);
				}
			}
		}
		local keyId = knownKeyNames.get(keyName);
		if (keyId is none) {
			try {
				keyId = int(keyName);
			} catch (e...) {
				keyId = knownKeyNames.get("KEY_" + keyName.upper());
				if (keyId is none) {
					parserError(fp, lineno, "Invalid key name: " + repr(keyName) + " (" + repr(e) + ")");
				}
			}
		}
		for (local m: mods) {
			local pair = (keyId, m);
			if (pair in mappedKeys)
				parserError(fp, lineno, "Duplicate definition for key " + repr(keyName) + " with modifiers " + repr(m));
			mappedKeys.insert(pair);
		}
		yield (keyId, for (local m: mods) (m, mappedString));
nextline:
		++lineno;
	}
}
