diff -Naur tcc-0.9.27-orig/libtcc.c tcc-0.9.27/libtcc.c
--- tcc-0.9.27-orig/libtcc.c	2017-12-17 09:27:05.000000000 +0100
+++ tcc-0.9.27/libtcc.c	2022-03-11 12:45:52.141009200 +0100
@@ -817,6 +817,9 @@
     tcc_define_symbol(s, "__unix__", NULL);
     tcc_define_symbol(s, "__unix", NULL);
     tcc_define_symbol(s, "unix", NULL);
+# ifdef TCC_TARGET_KOS
+    tcc_define_symbol(s, "__KOS__", NULL);
+# else
 # if defined(__linux__)
     tcc_define_symbol(s, "__linux__", NULL);
     tcc_define_symbol(s, "__linux", NULL);
@@ -835,6 +838,7 @@
 # if defined(__OpenBSD__)
     tcc_define_symbol(s, "__OpenBSD__", "__OpenBSD__");
 # endif
+# endif
 #endif
 
     /* TinyCC & gcc defines */
@@ -974,9 +978,17 @@
     /* add libc crt1/crti objects */
     if ((output_type == TCC_OUTPUT_EXE || output_type == TCC_OUTPUT_DLL) &&
         !s->nostdlib) {
+#ifdef TCC_TARGET_KOS
+        if (output_type == TCC_OUTPUT_DLL)
+            tcc_add_crt(s, "crt0S.o");
+        else {
+            tcc_add_crt(s, "crt0.o");
+        }
+#else
         if (output_type != TCC_OUTPUT_DLL)
             tcc_add_crt(s, "crt1.o");
         tcc_add_crt(s, "crti.o");
+#endif
     }
 #endif
     return 0;
diff -Naur tcc-0.9.27-orig/tccelf.c tcc-0.9.27/tccelf.c
--- tcc-0.9.27-orig/tccelf.c	2017-12-17 09:27:05.000000000 +0100
+++ tcc-0.9.27/tccelf.c	2020-04-30 13:36:40.243380700 +0200
@@ -1192,6 +1192,9 @@
     /* add libc */
     if (!s1->nostdlib) {
         tcc_add_library_err(s1, "c");
+#ifdef TCC_TARGET_KOS
+        tcc_add_library_err(s1, "dl");
+#endif /* TCC_TARGET_KOS */
 #ifdef TCC_LIBGCC
         if (!s1->static_link) {
             if (TCC_LIBGCC[0] == '/')
@@ -1201,9 +1204,11 @@
         }
 #endif
         tcc_add_support(s1, TCC_LIBTCC1);
+#ifndef TCC_TARGET_KOS
         /* add crt end if not memory output */
         if (s1->output_type != TCC_OUTPUT_MEMORY)
             tcc_add_crt(s1, "crtn.o");
+#endif /* !TCC_TARGET_KOS */
     }
 }
 
diff -Naur tcc-0.9.27-orig/tccrun.c tcc-0.9.27/tccrun.c
--- tcc-0.9.27-orig/tccrun.c	2017-12-17 09:27:05.000000000 +0100
+++ tcc-0.9.27/tccrun.c	2022-03-11 12:47:40.108619300 +0100
@@ -69,6 +69,13 @@
         return -1;
 
 #ifdef HAVE_SELINUX
+#ifdef __KOS__
+    /* Using mmap instead of malloc */
+    ptr = mmap (NULL, size, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_ANONYMOUS, -1, 0);
+    if (ptr == MAP_FAILED)
+        tcc_error("tccrun: could not map memory");
+    dynarray_add(&s1->runtime_mem, &s1->nb_runtime_mem, (void*)(addr_t)size);
+#else /* __KOS__ */
 {
     /* Using mmap instead of malloc */
     void *prx;
@@ -85,6 +92,7 @@
     dynarray_add(&s1->runtime_mem, &s1->nb_runtime_mem, prx);
     ptr_diff = (char*)prx - (char*)ptr;
 }
+#endif /* !__KOS__ */
 #else
     ptr = tcc_malloc(size);
 #endif
@@ -100,7 +108,9 @@
     for (i = 0; i < s1->nb_runtime_mem; ++i) {
 #ifdef HAVE_SELINUX
         unsigned size = (unsigned)(addr_t)s1->runtime_mem[i++];
+#ifndef __KOS__
         munmap(s1->runtime_mem[i++], size);
+#endif /* !__KOS__ */
         munmap(s1->runtime_mem[i], size);
 #else
 #ifdef _WIN64
