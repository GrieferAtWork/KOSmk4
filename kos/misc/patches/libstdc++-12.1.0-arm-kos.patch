diff -Naur arm-kos-orig/arm/autofp/v5te/fpu/bits/c++locale.h arm-kos/arm/autofp/v5te/fpu/bits/c++locale.h
--- arm-kos-orig/arm/autofp/v5te/fpu/bits/c++locale.h	2022-08-13 20:39:43.101519300 +0200
+++ arm-kos/arm/autofp/v5te/fpu/bits/c++locale.h	2022-08-13 20:48:03.892713900 +0200
@@ -53,7 +53,7 @@
   // fall back to the unsafe vsprintf which, in general, can be dangerous
   // and should be avoided.
   inline int
-  __convert_from_v(const __c_locale&, char* __out,
+  __convert_from_v(const __c_locale&, char* ___out,
 		   const int __size __attribute__((__unused__)),
 		   const char* __fmt, ...)
   {
@@ -71,9 +71,9 @@
     __builtin_va_start(__args, __fmt);
 
 #if _GLIBCXX_USE_C99_STDIO && !_GLIBCXX_HAVE_BROKEN_VSNPRINTF
-    const int __ret = __builtin_vsnprintf(__out, __size, __fmt, __args);
+    const int __ret = __builtin_vsnprintf(___out, __size, __fmt, __args);
 #else
-    const int __ret = __builtin_vsprintf(__out, __fmt, __args);
+    const int __ret = __builtin_vsprintf(___out, __fmt, __args);
 #endif
 
     __builtin_va_end(__args);
diff -Naur arm-kos-orig/bits/c++locale.h arm-kos/bits/c++locale.h
--- arm-kos-orig/bits/c++locale.h	2022-08-13 20:38:30.531800300 +0200
+++ arm-kos/bits/c++locale.h	2022-08-13 20:48:03.952564500 +0200
@@ -53,7 +53,7 @@
   // fall back to the unsafe vsprintf which, in general, can be dangerous
   // and should be avoided.
   inline int
-  __convert_from_v(const __c_locale&, char* __out,
+  __convert_from_v(const __c_locale&, char* ___out,
 		   const int __size __attribute__((__unused__)),
 		   const char* __fmt, ...)
   {
@@ -71,9 +71,9 @@
     __builtin_va_start(__args, __fmt);
 
 #if _GLIBCXX_USE_C99_STDIO && !_GLIBCXX_HAVE_BROKEN_VSNPRINTF
-    const int __ret = __builtin_vsnprintf(__out, __size, __fmt, __args);
+    const int __ret = __builtin_vsnprintf(___out, __size, __fmt, __args);
 #else
-    const int __ret = __builtin_vsprintf(__out, __fmt, __args);
+    const int __ret = __builtin_vsprintf(___out, __fmt, __args);
 #endif
 
     __builtin_va_end(__args);
diff -Naur arm-kos-orig/thumb/autofp/v7/fpu/bits/c++locale.h arm-kos/thumb/autofp/v7/fpu/bits/c++locale.h
--- arm-kos-orig/thumb/autofp/v7/fpu/bits/c++locale.h	2022-08-13 20:40:17.322058800 +0200
+++ arm-kos/thumb/autofp/v7/fpu/bits/c++locale.h	2022-08-13 20:48:04.003011500 +0200
@@ -53,7 +53,7 @@
   // fall back to the unsafe vsprintf which, in general, can be dangerous
   // and should be avoided.
   inline int
-  __convert_from_v(const __c_locale&, char* __out,
+  __convert_from_v(const __c_locale&, char* ___out,
 		   const int __size __attribute__((__unused__)),
 		   const char* __fmt, ...)
   {
@@ -71,9 +71,9 @@
     __builtin_va_start(__args, __fmt);
 
 #if _GLIBCXX_USE_C99_STDIO && !_GLIBCXX_HAVE_BROKEN_VSNPRINTF
-    const int __ret = __builtin_vsnprintf(__out, __size, __fmt, __args);
+    const int __ret = __builtin_vsnprintf(___out, __size, __fmt, __args);
 #else
-    const int __ret = __builtin_vsprintf(__out, __fmt, __args);
+    const int __ret = __builtin_vsprintf(___out, __fmt, __args);
 #endif
 
     __builtin_va_end(__args);
diff -Naur arm-kos-orig/thumb/bits/c++locale.h arm-kos/thumb/bits/c++locale.h
--- arm-kos-orig/thumb/bits/c++locale.h	2022-08-13 20:39:09.481705900 +0200
+++ arm-kos/thumb/bits/c++locale.h	2022-08-13 20:48:04.062749400 +0200
@@ -53,7 +53,7 @@
   // fall back to the unsafe vsprintf which, in general, can be dangerous
   // and should be avoided.
   inline int
-  __convert_from_v(const __c_locale&, char* __out,
+  __convert_from_v(const __c_locale&, char* ___out,
 		   const int __size __attribute__((__unused__)),
 		   const char* __fmt, ...)
   {
@@ -71,9 +71,9 @@
     __builtin_va_start(__args, __fmt);
 
 #if _GLIBCXX_USE_C99_STDIO && !_GLIBCXX_HAVE_BROKEN_VSNPRINTF
-    const int __ret = __builtin_vsnprintf(__out, __size, __fmt, __args);
+    const int __ret = __builtin_vsnprintf(___out, __size, __fmt, __args);
 #else
-    const int __ret = __builtin_vsprintf(__out, __fmt, __args);
+    const int __ret = __builtin_vsprintf(___out, __fmt, __args);
 #endif
 
     __builtin_va_end(__args);
