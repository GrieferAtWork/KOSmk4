diff -Naur libpciaccess-0.16-orig/scanpci/scanpci.c libpciaccess-0.16/scanpci/scanpci.c
--- libpciaccess-0.16-orig/scanpci/scanpci.c	2020-08-13 13:23:17.233174500 +0200
+++ libpciaccess-0.16/scanpci/scanpci.c	2020-08-13 13:27:05.381268300 +0200
@@ -21,7 +21,7 @@
  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  * DEALINGS IN THE SOFTWARE.
  */
-
+#define _BSD_SOURCE 1
 #ifdef HAVE_CONFIG_H
 #include "config.h"
 #endif
@@ -30,21 +30,7 @@
 #include <stdio.h>
 #include <unistd.h>
 #include <inttypes.h>
-
-#ifdef HAVE_ERR_H
 #include <err.h>
-#else
-# include <errno.h>
-# include <string.h>
-# define err(exitcode, format, args...) \
-   errx(exitcode, format ": %s", ## args, strerror(errno))
-# define errx(exitcode, format, args...) \
-   { warnx(format, ## args); exit(exitcode); }
-# define warn(format, args...) \
-   warnx(format ": %s", ## args, strerror(errno))
-# define warnx(format, args...) \
-   fprintf(stderr, format "\n", ## args)
-#endif
 
 #include "pciaccess.h"
 #include "pciaccess_private.h"
@@ -227,7 +213,7 @@
 
     ret = pci_system_init();
     if (ret != 0)
-	err(1, "Couldn't initialize PCI system");
+	errc(1, ret, "Couldn't initialize PCI system");
 
     iter = pci_slot_match_iterator_create( NULL );
 
diff -Naur libpciaccess-0.16-orig/src/Makefile.am libpciaccess-0.16/src/Makefile.am
--- libpciaccess-0.16-orig/src/Makefile.am	2020-08-13 13:23:17.233174500 +0200
+++ libpciaccess-0.16/src/Makefile.am	2020-08-08 15:57:45.347290700 +0200
@@ -27,8 +27,8 @@
 lib_LTLIBRARIES = libpciaccess.la
 
 if LINUX
-OS_SUPPORT = linux_sysfs.c linux_devmem.c linux_devmem.h
-VGA_ARBITER = common_vgaarb.c
+OS_SUPPORT = x86_pci.c x86_pci.h linux_devmem.c linux_devmem.h
+VGA_ARBITER = common_vgaarb_stub.c
 endif
 
 if FREEBSD
diff -Naur libpciaccess-0.16-orig/src/common_init.c libpciaccess-0.16/src/common_init.c
--- libpciaccess-0.16-orig/src/common_init.c	2020-08-13 13:23:17.233174500 +0200
+++ libpciaccess-0.16/src/common_init.c	2020-08-08 15:57:45.348288100 +0200
@@ -67,7 +67,7 @@
     err = pci_system_solx_devfs_create();
 #elif defined(__GNU__)
     err = pci_system_hurd_create();
-#elif defined(__CYGWIN__)
+#elif defined(__CYGWIN__) || defined(__KOS__)
     err = pci_system_x86_create();
 #else
 # error "Unsupported OS"
diff -Naur libpciaccess-0.16-orig/src/pciaccess_private.h libpciaccess-0.16/src/pciaccess_private.h
--- libpciaccess-0.16-orig/src/pciaccess_private.h	2020-08-13 13:23:17.248284600 +0200
+++ libpciaccess-0.16/src/pciaccess_private.h	2020-08-08 15:57:45.349285300 +0200
@@ -46,6 +46,7 @@
  * new version, so warn unconditionally.
  */
 #include <fcntl.h>
+#include <stddef.h>
 
 #ifndef O_CLOEXEC
 #warning O_CLOEXEC not available, please upgrade.
diff -Naur libpciaccess-0.16-orig/src/x86_pci.c libpciaccess-0.16/src/x86_pci.c
--- libpciaccess-0.16-orig/src/x86_pci.c	2020-08-13 13:23:17.248284600 +0200
+++ libpciaccess-0.16/src/x86_pci.c	2020-08-08 15:57:45.350282900 +0200
@@ -58,11 +58,11 @@
     return errno;
 }
 
-#elif defined(__GLIBC__)
+#elif defined(__GLIBC__) || defined(__KOS__)
 
 #include <sys/io.h>
 
-static int
+int
 x86_enable_io(void)
 {
     if (!iopl(3))
@@ -70,7 +70,7 @@
     return errno;
 }
 
-static int
+int
 x86_disable_io(void)
 {
     if (!iopl(0))
