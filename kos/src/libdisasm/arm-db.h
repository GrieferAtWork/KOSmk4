/* Copyright (c) 2019-2022 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2019-2022 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */
#ifndef GUARD_LIBDISASM_ARM_DB_H
#define GUARD_LIBDISASM_ARM_DB_H 1
#define _KOS_SOURCE 1

#include "api.h"
/**/

#include <hybrid/byteorder.h>
#include <hybrid/typecore.h>

#include <kos/types.h>

#include <string.h>

DECL_BEGIN

struct arm_instruction {
	/* The `ai_repr' field is set-up as follow:
	 * >> [F_*] "mnemonic" [S_*] ["\t" [O_*]] */
	uint32_t                      ai_mask;  /* Mask of bits to test with `ai_bits' */
	uint32_t                      ai_bits;  /* Mask of mandatory 1-bits */
	COMPILER_FLEXIBLE_ARRAY(char, ai_repr); /* Opcode repr */
	/* Next instruction begins at `CEIL_ALIGN(strend(ai_repr) + 1, 4)' */
};

/* Return a pointer to the instruction that follows `self' */
#define arm_instruction_next(self) \
	((struct arm_instruction *)((uintptr_t)(strend((self)->ai_repr) + 1 + 3) & ~3))

struct arm_instruction_group {
	uint32_t aig_mask;  /* Mask of bits to test with `aig_bits' */
	uint32_t aig_bits;  /* Mask of mandatory 1-bits */
	uint16_t aig_size;  /* # of instructions in this group */
	uint16_t aig_offs;  /* Offset of group into instruction database */
};


#define U16 __UINT16_C
#define U32 __UINT32_C

/* Encode a 32-bit unsigned integer into a byte-stream */
#ifdef __INTELLISENSE__
#define P32(w) 0, 0, 0, 0
#elif __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__
#define P32(w) U32(w) & 0xff, (U32(w) >> 8) & 0xff, (U32(w) >> 16) & 0xff, (U32(w) >> 24) & 0xff
#else /* __BYTE_ORDER__ == ... */
#define P32(w) (U32(w) >> 24) & 0xff, (U32(w) >> 16) & 0xff, (U32(w) >> 8) & 0xff, U32(w) & 0xff
#endif /* __BYTE_ORDER__ != ... */




/************************************************************************/
/* AUTO-GENERATED CODE                                                  */
/************************************************************************/
/* compiler: "./arm-db.dee"                                             */
/* source:   "./arm-db"                                                 */
/************************************************************************/

/* clang-format off */
/*[[[deemon import * from ".arm-db"; printInstructionDatabase();]]]*/
PRIVATE struct arm_instruction_group const t16_instruction_groups[72] = {
	{ U32(0x0000ffc0), U32(0x00004140), U16(1), U16(0x0000) },
	{ U32(0x0000f800), U32(0x0000a800), U16(1), U16(0x0011) },
	{ U32(0x0000ff00), U32(0x00004400), U16(1), U16(0x0025) },
	{ U32(0x0000ff80), U32(0x0000b000), U16(1), U16(0x0036) },
	{ U32(0x0000fe00), U32(0x00001c00), U16(1), U16(0x004b) },
	{ U32(0x0000fe00), U32(0x00001800), U16(1), U16(0x0060) },
	{ U32(0x0000f800), U32(0x00003000), U16(1), U16(0x0074) },
	{ U32(0x0000f800), U32(0x0000a000), U16(1), U16(0x0088) },
	{ U32(0x0000ffc0), U32(0x00004000), U16(2), U16(0x0099) },
	{ U32(0x0000ffc0), U32(0x00004100), U16(2), U16(0x00c1) },
	{ U32(0x0000f800), U32(0x00001000), U16(1), U16(0x00e9) },
	{ U32(0x0000f000), U32(0x0000d000), U16(2), U16(0x00fe) },
	{ U32(0x0000f800), U32(0x0000e000), U16(1), U16(0x011f) },
	{ U32(0x0000ffc0), U32(0x00004380), U16(2), U16(0x012f) },
	{ U32(0x0000ff00), U32(0x0000be00), U16(1), U16(0x0157) },
	{ U32(0x0000ff87), U32(0x00004780), U16(1), U16(0x0168) },
	{ U32(0x0000ff87), U32(0x00004700), U16(1), U16(0x0178) },
	{ U32(0x0000fd00), U32(0x0000b100), U16(1), U16(0x0189) },
	{ U32(0x0000fd00), U32(0x0000b900), U16(1), U16(0x0199) },
	{ U32(0x0000ffc0), U32(0x000042c0), U16(1), U16(0x01aa) },
	{ U32(0x0000f800), U32(0x00002800), U16(1), U16(0x01bb) },
	{ U32(0x0000ffc0), U32(0x00004280), U16(1), U16(0x01cf) },
	{ U32(0x0000ff00), U32(0x00004500), U16(1), U16(0x01e0) },
	{ U32(0x0000ffc0), U32(0x00004040), U16(1), U16(0x01f1) },
	{ U32(0x0000ff00), U32(0x0000bf00), U16(6), U16(0x0202) },
	{ U32(0x0000f800), U32(0x0000c800), U16(1), U16(0x0263) },
	{ U32(0x0000f800), U32(0x00006800), U16(1), U16(0x0277) },
	{ U32(0x0000f800), U32(0x00004800), U16(1), U16(0x028c) },
	{ U32(0x0000fe00), U32(0x00005800), U16(1), U16(0x029d) },
	{ U32(0x0000f800), U32(0x00009800), U16(1), U16(0x02b1) },
	{ U32(0x0000fe00), U32(0x00005c00), U16(1), U16(0x02c9) },
	{ U32(0x0000f800), U32(0x00007800), U16(1), U16(0x02de) },
	{ U32(0x0000fe00), U32(0x00005a00), U16(1), U16(0x02f6) },
	{ U32(0x0000f800), U32(0x00008800), U16(1), U16(0x030b) },
	{ U32(0x0000fe00), U32(0x00005600), U16(1), U16(0x0323) },
	{ U32(0x0000fe00), U32(0x00005e00), U16(1), U16(0x033b) },
	{ U32(0x0000ffc0), U32(0x00004080), U16(2), U16(0x0353) },
	{ U32(0x0000f800), U32(0x00000000), U16(3), U16(0x037b) },
	{ U32(0x0000ffc0), U32(0x000040c0), U16(2), U16(0x03b8) },
	{ U32(0x0000f800), U32(0x00000800), U16(2), U16(0x03e0) },
	{ U32(0x0000ff00), U32(0x00004600), U16(1), U16(0x0408) },
	{ U32(0x0000f800), U32(0x00002000), U16(2), U16(0x0419) },
	{ U32(0x0000ffc0), U32(0x00004340), U16(1), U16(0x0443) },
	{ U32(0x0000ffc0), U32(0x000043c0), U16(1), U16(0x0457) },
	{ U32(0x0000ffc0), U32(0x00004300), U16(2), U16(0x0468) },
	{ U32(0x0000fe00), U32(0x0000bc00), U16(1), U16(0x0490) },
	{ U32(0x0000fe00), U32(0x0000b400), U16(1), U16(0x04a0) },
	{ U32(0x0000ffc0), U32(0x0000ba40), U16(1), U16(0x04b1) },
	{ U32(0x0000ffc0), U32(0x0000ba00), U16(1), U16(0x04c6) },
	{ U32(0x0000ffc0), U32(0x0000bac0), U16(1), U16(0x04d7) },
	{ U32(0x0000ffc0), U32(0x000041c0), U16(1), U16(0x04ec) },
	{ U32(0x0000ffc0), U32(0x00004240), U16(1), U16(0x04fd) },
	{ U32(0x0000ffc0), U32(0x00004180), U16(1), U16(0x0512) },
	{ U32(0x0000ffff), U32(0x0000b650), U16(1), U16(0x0523) },
	{ U32(0x0000ffff), U32(0x0000b658), U16(1), U16(0x0538) },
	{ U32(0x0000f800), U32(0x0000c000), U16(1), U16(0x054d) },
	{ U32(0x0000f800), U32(0x00006000), U16(1), U16(0x0561) },
	{ U32(0x0000fe00), U32(0x00005000), U16(1), U16(0x0576) },
	{ U32(0x0000f800), U32(0x00009000), U16(1), U16(0x058a) },
	{ U32(0x0000f800), U32(0x00007000), U16(1), U16(0x05a2) },
	{ U32(0x0000fe00), U32(0x00005400), U16(1), U16(0x05ba) },
	{ U32(0x0000fe00), U32(0x00005200), U16(1), U16(0x05cf) },
	{ U32(0x0000f800), U32(0x00008000), U16(1), U16(0x05e4) },
	{ U32(0x0000ff80), U32(0x0000b080), U16(1), U16(0x05fc) },
	{ U32(0x0000fe00), U32(0x00001e00), U16(1), U16(0x0611) },
	{ U32(0x0000fe00), U32(0x00001a00), U16(1), U16(0x0626) },
	{ U32(0x0000f800), U32(0x00003800), U16(1), U16(0x063a) },
	{ U32(0x0000ffc0), U32(0x0000b240), U16(1), U16(0x064e) },
	{ U32(0x0000ffc0), U32(0x0000b200), U16(1), U16(0x0662) },
	{ U32(0x0000ffc0), U32(0x00004200), U16(1), U16(0x0676) },
	{ U32(0x0000ffc0), U32(0x0000b2c0), U16(1), U16(0x0687) },
	{ U32(0x0000ffc0), U32(0x0000b280), U16(1), U16(0x069b) },
}; /* t16_instruction_groups */

PRIVATE struct arm_instruction_group const t32_instruction_groups[174] = {
	{ U32(0xfbe08000), U32(0xf1400000), U16(1), U16(0x06af) },
	{ U32(0xffe08000), U32(0xeb400000), U16(1), U16(0x06c3) },
	{ U32(0xfbf08000), U32(0xf2000000), U16(2), U16(0x06db) },
	{ U32(0xfbe08000), U32(0xf1000000), U16(2), U16(0x0703) },
	{ U32(0xffe08000), U32(0xeb000000), U16(2), U16(0x072f) },
	{ U32(0xfbf08000), U32(0xf2a00000), U16(2), U16(0x075b) },
	{ U32(0xfbe08000), U32(0xf0000000), U16(2), U16(0x0783) },
	{ U32(0xffe08000), U32(0xea000000), U16(2), U16(0x07ab) },
	{ U32(0xffe08000), U32(0xea400000), U16(7), U16(0x07d4) },
	{ U32(0xffe0f0f0), U32(0xfa40f000), U16(1), U16(0x0870) },
	{ U32(0xf800d000), U32(0xf0008000), U16(17), U16(0x0885) },
	{ U32(0xf800d000), U32(0xf0009000), U16(1), U16(0x09c3) },
	{ U32(0xfff08020), U32(0xf3600000), U16(2), U16(0x09d3) },
	{ U32(0xfbe08000), U32(0xf0200000), U16(1), U16(0x09fc) },
	{ U32(0xffe08000), U32(0xea200000), U16(1), U16(0x0a10) },
	{ U32(0xf800d000), U32(0xf000d000), U16(1), U16(0x0a28) },
	{ U32(0xf800d001), U32(0xf000c000), U16(1), U16(0x0a39) },
	{ U32(0xff000010), U32(0xfe000000), U16(1), U16(0x0a49) },
	{ U32(0xff000010), U32(0xee000000), U16(1), U16(0x0a61) },
	{ U32(0xfff0f0f0), U32(0xfab0f080), U16(1), U16(0x0a76) },
	{ U32(0xffe08000), U32(0xeba00000), U16(2), U16(0x0a87) },
	{ U32(0xfbe08000), U32(0xf1a00000), U16(2), U16(0x0ab3) },
	{ U32(0xfbe08000), U32(0xf0800000), U16(2), U16(0x0adf) },
	{ U32(0xffe08000), U32(0xea800000), U16(2), U16(0x0b07) },
	{ U32(0xfe100000), U32(0xfc100000), U16(3), U16(0x0b33) },
	{ U32(0xfe100000), U32(0xec100000), U16(3), U16(0x0b7b) },
	{ U32(0xffd00000), U32(0xe8900000), U16(2), U16(0x0bc2) },
	{ U32(0xffd02000), U32(0xe9100000), U16(1), U16(0x0bea) },
	{ U32(0xff700000), U32(0xf8500000), U16(7), U16(0x0bfe) },
	{ U32(0xff700000), U32(0xf8100000), U16(10), U16(0x0ca6) },
	{ U32(0xff500000), U32(0xe9500000), U16(2), U16(0x0d92) },
	{ U32(0xff700000), U32(0xe8700000), U16(1), U16(0x0dc4) },
	{ U32(0xfff00f00), U32(0xe8500f00), U16(1), U16(0x0de0) },
	{ U32(0xfff00fff), U32(0xe8d00f4f), U16(1), U16(0x0df9) },
	{ U32(0xfff000ff), U32(0xe8d0007f), U16(1), U16(0x0e11) },
	{ U32(0xfff00fff), U32(0xe8d00f5f), U16(1), U16(0x0e2a) },
	{ U32(0xff700000), U32(0xf8300000), U16(9), U16(0x0e42) },
	{ U32(0xff700000), U32(0xf9100000), U16(10), U16(0x0f1e) },
	{ U32(0xff700000), U32(0xf9300000), U16(6), U16(0x1010) },
	{ U32(0xffe0f0f0), U32(0xfa00f000), U16(1), U16(0x10ac) },
	{ U32(0xffe0f0f0), U32(0xfa20f000), U16(1), U16(0x10c1) },
	{ U32(0xff100010), U32(0xfe000010), U16(1), U16(0x10d6) },
	{ U32(0xff100010), U32(0xee000010), U16(1), U16(0x10ee) },
	{ U32(0xfff00000), U32(0xfc400000), U16(1), U16(0x1103) },
	{ U32(0xfff00000), U32(0xec400000), U16(1), U16(0x111b) },
	{ U32(0xfff000f0), U32(0xfb000000), U16(2), U16(0x1130) },
	{ U32(0xfff000f0), U32(0xfb000010), U16(1), U16(0x1159) },
	{ U32(0xfbf08000), U32(0xf2c00000), U16(1), U16(0x116e) },
	{ U32(0xfbf08000), U32(0xf2400000), U16(1), U16(0x1183) },
	{ U32(0xfbe08000), U32(0xf0400000), U16(2), U16(0x1198) },
	{ U32(0xff100010), U32(0xfe100010), U16(1), U16(0x11c1) },
	{ U32(0xff100010), U32(0xee100010), U16(1), U16(0x11d9) },
	{ U32(0xfbe08000), U32(0xf0600000), U16(2), U16(0x11ee) },
	{ U32(0xffe08000), U32(0xea600000), U16(2), U16(0x1217) },
	{ U32(0xfff08010), U32(0xeac00000), U16(1), U16(0x1240) },
	{ U32(0xffd00000), U32(0xe8800000), U16(2), U16(0x1259) },
	{ U32(0xfff00c00), U32(0xf8400c00), U16(3), U16(0x1282) },
	{ U32(0xfff0f0f0), U32(0xfa90f010), U16(1), U16(0x12c8) },
	{ U32(0xfff0f0f0), U32(0xfa80f010), U16(1), U16(0x12dd) },
	{ U32(0xfff0f0f0), U32(0xfa80f080), U16(1), U16(0x12f1) },
	{ U32(0xfff0f0f0), U32(0xfaa0f010), U16(1), U16(0x1306) },
	{ U32(0xfff0f0f0), U32(0xfa80f090), U16(1), U16(0x131b) },
	{ U32(0xfff0f0f0), U32(0xfa80f0b0), U16(1), U16(0x132f) },
	{ U32(0xfff0f0f0), U32(0xfae0f010), U16(1), U16(0x1343) },
	{ U32(0xfff0f0f0), U32(0xfad0f010), U16(1), U16(0x1358) },
	{ U32(0xfff0f0f0), U32(0xfac0f010), U16(1), U16(0x136d) },
	{ U32(0xfff0f0f0), U32(0xfa80f0a0), U16(1), U16(0x1381) },
	{ U32(0xfff0f0f0), U32(0xfa90f0a0), U16(1), U16(0x1396) },
	{ U32(0xfff0f0f0), U32(0xfa90f090), U16(1), U16(0x13aa) },
	{ U32(0xfff0f0f0), U32(0xfa90f080), U16(1), U16(0x13bf) },
	{ U32(0xfff0f0f0), U32(0xfa90f0b0), U16(1), U16(0x13d4) },
	{ U32(0xffe0f0f0), U32(0xfa60f000), U16(1), U16(0x13e9) },
	{ U32(0xffe08000), U32(0xebc00000), U16(1), U16(0x13fe) },
	{ U32(0xfbe08000), U32(0xf1c00000), U16(1), U16(0x1412) },
	{ U32(0xfff0f0f0), U32(0xfa90f000), U16(1), U16(0x142a) },
	{ U32(0xfff0f0f0), U32(0xfa80f000), U16(1), U16(0x143f) },
	{ U32(0xfff0f0f0), U32(0xfaa0f000), U16(1), U16(0x1453) },
	{ U32(0xfbe08000), U32(0xf1600000), U16(1), U16(0x1468) },
	{ U32(0xffe08000), U32(0xeb600000), U16(1), U16(0x147c) },
	{ U32(0xfff08020), U32(0xf3400000), U16(1), U16(0x1494) },
	{ U32(0xfff0f0f0), U32(0xfb90f0f0), U16(1), U16(0x14ac) },
	{ U32(0xfff0f0f0), U32(0xfaa0f080), U16(1), U16(0x14c1) },
	{ U32(0xfff0f0f0), U32(0xfa90f020), U16(1), U16(0x14d5) },
	{ U32(0xfff0f0f0), U32(0xfa80f020), U16(1), U16(0x14ed) },
	{ U32(0xfff0f0f0), U32(0xfaa0f020), U16(1), U16(0x1502) },
	{ U32(0xfff0f0f0), U32(0xfae0f020), U16(1), U16(0x1516) },
	{ U32(0xfff0f0f0), U32(0xfad0f020), U16(1), U16(0x152a) },
	{ U32(0xfff0f0f0), U32(0xfac0f020), U16(1), U16(0x1542) },
	{ U32(0xfff000f0), U32(0xfb100030), U16(2), U16(0x1557) },
	{ U32(0xfff000f0), U32(0xfb100010), U16(2), U16(0x1584) },
	{ U32(0xfff000f0), U32(0xfb100020), U16(2), U16(0x15b1) },
	{ U32(0xfff000f0), U32(0xfb100000), U16(2), U16(0x15de) },
	{ U32(0xfff000f0), U32(0xfb200010), U16(2), U16(0x160b) },
	{ U32(0xfff000f0), U32(0xfb200000), U16(2), U16(0x1638) },
	{ U32(0xfff000f0), U32(0xfbc00000), U16(1), U16(0x1661) },
	{ U32(0xfff000f0), U32(0xfbc000b0), U16(1), U16(0x1676) },
	{ U32(0xfff000f0), U32(0xfbc00090), U16(1), U16(0x168f) },
	{ U32(0xfff000f0), U32(0xfbc000a0), U16(1), U16(0x16a8) },
	{ U32(0xfff000f0), U32(0xfbc00080), U16(1), U16(0x16c1) },
	{ U32(0xfff000f0), U32(0xfbc000d0), U16(1), U16(0x16da) },
	{ U32(0xfff000f0), U32(0xfbc000c0), U16(1), U16(0x16f3) },
	{ U32(0xfff000f0), U32(0xfb300010), U16(2), U16(0x170b) },
	{ U32(0xfff000f0), U32(0xfb300000), U16(2), U16(0x1738) },
	{ U32(0xfff000f0), U32(0xfb400010), U16(2), U16(0x1765) },
	{ U32(0xfff000f0), U32(0xfb400000), U16(2), U16(0x1792) },
	{ U32(0xfff000f0), U32(0xfbd000d0), U16(1), U16(0x17be) },
	{ U32(0xfff000f0), U32(0xfbd000c0), U16(1), U16(0x17d7) },
	{ U32(0xfff000f0), U32(0xfb500010), U16(2), U16(0x17f0) },
	{ U32(0xfff000f0), U32(0xfb500000), U16(2), U16(0x181d) },
	{ U32(0xfff000f0), U32(0xfb600010), U16(1), U16(0x1846) },
	{ U32(0xfff000f0), U32(0xfb600000), U16(1), U16(0x185e) },
	{ U32(0xfff000f0), U32(0xfb800000), U16(1), U16(0x1873) },
	{ U32(0xffd08020), U32(0xf3000000), U16(2), U16(0x1888) },
	{ U32(0xfff0f0f0), U32(0xfae0f000), U16(1), U16(0x18b5) },
	{ U32(0xfff0f0f0), U32(0xfad0f000), U16(1), U16(0x18ca) },
	{ U32(0xfff0f0f0), U32(0xfac0f000), U16(1), U16(0x18df) },
	{ U32(0xff500000), U32(0xfd000000), U16(1), U16(0x18f3) },
	{ U32(0xff700000), U32(0xfc200000), U16(1), U16(0x1910) },
	{ U32(0xff500000), U32(0xfd400000), U16(1), U16(0x192c) },
	{ U32(0xff700000), U32(0xfc600000), U16(1), U16(0x1948) },
	{ U32(0xff500000), U32(0xed000000), U16(1), U16(0x1965) },
	{ U32(0xff700000), U32(0xec200000), U16(1), U16(0x1981) },
	{ U32(0xff500000), U32(0xed400000), U16(1), U16(0x199a) },
	{ U32(0xff700000), U32(0xec600000), U16(1), U16(0x19b7) },
	{ U32(0xffd0a000), U32(0xe9000000), U16(1), U16(0x19d3) },
	{ U32(0xfff00d00), U32(0xf8400900), U16(1), U16(0x19e7) },
	{ U32(0xfff00000), U32(0xf8c00000), U16(1), U16(0x19ff) },
	{ U32(0xfff00fc0), U32(0xf8400000), U16(1), U16(0x1a18) },
	{ U32(0xfff00c00), U32(0xf8000c00), U16(2), U16(0x1a35) },
	{ U32(0xfff00d00), U32(0xf8000900), U16(1), U16(0x1a6a) },
	{ U32(0xfff00000), U32(0xf8800000), U16(1), U16(0x1a83) },
	{ U32(0xfff00fc0), U32(0xf8000000), U16(1), U16(0x1a9b) },
	{ U32(0xff500000), U32(0xe9400000), U16(1), U16(0x1ab7) },
	{ U32(0xff700000), U32(0xe8600000), U16(1), U16(0x1ad4) },
	{ U32(0xfff00000), U32(0xe8400000), U16(1), U16(0x1af0) },
	{ U32(0xfff00ff0), U32(0xe8c00f40), U16(1), U16(0x1b08) },
	{ U32(0xfff000f0), U32(0xe8c00070), U16(1), U16(0x1b21) },
	{ U32(0xfff00ff0), U32(0xe8c00f50), U16(1), U16(0x1b39) },
	{ U32(0xfff00c00), U32(0xf8200c00), U16(2), U16(0x1b52) },
	{ U32(0xfff00d00), U32(0xf8200900), U16(1), U16(0x1b87) },
	{ U32(0xfff00fc0), U32(0xf8200000), U16(1), U16(0x1ba0) },
	{ U32(0xfff00000), U32(0xf8a00000), U16(1), U16(0x1bbc) },
	{ U32(0xfff0f0c0), U32(0xfa20f080), U16(2), U16(0x1bd4) },
	{ U32(0xfff0f0c0), U32(0xfa40f080), U16(2), U16(0x1c02) },
	{ U32(0xfff0f0c0), U32(0xfa00f080), U16(2), U16(0x1c2c) },
	{ U32(0xfff0ffe0), U32(0xe8d0f000), U16(1), U16(0x1c56) },
	{ U32(0xfff0f0f0), U32(0xfa90f040), U16(1), U16(0x1c6b) },
	{ U32(0xfff0f0f0), U32(0xfa80f040), U16(1), U16(0x1c80) },
	{ U32(0xfff0f0f0), U32(0xfaa0f040), U16(1), U16(0x1c94) },
	{ U32(0xfff08020), U32(0xf3c00000), U16(1), U16(0x1ca9) },
	{ U32(0xfff0f0f0), U32(0xfbb0f0f0), U16(1), U16(0x1cc1) },
	{ U32(0xfff0f0f0), U32(0xfa90f060), U16(1), U16(0x1cd6) },
	{ U32(0xfff0f0f0), U32(0xfa80f060), U16(1), U16(0x1cee) },
	{ U32(0xfff0f0f0), U32(0xfaa0f060), U16(1), U16(0x1d03) },
	{ U32(0xfff0f0f0), U32(0xfae0f060), U16(1), U16(0x1d17) },
	{ U32(0xfff0f0f0), U32(0xfad0f060), U16(1), U16(0x1d2b) },
	{ U32(0xfff0f0f0), U32(0xfac0f060), U16(1), U16(0x1d43) },
	{ U32(0xfff000f0), U32(0xfbe00060), U16(1), U16(0x1d58) },
	{ U32(0xfff000f0), U32(0xfbe00000), U16(1), U16(0x1d6d) },
	{ U32(0xfff000f0), U32(0xfba00000), U16(1), U16(0x1d82) },
	{ U32(0xfff0f0f0), U32(0xfa90f050), U16(1), U16(0x1d97) },
	{ U32(0xfff0f0f0), U32(0xfa80f050), U16(1), U16(0x1daf) },
	{ U32(0xfff0f0f0), U32(0xfaa0f050), U16(1), U16(0x1dc4) },
	{ U32(0xfff0f0f0), U32(0xfae0f050), U16(1), U16(0x1dd8) },
	{ U32(0xfff0f0f0), U32(0xfad0f050), U16(1), U16(0x1dec) },
	{ U32(0xfff0f0f0), U32(0xfac0f050), U16(1), U16(0x1e04) },
	{ U32(0xfff000f0), U32(0xfb700000), U16(2), U16(0x1e19) },
	{ U32(0xffd08020), U32(0xf3800000), U16(2), U16(0x1e45) },
	{ U32(0xfff0f0f0), U32(0xfae0f040), U16(1), U16(0x1e72) },
	{ U32(0xfff0f0f0), U32(0xfad0f040), U16(1), U16(0x1e87) },
	{ U32(0xfff0f0f0), U32(0xfac0f040), U16(1), U16(0x1e9c) },
	{ U32(0xfff0f0c0), U32(0xfa30f080), U16(2), U16(0x1eb0) },
	{ U32(0xfff0f0c0), U32(0xfa50f080), U16(2), U16(0x1ede) },
	{ U32(0xfff0f0c0), U32(0xfa10f080), U16(2), U16(0x1f08) },
}; /* t32_instruction_groups */

PRIVATE struct arm_instruction_group const a32_instruction_groups[267] = {
	{ U32(0x0fe00000), U32(0x02a00000), U16(1), U16(0x1f32) },
	{ U32(0x0fe00090), U32(0x00a00010), U16(1), U16(0x1f46) },
	{ U32(0x0fe00010), U32(0x00a00000), U16(1), U16(0x1f5b) },
	{ U32(0x0fe00000), U32(0x02800000), U16(2), U16(0x1f6f) },
	{ U32(0x0fe00090), U32(0x00800010), U16(1), U16(0x1f97) },
	{ U32(0x0fe00010), U32(0x00800000), U16(1), U16(0x1fac) },
	{ U32(0x0fe00000), U32(0x02400000), U16(2), U16(0x1fc0) },
	{ U32(0x0fe00000), U32(0x02000000), U16(1), U16(0x1fe8) },
	{ U32(0x0fe00090), U32(0x00000010), U16(1), U16(0x1ffc) },
	{ U32(0x0fe00010), U32(0x00000000), U16(1), U16(0x2011) },
	{ U32(0x0fef0070), U32(0x01a00040), U16(1), U16(0x2025) },
	{ U32(0x0fef00f0), U32(0x01a00050), U16(1), U16(0x2039) },
	{ U32(0x0e000000), U32(0x0a000000), U16(3), U16(0x204e) },
	{ U32(0x0fe00070), U32(0x07c00010), U16(2), U16(0x2080) },
	{ U32(0x0fe00000), U32(0x03c00000), U16(1), U16(0x20a9) },
	{ U32(0x0fe00090), U32(0x01c00010), U16(1), U16(0x20bd) },
	{ U32(0x0fe00010), U32(0x01c00000), U16(1), U16(0x20d2) },
	{ U32(0x0ff000f0), U32(0x01200070), U16(1), U16(0x20e6) },
	{ U32(0x0ffffff0), U32(0x012fff30), U16(1), U16(0x20f7) },
	{ U32(0x0ffffff0), U32(0x012fff10), U16(1), U16(0x2107) },
	{ U32(0x0ffffff0), U32(0x012fff20), U16(1), U16(0x2118) },
	{ U32(0xff000010), U32(0xfe000000), U16(1), U16(0x0a49) },
	{ U32(0xff000010), U32(0xee000000), U16(1), U16(0x0a61) },
	{ U32(0x0f500000), U32(0x05500000), U16(8), U16(0x2128) },
	{ U32(0x0fff0ff0), U32(0x016f0f10), U16(1), U16(0x21c6) },
	{ U32(0x0ff0f000), U32(0x03700000), U16(1), U16(0x21d7) },
	{ U32(0x0ff0f090), U32(0x01700010), U16(1), U16(0x21eb) },
	{ U32(0x0ff0f010), U32(0x01700000), U16(1), U16(0x2200) },
	{ U32(0x0ff0f000), U32(0x03500000), U16(1), U16(0x2214) },
	{ U32(0x0ff0f090), U32(0x01500010), U16(1), U16(0x2228) },
	{ U32(0x0ff0f010), U32(0x01500000), U16(1), U16(0x223d) },
	{ U32(0x0ffffff0), U32(0x0320f0f0), U16(1), U16(0x2251) },
	{ U32(0x0fe00000), U32(0x02200000), U16(1), U16(0x2262) },
	{ U32(0x0fe00090), U32(0x00200010), U16(1), U16(0x2276) },
	{ U32(0x0fe00010), U32(0x00200000), U16(1), U16(0x228b) },
	{ U32(0xfe100000), U32(0xfc100000), U16(3), U16(0x0b33) },
	{ U32(0xfe100000), U32(0xec100000), U16(3), U16(0x0b7b) },
	{ U32(0x0fd00000), U32(0x08900000), U16(2), U16(0x229f) },
	{ U32(0x0fd00000), U32(0x08100000), U16(1), U16(0x22c3) },
	{ U32(0x0fd00000), U32(0x09100000), U16(1), U16(0x22d7) },
	{ U32(0x0fd00000), U32(0x09900000), U16(1), U16(0x22eb) },
	{ U32(0x0f500000), U32(0x05100000), U16(3), U16(0x22ff) },
	{ U32(0x0f500010), U32(0x07100000), U16(2), U16(0x2341) },
	{ U32(0x0f700010), U32(0x06100000), U16(1), U16(0x2373) },
	{ U32(0x0f700000), U32(0x04100000), U16(2), U16(0x238b) },
	{ U32(0x0f500010), U32(0x07500000), U16(2), U16(0x23b3) },
	{ U32(0x0f700010), U32(0x06500000), U16(2), U16(0x23e7) },
	{ U32(0x0f700000), U32(0x04500000), U16(2), U16(0x2418) },
	{ U32(0x0f700000), U32(0x04700000), U16(1), U16(0x2449) },
	{ U32(0x0f700010), U32(0x06700000), U16(1), U16(0x2465) },
	{ U32(0x0f500ff0), U32(0x010000d0), U16(1), U16(0x2481) },
	{ U32(0x0f700ff0), U32(0x000000d0), U16(1), U16(0x249d) },
	{ U32(0x0f5000f0), U32(0x014000d0), U16(2), U16(0x24b6) },
	{ U32(0x0f7000f0), U32(0x004000d0), U16(1), U16(0x24e8) },
	{ U32(0x0ff00fff), U32(0x01900f9f), U16(1), U16(0x2504) },
	{ U32(0x0ff00fff), U32(0x01d00f9f), U16(1), U16(0x2519) },
	{ U32(0x0ff00fff), U32(0x01b00f9f), U16(1), U16(0x2531) },
	{ U32(0x0ff00fff), U32(0x01f00f9f), U16(1), U16(0x254a) },
	{ U32(0x0f5000f0), U32(0x015000b0), U16(2), U16(0x2562) },
	{ U32(0x0f500ff0), U32(0x011000b0), U16(1), U16(0x2592) },
	{ U32(0x0f700ff0), U32(0x001000b0), U16(1), U16(0x25ab) },
	{ U32(0x0f7000f0), U32(0x005000b0), U16(1), U16(0x25c3) },
	{ U32(0x0f7000f0), U32(0x007000b0), U16(1), U16(0x25dc) },
	{ U32(0x0f700ff0), U32(0x003000b0), U16(1), U16(0x25f8) },
	{ U32(0x0f5000f0), U32(0x015000d0), U16(2), U16(0x2611) },
	{ U32(0x0f500ff0), U32(0x011000d0), U16(1), U16(0x2643) },
	{ U32(0x0f700ff0), U32(0x001000d0), U16(1), U16(0x265f) },
	{ U32(0x0f7000f0), U32(0x005000d0), U16(1), U16(0x2678) },
	{ U32(0x0f7000f0), U32(0x007000d0), U16(1), U16(0x2694) },
	{ U32(0x0f700ff0), U32(0x003000d0), U16(1), U16(0x26b1) },
	{ U32(0x0f5000f0), U32(0x015000f0), U16(2), U16(0x26cd) },
	{ U32(0x0f500ff0), U32(0x011000f0), U16(1), U16(0x26ff) },
	{ U32(0x0f700ff0), U32(0x001000f0), U16(1), U16(0x271b) },
	{ U32(0x0f7000f0), U32(0x005000f0), U16(1), U16(0x2734) },
	{ U32(0x0f7000f0), U32(0x007000f0), U16(1), U16(0x2750) },
	{ U32(0x0f700ff0), U32(0x003000f0), U16(1), U16(0x276d) },
	{ U32(0x0f700000), U32(0x04300000), U16(1), U16(0x2789) },
	{ U32(0x0f700010), U32(0x06300000), U16(1), U16(0x27a2) },
	{ U32(0x0fef0070), U32(0x01a00000), U16(2), U16(0x27bb) },
	{ U32(0x0fef00f0), U32(0x01a00010), U16(1), U16(0x27e3) },
	{ U32(0x0fef0070), U32(0x01a00020), U16(1), U16(0x27f8) },
	{ U32(0x0fef00f0), U32(0x01a00030), U16(1), U16(0x280c) },
	{ U32(0xff100010), U32(0xfe000010), U16(1), U16(0x10d6) },
	{ U32(0xff100010), U32(0xee000010), U16(1), U16(0x10ee) },
	{ U32(0xfff00000), U32(0xfc400000), U16(1), U16(0x1103) },
	{ U32(0xfff00000), U32(0xec400000), U16(1), U16(0x111b) },
	{ U32(0x0fe000f0), U32(0x00200090), U16(1), U16(0x2821) },
	{ U32(0x0ff000f0), U32(0x00600090), U16(1), U16(0x2835) },
	{ U32(0x0ff00000), U32(0x03400000), U16(1), U16(0x284a) },
	{ U32(0x0ff00000), U32(0x03000000), U16(1), U16(0x285f) },
	{ U32(0x0fef0000), U32(0x03a00000), U16(1), U16(0x2874) },
	{ U32(0xff100010), U32(0xfe100010), U16(1), U16(0x11c1) },
	{ U32(0xff100010), U32(0xee100010), U16(1), U16(0x11d9) },
	{ U32(0x0fff0fff), U32(0x010f0000), U16(1), U16(0x2889) },
	{ U32(0x0fff0fff), U32(0x014f0000), U16(1), U16(0x289d) },
	{ U32(0x0ffff000), U32(0x0328f000), U16(1), U16(0x28b1) },
	{ U32(0x0ffff000), U32(0x0324f000), U16(1), U16(0x28ca) },
	{ U32(0x0ffff000), U32(0x032cf000), U16(1), U16(0x28e3) },
	{ U32(0x0ffffff0), U32(0x0128f000), U16(1), U16(0x28fb) },
	{ U32(0x0ffffff0), U32(0x0124f000), U16(1), U16(0x2913) },
	{ U32(0x0ffffff0), U32(0x012cf000), U16(1), U16(0x292b) },
	{ U32(0x0fe0f0f0), U32(0x00000090), U16(1), U16(0x2944) },
	{ U32(0x0fef0000), U32(0x03e00000), U16(1), U16(0x2959) },
	{ U32(0x0fef0090), U32(0x01e00010), U16(1), U16(0x296e) },
	{ U32(0x0fef0010), U32(0x01e00000), U16(1), U16(0x2982) },
	{ U32(0x0fffffff), U32(0x0320f000), U16(1), U16(0x2997) },
	{ U32(0x0fe00000), U32(0x03800000), U16(1), U16(0x29a7) },
	{ U32(0x0fe00090), U32(0x01800010), U16(1), U16(0x29bb) },
	{ U32(0x0fe00010), U32(0x01800000), U16(1), U16(0x29d0) },
	{ U32(0x0ff00030), U32(0x06800010), U16(1), U16(0x29e4) },
	{ U32(0x0f500000), U32(0x05000000), U16(2), U16(0x29fd) },
	{ U32(0x0fd00000), U32(0x09000000), U16(2), U16(0x2a27) },
	{ U32(0x0ff00ff0), U32(0x06200f10), U16(1), U16(0x2a4c) },
	{ U32(0x0ff00ff0), U32(0x06200f90), U16(1), U16(0x2a61) },
	{ U32(0x0ff00ff0), U32(0x01000050), U16(1), U16(0x2a75) },
	{ U32(0x0ff00ff0), U32(0x06200f30), U16(1), U16(0x2a8a) },
	{ U32(0x0ff00ff0), U32(0x01400050), U16(1), U16(0x2a9f) },
	{ U32(0x0ff00ff0), U32(0x01600050), U16(1), U16(0x2ab3) },
	{ U32(0x0ff00ff0), U32(0x06200f50), U16(1), U16(0x2ac7) },
	{ U32(0x0ff00ff0), U32(0x06200f70), U16(1), U16(0x2adc) },
	{ U32(0x0ff00ff0), U32(0x06200ff0), U16(1), U16(0x2af1) },
	{ U32(0x0ff00ff0), U32(0x01200050), U16(1), U16(0x2b05) },
	{ U32(0x0fff0ff0), U32(0x06ff0f30), U16(1), U16(0x2b1a) },
	{ U32(0x0fff0ff0), U32(0x06bf0fb0), U16(1), U16(0x2b2e) },
	{ U32(0x0fff0ff0), U32(0x06bf0f30), U16(1), U16(0x2b43) },
	{ U32(0x0fff0ff0), U32(0x06ff0fb0), U16(1), U16(0x2b54) },
	{ U32(0x0fef0070), U32(0x01a00060), U16(2), U16(0x2b69) },
	{ U32(0x0fef00f0), U32(0x01a00070), U16(1), U16(0x2b91) },
	{ U32(0x0fe00000), U32(0x02600000), U16(1), U16(0x2ba6) },
	{ U32(0x0fe00090), U32(0x00600010), U16(1), U16(0x2bba) },
	{ U32(0x0fe00010), U32(0x00600000), U16(1), U16(0x2bcf) },
	{ U32(0x0fe00000), U32(0x02e00000), U16(1), U16(0x2be3) },
	{ U32(0x0fe00090), U32(0x00e00010), U16(1), U16(0x2bf7) },
	{ U32(0x0fe00010), U32(0x00e00000), U16(1), U16(0x2c0c) },
	{ U32(0x0ff00ff0), U32(0x06100f10), U16(1), U16(0x2c20) },
	{ U32(0x0ff00ff0), U32(0x06100f90), U16(1), U16(0x2c35) },
	{ U32(0x0ff00ff0), U32(0x06100f30), U16(1), U16(0x2c49) },
	{ U32(0x0fe00000), U32(0x02c00000), U16(1), U16(0x2c5e) },
	{ U32(0x0fe00090), U32(0x00c00010), U16(1), U16(0x2c72) },
	{ U32(0x0fe00010), U32(0x00c00000), U16(1), U16(0x2c87) },
	{ U32(0x0fe00070), U32(0x07a00050), U16(1), U16(0x2c9b) },
	{ U32(0x0ff00ff0), U32(0x06800fb0), U16(1), U16(0x2cb3) },
	{ U32(0xffffffff), U32(0xf1010000), U16(1), U16(0x2cc7) },
	{ U32(0xffffffff), U32(0xf1010200), U16(1), U16(0x2cdc) },
	{ U32(0x0fffffff), U32(0x0320f004), U16(1), U16(0x2cf1) },
	{ U32(0x0ff00ff0), U32(0x06300f10), U16(1), U16(0x2d01) },
	{ U32(0x0ff00ff0), U32(0x06300f90), U16(1), U16(0x2d19) },
	{ U32(0x0ff00ff0), U32(0x06300f30), U16(1), U16(0x2d2e) },
	{ U32(0x0ff00ff0), U32(0x06300f50), U16(1), U16(0x2d42) },
	{ U32(0x0ff00ff0), U32(0x06300f70), U16(1), U16(0x2d56) },
	{ U32(0x0ff00ff0), U32(0x06300ff0), U16(1), U16(0x2d6e) },
	{ U32(0x0ff000f0), U32(0x010000e0), U16(1), U16(0x2d83) },
	{ U32(0x0ff000f0), U32(0x010000c0), U16(1), U16(0x2d9b) },
	{ U32(0x0ff000f0), U32(0x010000a0), U16(1), U16(0x2db3) },
	{ U32(0x0ff000f0), U32(0x01000080), U16(1), U16(0x2dcb) },
	{ U32(0x0ff000f0), U32(0x07000030), U16(2), U16(0x2de3) },
	{ U32(0x0ff000f0), U32(0x07000010), U16(2), U16(0x2e10) },
	{ U32(0x0ff000f0), U32(0x014000e0), U16(1), U16(0x2e39) },
	{ U32(0x0ff000f0), U32(0x014000c0), U16(1), U16(0x2e52) },
	{ U32(0x0ff000f0), U32(0x014000a0), U16(1), U16(0x2e6b) },
	{ U32(0x0ff000f0), U32(0x01400080), U16(1), U16(0x2e84) },
	{ U32(0x0ff000f0), U32(0x07400030), U16(1), U16(0x2e9d) },
	{ U32(0x0ff000f0), U32(0x07400010), U16(1), U16(0x2eb6) },
	{ U32(0x0fe000f0), U32(0x00e00090), U16(1), U16(0x2ece) },
	{ U32(0x0ff000f0), U32(0x012000c0), U16(1), U16(0x2ee6) },
	{ U32(0x0ff000f0), U32(0x01200080), U16(1), U16(0x2efe) },
	{ U32(0x0ff000f0), U32(0x07000070), U16(2), U16(0x2f16) },
	{ U32(0x0ff000f0), U32(0x07000050), U16(2), U16(0x2f43) },
	{ U32(0x0ff000f0), U32(0x07400070), U16(1), U16(0x2f6f) },
	{ U32(0x0ff000f0), U32(0x07400050), U16(1), U16(0x2f88) },
	{ U32(0x0ff000f0), U32(0x07500030), U16(2), U16(0x2fa1) },
	{ U32(0x0ff000f0), U32(0x07500010), U16(2), U16(0x2fce) },
	{ U32(0x0ff000f0), U32(0x075000f0), U16(1), U16(0x2ff7) },
	{ U32(0x0ff000f0), U32(0x075000d0), U16(1), U16(0x300f) },
	{ U32(0x0ff000f0), U32(0x016000e0), U16(1), U16(0x3024) },
	{ U32(0x0ff000f0), U32(0x016000c0), U16(1), U16(0x3039) },
	{ U32(0x0ff000f0), U32(0x016000a0), U16(1), U16(0x304e) },
	{ U32(0x0ff000f0), U32(0x01600080), U16(1), U16(0x3063) },
	{ U32(0x0fe000f0), U32(0x00c00090), U16(1), U16(0x3078) },
	{ U32(0x0ff000f0), U32(0x012000e0), U16(1), U16(0x3090) },
	{ U32(0x0ff000f0), U32(0x012000a0), U16(1), U16(0x30a5) },
	{ U32(0x0ff00ff0), U32(0x06a00f30), U16(1), U16(0x30ba) },
	{ U32(0x0fe00030), U32(0x06a00010), U16(1), U16(0x30d2) },
	{ U32(0x0ff00ff0), U32(0x06100f50), U16(1), U16(0x30e7) },
	{ U32(0x0ff00ff0), U32(0x06100f70), U16(1), U16(0x30fc) },
	{ U32(0x0ff00ff0), U32(0x06100ff0), U16(1), U16(0x3111) },
	{ U32(0xff500000), U32(0xfd000000), U16(1), U16(0x18f3) },
	{ U32(0xff700000), U32(0xfc200000), U16(1), U16(0x1910) },
	{ U32(0xff500000), U32(0xfd400000), U16(1), U16(0x192c) },
	{ U32(0xff700000), U32(0xfc600000), U16(1), U16(0x1948) },
	{ U32(0xff500000), U32(0xed000000), U16(1), U16(0x1965) },
	{ U32(0xff700000), U32(0xec200000), U16(1), U16(0x1981) },
	{ U32(0xff500000), U32(0xed400000), U16(1), U16(0x199a) },
	{ U32(0xff700000), U32(0xec600000), U16(1), U16(0x19b7) },
	{ U32(0x0fd00000), U32(0x08800000), U16(1), U16(0x3125) },
	{ U32(0x0fd00000), U32(0x08000000), U16(1), U16(0x3139) },
	{ U32(0x0fd00000), U32(0x09800000), U16(1), U16(0x314d) },
	{ U32(0x0f500010), U32(0x07000000), U16(1), U16(0x3161) },
	{ U32(0x0f700010), U32(0x06000000), U16(1), U16(0x317a) },
	{ U32(0x0f700000), U32(0x04000000), U16(1), U16(0x3192) },
	{ U32(0x0f500010), U32(0x07400000), U16(1), U16(0x31aa) },
	{ U32(0x0f700010), U32(0x06400000), U16(1), U16(0x31c6) },
	{ U32(0x0f500000), U32(0x05400000), U16(1), U16(0x31df) },
	{ U32(0x0f700000), U32(0x04400000), U16(1), U16(0x31fb) },
	{ U32(0x0f700000), U32(0x04600000), U16(1), U16(0x3214) },
	{ U32(0x0f700010), U32(0x06600000), U16(1), U16(0x3230) },
	{ U32(0x0f500ff0), U32(0x010000f0), U16(1), U16(0x324c) },
	{ U32(0x0f700ff0), U32(0x000000f0), U16(1), U16(0x3268) },
	{ U32(0x0f5000f0), U32(0x014000f0), U16(1), U16(0x3281) },
	{ U32(0x0f7000f0), U32(0x004000f0), U16(1), U16(0x329e) },
	{ U32(0x0ff00ff0), U32(0x01800f90), U16(1), U16(0x32ba) },
	{ U32(0x0ff00ff0), U32(0x01c00f90), U16(1), U16(0x32d2) },
	{ U32(0x0ff00ff0), U32(0x01a00f90), U16(1), U16(0x32eb) },
	{ U32(0x0ff00ff0), U32(0x01e00f90), U16(1), U16(0x3303) },
	{ U32(0x0f500ff0), U32(0x010000b0), U16(1), U16(0x331c) },
	{ U32(0x0f700ff0), U32(0x000000b0), U16(1), U16(0x3335) },
	{ U32(0x0f5000f0), U32(0x014000b0), U16(1), U16(0x334d) },
	{ U32(0x0f7000f0), U32(0x004000b0), U16(1), U16(0x3369) },
	{ U32(0x0f7000f0), U32(0x006000b0), U16(1), U16(0x3382) },
	{ U32(0x0f700ff0), U32(0x002000b0), U16(1), U16(0x339e) },
	{ U32(0x0f700000), U32(0x04200000), U16(1), U16(0x33b7) },
	{ U32(0x0f700010), U32(0x06200000), U16(1), U16(0x33cf) },
	{ U32(0x0fe00090), U32(0x00400010), U16(1), U16(0x33e8) },
	{ U32(0x0fe00010), U32(0x00400000), U16(1), U16(0x33fd) },
	{ U32(0x0f000000), U32(0x0f000000), U16(1), U16(0x3411) },
	{ U32(0x0ff00ff0), U32(0x01000090), U16(1), U16(0x3422) },
	{ U32(0x0ff00ff0), U32(0x01400090), U16(1), U16(0x3436) },
	{ U32(0x0ff003f0), U32(0x06800070), U16(2), U16(0x344b) },
	{ U32(0x0ff003f0), U32(0x06a00070), U16(2), U16(0x3479) },
	{ U32(0x0ff003f0), U32(0x06b00070), U16(2), U16(0x34a3) },
	{ U32(0x0ff0f000), U32(0x03300000), U16(1), U16(0x34cd) },
	{ U32(0x0ff0f090), U32(0x01300010), U16(1), U16(0x34e1) },
	{ U32(0x0ff0f010), U32(0x01300000), U16(1), U16(0x34f6) },
	{ U32(0x0ff0f000), U32(0x03100000), U16(1), U16(0x350a) },
	{ U32(0x0ff0f090), U32(0x01100010), U16(1), U16(0x351e) },
	{ U32(0x0ff0f010), U32(0x01100000), U16(1), U16(0x3533) },
	{ U32(0x0ff00ff0), U32(0x06500f10), U16(1), U16(0x3547) },
	{ U32(0x0ff00ff0), U32(0x06500f90), U16(1), U16(0x355c) },
	{ U32(0x0ff00ff0), U32(0x06500f30), U16(1), U16(0x3570) },
	{ U32(0x0fe00070), U32(0x07e00050), U16(1), U16(0x3585) },
	{ U32(0x0ff00ff0), U32(0x06700f10), U16(1), U16(0x359d) },
	{ U32(0x0ff00ff0), U32(0x06700f90), U16(1), U16(0x35b5) },
	{ U32(0x0ff00ff0), U32(0x06700f30), U16(1), U16(0x35ca) },
	{ U32(0x0ff00ff0), U32(0x06700f50), U16(1), U16(0x35de) },
	{ U32(0x0ff00ff0), U32(0x06700f70), U16(1), U16(0x35f2) },
	{ U32(0x0ff00ff0), U32(0x06700ff0), U16(1), U16(0x360a) },
	{ U32(0x0ff000f0), U32(0x00400090), U16(1), U16(0x361f) },
	{ U32(0x0fe000f0), U32(0x00a00090), U16(1), U16(0x3634) },
	{ U32(0x0fe000f0), U32(0x00800090), U16(1), U16(0x364c) },
	{ U32(0x0ff00ff0), U32(0x06600f10), U16(1), U16(0x3664) },
	{ U32(0x0ff00ff0), U32(0x06600f90), U16(1), U16(0x367c) },
	{ U32(0x0ff00ff0), U32(0x06600f30), U16(1), U16(0x3691) },
	{ U32(0x0ff00ff0), U32(0x06600f50), U16(1), U16(0x36a5) },
	{ U32(0x0ff00ff0), U32(0x06600f70), U16(1), U16(0x36b9) },
	{ U32(0x0ff00ff0), U32(0x06600ff0), U16(1), U16(0x36d1) },
	{ U32(0x0ff000f0), U32(0x07800010), U16(2), U16(0x36e6) },
	{ U32(0x0ff00ff0), U32(0x06e00f30), U16(1), U16(0x3712) },
	{ U32(0x0fe00030), U32(0x06e00010), U16(1), U16(0x372a) },
	{ U32(0x0ff00ff0), U32(0x06500f50), U16(1), U16(0x373f) },
	{ U32(0x0ff00ff0), U32(0x06500f70), U16(1), U16(0x3754) },
	{ U32(0x0ff00ff0), U32(0x06500ff0), U16(1), U16(0x3769) },
	{ U32(0x0ff003f0), U32(0x06c00070), U16(2), U16(0x377d) },
	{ U32(0x0ff003f0), U32(0x06e00070), U16(2), U16(0x37ab) },
	{ U32(0x0ff003f0), U32(0x06f00070), U16(2), U16(0x37d5) },
	{ U32(0x0fffffff), U32(0x0320f002), U16(1), U16(0x37ff) },
	{ U32(0x0fffffff), U32(0x0320f003), U16(1), U16(0x380f) },
	{ U32(0x0fffffff), U32(0x0320f001), U16(1), U16(0x381f) },
}; /* a32_instruction_groups */

/* Instruction matching flags */
#define F_IT0 1
#define F_IT1 2
#define ISFLAG(b) ((b) < 3)

/* Instruction suffix flags */
#define S_L 1
#define S_S 2
#define S_TODO_x 3
#define S_TODO_y 4
#define S_TODO_z 5
#define S_c 6

/* Instruction operand encodings */
#define O_ARMEI_C_S0N12 1
#define O_ARMEI_REL_S0N12 2
#define O_DIS10_S6N5 3
#define O_IMM00_REL_S0N8 4
#define O_IMM00_S0N7 5
#define O_IMM00_S0N8 6
#define O_IMM0_REL_X_XXXXX___ 7
#define O_IMM_ 8
#define O_IMM_S0N7 9
#define O_IMM_S0N8 10
#define O_IMM_S6N3 11
#define O_IMM_S6N5 12
#define O_IMM_S7N5 13
#define O_IMM_XXX____XX______ 14
#define O_IMM_X___________XXX____XXXXXXXX 15
#define O_RLIST_ 16
#define O_RLIST_L_S0N8 17
#define O_RLIST_P_S0N13 18
#define O_RLIST_P_S0N8 19
#define O_RLIST_S0N13 20
#define O_RLIST_S0N16 21
#define O_RLIST_S0N8 22
#define O_R_S0N3 23
#define O_R_S0N4 24
#define O_R_S12N4 25
#define O_R_S16N4 26
#define O_R_S3N3 27
#define O_R_S3N4 28
#define O_R_S6N3 29
#define O_R_S8N3 30
#define O_R_S8N4 31
#define O_R_X____XXX 32
#define O_SHIFT_ 127
#define O_SHIFT_S21N1 128
#define O_SHIFT_S4N2 129
#define O_SHIFT_S5N2 130
#define O_SHIFT_S6N1 131
#define O_SIMM00_REL_S0N24 132
#define O_SIMM00_SJ2J1_REL_XXXXXXXXXX_____XXXXXXXXXX_ 133
#define O_SIMM0_H_REL_S0N25 134
#define O_SIMM0_REL_S0N11 135
#define O_SIMM0_REL_S0N8 136
#define O_SIMM0_SJ2J1_REL_XXXXXXXXXX_____XXXXXXXXXXX 137
#define O_SIMM0_SJ2J1_REL_XXXXXX_____XXXXXXXXXXX 138
#define O_THUMBEI_C_X___________XXX____XXXXXXXX 139
#define O_TODO(...) 140

PRIVATE byte_t const arm_instruction_db[14383] = {
	/* adcs    */ P32(0x0000ffc0), P32(0x00004140), 'a', 'd', 'c', 's', '\t', O_R_S0N3, O_R_S3N3, 0, 0,
	/* add     */ P32(0x0000f800), P32(0x0000a800), 'a', 'd', 'd', S_c, '\t', O_R_S8N3, 'S', 'P', '#', O_IMM00_S0N8, 0, 0,
	/* add     */ P32(0x0000ff00), P32(0x00004400), 'a', 'd', 'd', S_c, '\t', O_R_X____XXX, O_R_S3N4, 0, 0,
	/* add     */ P32(0x0000ff80), P32(0x0000b000), 'a', 'd', 'd', S_c, '\t', 'S', 'P', 'S', 'P', '#', O_IMM00_S0N7, 0, 0,
	/* adds    */ P32(0x0000fe00), P32(0x00001c00), 'a', 'd', 'd', 's', '\t', O_R_S0N3, O_R_S3N3, '#', O_IMM_S6N3, 0, 0, 0, 0,
	/* adds    */ P32(0x0000fe00), P32(0x00001800), 'a', 'd', 'd', 's', '\t', O_R_S0N3, O_R_S3N3, O_R_S6N3, 0, 0, 0, 0,
	/* adds    */ P32(0x0000f800), P32(0x00003000), 'a', 'd', 'd', 's', '\t', O_R_S8N3, '#', O_IMM_S0N8, 0, 0, 0, 0,
	/* adr     */ P32(0x0000f800), P32(0x0000a000), 'a', 'd', 'r', S_c, '\t', O_R_S8N3, O_IMM00_REL_S0N8, 0, 0,
	/* ands    */ P32(0x0000ffc0), P32(0x00004000), F_IT0, 'a', 'n', 'd', 's', '\t', O_R_S0N3, O_R_S3N3, 0, 0, 0, 0,
	/* and     */ P32(0x0000ffc0), P32(0x00004000), F_IT1, 'a', 'n', 'd', S_c, '\t', O_R_S0N3, O_R_S3N3, 0, 0, 0, 0,
	/* asrs    */ P32(0x0000ffc0), P32(0x00004100), F_IT0, 'a', 's', 'r', 's', '\t', O_R_S0N3, O_R_S3N3, 0, 0, 0, 0,
	/* asr     */ P32(0x0000ffc0), P32(0x00004100), F_IT1, 'a', 's', 'r', S_c, '\t', O_R_S0N3, O_R_S3N3, 0, 0, 0, 0,
	/* asrs    */ P32(0x0000f800), P32(0x00001000), 'a', 's', 'r', 's', '\t', O_R_S0N3, O_R_S3N3, '#', O_DIS10_S6N5, 0, 0, 0, 0,
	/* svc     */ P32(0x0000ff00), P32(0x0000df00), 's', 'v', 'c', S_c, '\t', '#', O_IMM_S0N8, 0, 0,
	/* b       */ P32(0x0000f000), P32(0x0000d000), 'b', S_c, '\t', O_SIMM0_REL_S0N8, 0, 0, 0, 0,
	/* b       */ P32(0x0000f800), P32(0x0000e000), 'b', S_c, '\t', O_SIMM0_REL_S0N11, 0, 0, 0, 0,
	/* bics    */ P32(0x0000ffc0), P32(0x00004380), F_IT0, 'b', 'i', 'c', 's', '\t', O_R_S0N3, O_R_S3N3, 0, 0, 0, 0,
	/* bic     */ P32(0x0000ffc0), P32(0x00004380), F_IT1, 'b', 'i', 'c', S_c, '\t', O_R_S0N3, O_R_S3N3, 0, 0, 0, 0,
	/* bkpt    */ P32(0x0000ff00), P32(0x0000be00), 'b', 'k', 'p', 't', '\t', '#', O_IMM_S0N8, 0, 0,
	/* blx     */ P32(0x0000ff87), P32(0x00004780), 'b', 'l', 'x', S_c, '\t', O_R_S3N4, 0, 0,
	/* bx      */ P32(0x0000ff87), P32(0x00004700), 'b', 'x', S_c, '\t', O_R_S3N4, 0, 0, 0, 0,
	/* cbz     */ P32(0x0000fd00), P32(0x0000b100), 'c', 'b', 'z', '\t', O_R_S0N3, O_IMM0_REL_X_XXXXX___, 0, 0,
	/* cbnz    */ P32(0x0000fd00), P32(0x0000b900), 'c', 'b', 'n', 'z', '\t', O_R_S0N3, O_IMM0_REL_X_XXXXX___, 0, 0,
	/* cmn     */ P32(0x0000ffc0), P32(0x000042c0), 'c', 'm', 'n', S_c, '\t', O_R_S0N3, O_R_S3N3, 0, 0,
	/* cmp     */ P32(0x0000f800), P32(0x00002800), 'c', 'm', 'p', S_c, '\t', O_R_S8N3, '#', O_IMM_S0N8, 0, 0, 0, 0,
	/* cmp     */ P32(0x0000ffc0), P32(0x00004280), 'c', 'm', 'p', S_c, '\t', O_R_S0N3, O_R_S3N3, 0, 0,
	/* cmp     */ P32(0x0000ff00), P32(0x00004500), 'c', 'm', 'p', S_c, '\t', O_R_X____XXX, O_R_S3N4, 0, 0,
	/* eors    */ P32(0x0000ffc0), P32(0x00004040), 'e', 'o', 'r', 's', '\t', O_R_S0N3, O_R_S3N3, 0, 0,
	/* nop     */ P32(0x0000ffff), P32(0x0000bf00), 'n', 'o', 'p', S_c, 0, 0, 0, 0,
	/* sev     */ P32(0x0000ffff), P32(0x0000bf40), 's', 'e', 'v', S_c, 0, 0, 0, 0,
	/* wfe     */ P32(0x0000ffff), P32(0x0000bf20), 'w', 'f', 'e', S_c, 0, 0, 0, 0,
	/* wfi     */ P32(0x0000ffff), P32(0x0000bf30), 'w', 'f', 'i', S_c, 0, 0, 0, 0,
	/* yield   */ P32(0x0000ffff), P32(0x0000bf10), 'y', 'i', 'e', 'l', 'd', S_c, 0, 0,
	/* it      */ P32(0x0000ff00), P32(0x0000bf00), 'i', 't', S_TODO_x, S_TODO_y, S_TODO_z, '\t', O_TODO("firstcond"), 0, 0,
	/* ldm     */ P32(0x0000f800), P32(0x0000c800), 'l', 'd', 'm', S_c, '\t', O_R_S8N3, '!', O_RLIST_S0N8, 0, 0, 0, 0,
	/* ldr     */ P32(0x0000f800), P32(0x00006800), 'l', 'd', 'r', S_c, '\t', O_R_S0N3, '[', O_R_S3N3, '#', O_IMM_S6N5, ']', 0, 0,
	/* ldr     */ P32(0x0000f800), P32(0x00004800), 'l', 'd', 'r', S_c, '\t', O_R_S8N3, O_IMM00_REL_S0N8, 0, 0,
	/* ldr     */ P32(0x0000fe00), P32(0x00005800), 'l', 'd', 'r', S_c, '\t', O_R_S0N3, '[', O_R_S3N3, O_R_S6N3, ']', 0, 0,
	/* ldr     */ P32(0x0000f800), P32(0x00009800), 'l', 'd', 'r', S_c, '\t', O_R_S8N3, '[', 'S', 'P', '#', O_IMM_S0N8, ']', 0, 0, 0, 0,
	/* ldrb    */ P32(0x0000fe00), P32(0x00005c00), 'l', 'd', 'r', 'b', S_c, '\t', O_R_S0N3, '[', O_R_S3N3, O_R_S6N3, ']', 0, 0,
	/* ldrb    */ P32(0x0000f800), P32(0x00007800), 'l', 'd', 'r', 'b', S_c, '\t', O_R_S0N3, '[', O_R_S3N3, '#', O_TODO("imm5"), ']', 0, 0, 0, 0,
	/* ldrh    */ P32(0x0000fe00), P32(0x00005a00), 'l', 'd', 'r', 'h', S_c, '\t', O_R_S0N3, '[', O_R_S3N3, O_R_S6N3, ']', 0, 0,
	/* ldrh    */ P32(0x0000f800), P32(0x00008800), 'l', 'd', 'r', 'h', S_c, '\t', O_R_S0N3, '[', O_R_S3N3, '#', O_IMM_S6N5, ']', 0, 0, 0, 0,
	/* ldrsb   */ P32(0x0000fe00), P32(0x00005600), 'l', 'd', 'r', 's', 'b', S_c, '\t', O_R_S0N3, '[', O_R_S3N3, O_R_S6N3, ']', 0, 0, 0, 0,
	/* ldrsh   */ P32(0x0000fe00), P32(0x00005e00), 'l', 'd', 'r', 's', 'h', S_c, '\t', O_R_S0N3, '[', O_R_S3N3, O_R_S6N3, ']', 0, 0, 0, 0,
	/* lsls    */ P32(0x0000ffc0), P32(0x00004080), F_IT0, 'l', 's', 'l', 's', '\t', O_R_S0N3, O_R_S3N3, 0, 0, 0, 0,
	/* lsl     */ P32(0x0000ffc0), P32(0x00004080), F_IT1, 'l', 's', 'l', S_c, '\t', O_R_S0N3, O_R_S3N3, 0, 0, 0, 0,
	/* movs    */ P32(0x0000ffc0), P32(0x00000000), F_IT0, 'm', 'o', 'v', 's', '\t', O_R_S0N3, O_R_S3N3, 0, 0, 0, 0,
	/* lsls    */ P32(0x0000f800), P32(0x00000000), F_IT0, 'l', 's', 'l', 's', '\t', O_R_S0N3, O_R_S3N3, '#', O_TODO("imm5"), 0, 0,
	/* lsl     */ P32(0x0000f800), P32(0x00000000), F_IT1, 'l', 's', 'l', '\t', O_R_S0N3, O_R_S3N3, '#', O_TODO("imm5"), 0, 0, 0, 0,
	/* lsrs    */ P32(0x0000ffc0), P32(0x000040c0), F_IT0, 'l', 's', 'r', 's', '\t', O_R_S0N3, O_R_S3N3, 0, 0, 0, 0,
	/* lsr     */ P32(0x0000ffc0), P32(0x000040c0), F_IT1, 'l', 's', 'r', S_c, '\t', O_R_S0N3, O_R_S3N3, 0, 0, 0, 0,
	/* lsrs    */ P32(0x0000f800), P32(0x00000800), F_IT0, 'l', 's', 'r', 's', '\t', O_R_S0N3, O_R_S3N3, '#', O_IMM_S6N5, 0, 0,
	/* lsr     */ P32(0x0000f800), P32(0x00000800), F_IT1, 'l', 's', 'r', S_c, '\t', O_R_S0N3, O_R_S3N3, '#', O_IMM_S6N5, 0, 0,
	/* mov     */ P32(0x0000ff00), P32(0x00004600), 'm', 'o', 'v', S_c, '\t', O_R_X____XXX, O_R_S3N4, 0, 0,
	/* movs    */ P32(0x0000f800), P32(0x00002000), F_IT0, 'm', 'o', 'v', 's', '\t', O_R_S8N3, '#', O_TODO("imm8"), 0, 0, 0, 0,
	/* mov     */ P32(0x0000f800), P32(0x00002000), F_IT1, 'm', 'o', 'v', S_c, '\t', O_R_S8N3, '#', O_TODO("imm8"), 0, 0, 0, 0,
	/* muls    */ P32(0x0000ffc0), P32(0x00004340), 'm', 'u', 'l', 's', '\t', O_R_S0N3, O_R_S3N3, O_R_S0N3, 0, 0, 0, 0,
	/* mvns    */ P32(0x0000ffc0), P32(0x000043c0), 'm', 'v', 'n', 's', '\t', O_R_S0N3, O_R_S3N3, 0, 0,
	/* orrs    */ P32(0x0000ffc0), P32(0x00004300), F_IT0, 'o', 'r', 'r', 's', '\t', O_R_S0N3, O_R_S3N3, 0, 0, 0, 0,
	/* orr     */ P32(0x0000ffc0), P32(0x00004300), F_IT1, 'o', 'r', 'r', S_c, '\t', O_R_S0N3, O_R_S3N3, 0, 0, 0, 0,
	/* pop     */ P32(0x0000fe00), P32(0x0000bc00), 'p', 'o', 'p', S_c, '\t', O_RLIST_P_S0N8, 0, 0,
	/* push    */ P32(0x0000fe00), P32(0x0000b400), 'p', 'u', 's', 'h', S_c, '\t', O_RLIST_L_S0N8, 0, 0,
	/* rev16   */ P32(0x0000ffc0), P32(0x0000ba40), 'r', 'e', 'v', '1', '6', S_c, '\t', O_R_S0N3, O_R_S3N3, 0, 0, 0, 0,
	/* rev     */ P32(0x0000ffc0), P32(0x0000ba00), 'r', 'e', 'v', S_c, '\t', O_R_S0N3, O_R_S3N3, 0, 0,
	/* revsh   */ P32(0x0000ffc0), P32(0x0000bac0), 'r', 'e', 'v', 's', 'h', S_c, '\t', O_R_S0N3, O_R_S3N3, 0, 0, 0, 0,
	/* rors    */ P32(0x0000ffc0), P32(0x000041c0), 'r', 'o', 'r', 's', '\t', O_R_S0N3, O_R_S3N3, 0, 0,
	/* rsbs    */ P32(0x0000ffc0), P32(0x00004240), 'r', 's', 'b', 's', '\t', O_R_S0N3, O_R_S3N3, '#', '0', 0, 0, 0, 0,
	/* sbcs    */ P32(0x0000ffc0), P32(0x00004180), 's', 'b', 'c', 's', '\t', O_R_S0N3, O_R_S3N3, 0, 0,
	/* setend  */ P32(0x0000ffff), P32(0x0000b650), 's', 'e', 't', 'e', 'n', 'd', '\t', 'L', 'E', 0, 0, 0, 0,
	/* setend  */ P32(0x0000ffff), P32(0x0000b658), 's', 'e', 't', 'e', 'n', 'd', '\t', 'B', 'E', 0, 0, 0, 0,
	/* stm     */ P32(0x0000f800), P32(0x0000c000), 's', 't', 'm', S_c, '\t', O_R_S8N3, '!', O_RLIST_S0N8, 0, 0, 0, 0,
	/* str     */ P32(0x0000f800), P32(0x00006000), 's', 't', 'r', S_c, '\t', O_R_S0N3, '[', O_R_S3N3, '#', O_IMM_S6N5, ']', 0, 0,
	/* str     */ P32(0x0000fe00), P32(0x00005000), 's', 't', 'r', S_c, '\t', O_R_S0N3, '[', O_R_S3N3, O_R_S6N3, ']', 0, 0,
	/* str     */ P32(0x0000f800), P32(0x00009000), 's', 't', 'r', S_c, '\t', O_R_S8N3, '[', 'S', 'P', '#', O_IMM_S0N8, ']', 0, 0, 0, 0,
	/* strb    */ P32(0x0000f800), P32(0x00007000), 's', 't', 'r', 'b', S_c, '\t', O_R_S0N3, '[', O_R_S3N3, '#', O_TODO("imm5"), ']', 0, 0, 0, 0,
	/* strb    */ P32(0x0000fe00), P32(0x00005400), 's', 't', 'r', 'b', S_c, '\t', O_R_S0N3, '[', O_R_S3N3, O_R_S6N3, ']', 0, 0,
	/* strh    */ P32(0x0000fe00), P32(0x00005200), 's', 't', 'r', 'h', S_c, '\t', O_R_S0N3, '[', O_R_S3N3, O_R_S6N3, ']', 0, 0,
	/* strh    */ P32(0x0000f800), P32(0x00008000), 's', 't', 'r', 'h', S_c, '\t', O_R_S0N3, '[', O_R_S3N3, '#', O_IMM_S6N5, ']', 0, 0, 0, 0,
	/* sub     */ P32(0x0000ff80), P32(0x0000b080), 's', 'u', 'b', S_c, '\t', 'S', 'P', 'S', 'P', '#', O_IMM_S0N7, 0, 0,
	/* subs    */ P32(0x0000fe00), P32(0x00001e00), 's', 'u', 'b', 's', '\t', O_R_S0N3, O_R_S3N3, '#', O_TODO("imm3"), 0, 0, 0, 0,
	/* subs    */ P32(0x0000fe00), P32(0x00001a00), 's', 'u', 'b', 's', '\t', O_R_S0N3, O_R_S3N3, O_R_S6N3, 0, 0, 0, 0,
	/* subs    */ P32(0x0000f800), P32(0x00003800), 's', 'u', 'b', 's', '\t', O_R_S8N3, '#', O_TODO("imm8"), 0, 0, 0, 0,
	/* sxtb    */ P32(0x0000ffc0), P32(0x0000b240), 's', 'x', 't', 'b', S_c, '\t', O_R_S0N3, O_R_S3N3, 0, 0, 0, 0,
	/* sxth    */ P32(0x0000ffc0), P32(0x0000b200), 's', 'x', 't', 'h', S_c, '\t', O_R_S0N3, O_R_S3N3, 0, 0, 0, 0,
	/* tst     */ P32(0x0000ffc0), P32(0x00004200), 't', 's', 't', S_c, '\t', O_R_S0N3, O_R_S3N3, 0, 0,
	/* uxtb    */ P32(0x0000ffc0), P32(0x0000b2c0), 'u', 'x', 't', 'b', S_c, '\t', O_R_S0N3, O_R_S3N3, 0, 0, 0, 0,
	/* uxth    */ P32(0x0000ffc0), P32(0x0000b280), 'u', 'x', 't', 'h', S_c, '\t', O_R_S0N3, O_R_S3N3, 0, 0, 0, 0,
	/* adc     */ P32(0xfbe08000), P32(0xf1400000), 'a', 'd', 'c', S_S, S_c, '\t', O_R_S8N4, O_R_S16N4, '#', O_TODO("const"), 0, 0,
	/* adc     */ P32(0xffe08000), P32(0xeb400000), 'a', 'd', 'c', S_S, S_c, '\t', '.', 'W', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_SHIFT_S4N2, 0, 0, 0, 0,
	/* adr     */ P32(0xfbff8000), P32(0xf20f0000), 'a', 'd', 'r', S_c, '\t', '.', 'W', O_R_S8N4, '+', O_IMM_X___________XXX____XXXXXXXX, 0, 0,
	/* addw    */ P32(0xfbf08000), P32(0xf2000000), 'a', 'd', 'd', 'w', S_c, '\t', O_R_S8N4, O_R_S16N4, '#', O_TODO("imm12"), 0, 0,
	/* cmn     */ P32(0xfbf08f00), P32(0xf1100f00), 'c', 'm', 'n', S_c, '\t', O_R_S16N4, '#', O_TODO("const"), 0, 0, 0, 0,
	/* add     */ P32(0xfbe08000), P32(0xf1000000), 'a', 'd', 'd', S_S, S_c, '\t', '.', 'W', O_R_S8N4, O_R_S16N4, '#', O_TODO("const"), 0, 0, 0, 0,
	/* cmn     */ P32(0xfff08f00), P32(0xeb100f00), 'c', 'm', 'n', S_c, '\t', '.', 'W', O_R_S16N4, O_R_S0N4, O_SHIFT_S4N2, 0, 0,
	/* add     */ P32(0xffe08000), P32(0xeb000000), 'a', 'd', 'd', S_S, S_c, '\t', '.', 'W', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_SHIFT_S4N2, 0, 0, 0, 0,
	/* adr     */ P32(0xfbff8000), P32(0xf2af0000), 'a', 'd', 'r', S_c, '\t', '.', 'W', O_R_S8N4, '-', O_IMM_X___________XXX____XXXXXXXX, 0, 0,
	/* subw    */ P32(0xfbf08000), P32(0xf2a00000), 's', 'u', 'b', 'w', S_c, '\t', O_R_S8N4, O_R_S16N4, '#', O_TODO("imm12"), 0, 0,
	/* tst     */ P32(0xfbf08f00), P32(0xf0100f00), 't', 's', 't', S_c, '\t', O_R_S16N4, '#', O_TODO("const"), 0, 0, 0, 0,
	/* and     */ P32(0xfbe08000), P32(0xf0000000), 'a', 'n', 'd', S_S, S_c, '\t', O_R_S8N4, O_R_S16N4, '#', O_THUMBEI_C_X___________XXX____XXXXXXXX, 0, 0,
	/* tst     */ P32(0xfff08f00), P32(0xea100f00), 't', 's', 't', S_c, '\t', '.', 'W', 0, 0,
	/* and     */ P32(0xffe08000), P32(0xea000000), 'a', 'n', 'd', S_S, S_c, '\t', '.', 'W', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_SHIFT_S4N2, 0, 0, 0, 0,
	/* mov     */ P32(0xffeff0f0), P32(0xea4f0000), 'm', 'o', 'v', S_S, S_c, '\t', '.', 'W', O_R_S8N4, O_R_S0N4, 0, 0,
	/* rrx     */ P32(0xffeff0f0), P32(0xea4f0030), 'r', 'r', 'x', S_S, S_c, '\t', O_R_S8N4, O_R_S0N4, 0, 0, 0, 0,
	/* asr     */ P32(0xffef8030), P32(0xea4f0020), 'a', 's', 'r', S_S, S_c, '\t', '.', 'W', O_R_S8N4, O_R_S0N4, '#', O_IMM_XXX____XX______, 0, 0, 0, 0,
	/* lsl     */ P32(0xffef8030), P32(0xea4f0000), 'l', 's', 'l', S_S, S_c, '\t', '.', 'W', O_R_S8N4, O_R_S0N4, '#', O_TODO("imm5"), 0, 0, 0, 0,
	/* lsr     */ P32(0xffef8030), P32(0xea4f0010), 'l', 's', 'r', S_S, S_c, '\t', '.', 'W', O_R_S8N4, O_R_S0N4, '#', O_IMM_XXX____XX______, 0, 0, 0, 0,
	/* ror     */ P32(0xffef8030), P32(0xea4f0030), 'r', 'o', 'r', S_S, S_c, '\t', O_R_S8N4, O_R_S0N4, '#', O_IMM_XXX____XX______, 0, 0,
	/* orr     */ P32(0xffe08000), P32(0xea400000), 'o', 'r', 'r', S_S, S_c, '\t', '.', 'W', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_SHIFT_S4N2, 0, 0, 0, 0,
	/* asr     */ P32(0xffe0f0f0), P32(0xfa40f000), 'a', 's', 'r', S_S, S_c, '\t', '.', 'W', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* clrex   */ P32(0xffffffff), P32(0xf3bf8f2f), 'c', 'l', 'r', 'e', 'x', S_c, 0, 0,
	/* nop     */ P32(0xffffffff), P32(0xf3af8000), 'n', 'o', 'p', S_c, '\t', '.', 'W', 0, 0,
	/* sev     */ P32(0xffffffff), P32(0xf3af8004), 's', 'e', 'v', S_c, '\t', '.', 'W', 0, 0,
	/* wfe     */ P32(0xffffffff), P32(0xf3af8002), 'w', 'f', 'e', S_c, '\t', '.', 'W', 0, 0,
	/* wfi     */ P32(0xffffffff), P32(0xf3af8003), 'w', 'f', 'i', S_c, '\t', '.', 'W', 0, 0,
	/* yield   */ P32(0xffffffff), P32(0xf3af8001), 'y', 'i', 'e', 'l', 'd', S_c, '\t', '.', 'W', 0, 0, 0, 0,
	/* dbg     */ P32(0xfffffff0), P32(0xf3af80f0), 'd', 'b', 'g', S_c, '\t', '#', O_TODO("option"), 0, 0,
	/* dmb     */ P32(0xfffffff0), P32(0xf3bf8f50), 'd', 'm', 'b', S_c, '\t', '#', O_TODO("option"), 0, 0,
	/* dsb     */ P32(0xfffffff0), P32(0xf3bf8f40), 'd', 's', 'b', S_c, '\t', '#', O_TODO("option"), 0, 0,
	/* isb     */ P32(0xfffffff0), P32(0xf3bf8f60), 'i', 's', 'b', S_c, '\t', '#', O_TODO("option"), 0, 0,
	/* mrs     */ P32(0xfffff0ff), P32(0xf3ef8000), 'm', 'r', 's', S_c, '\t', O_R_S8N4, 'C', 'P', 'S', 'R', 0, 0,
	/* mrs     */ P32(0xfffff0ff), P32(0xf3ff8000), 'm', 'r', 's', S_c, '\t', O_R_S8N4, 'S', 'P', 'S', 'R', 0, 0,
	/* bxj     */ P32(0xfff0ffff), P32(0xf3c08f00), 'b', 'x', 'j', S_c, '\t', O_R_S16N4, 0, 0,
	/* msr     */ P32(0xfff0ffff), P32(0xf3808800), 'm', 's', 'r', S_c, '\t', 'C', 'P', 'S', 'R', '_', 'f', O_R_S16N4, 0, 0, 0, 0,
	/* msr     */ P32(0xfff0ffff), P32(0xf3808400), 'm', 's', 'r', S_c, '\t', 'C', 'P', 'S', 'R', '_', 's', O_R_S16N4, 0, 0, 0, 0,
	/* msr     */ P32(0xfff0ffff), P32(0xf3808c00), 'm', 's', 'r', S_c, '\t', 'C', 'P', 'S', 'R', '_', 'f', 's', O_R_S16N4, 0, 0, 0, 0,
	/* b       */ P32(0xf800d000), P32(0xf0008000), 'b', S_c, '\t', '.', 'W', O_SIMM0_SJ2J1_REL_XXXXXX_____XXXXXXXXXXX, 0, 0,
	/* b       */ P32(0xf800d000), P32(0xf0009000), 'b', S_c, '\t', '.', 'W', O_SIMM0_SJ2J1_REL_XXXXXXXXXX_____XXXXXXXXXXX, 0, 0,
	/* bfc     */ P32(0xffff8020), P32(0xf36f0000), 'b', 'f', 'c', S_c, '\t', O_R_S8N4, '#', O_TODO("lsb"), '#', O_TODO("width"), 0, 0,
	/* bfi     */ P32(0xfff08020), P32(0xf3600000), 'b', 'f', 'i', S_c, '\t', O_R_S8N4, O_R_S16N4, '#', O_TODO("lsb"), '#', O_TODO("width"), 0, 0,
	/* bic     */ P32(0xfbe08000), P32(0xf0200000), 'b', 'i', 'c', S_S, S_c, '\t', O_R_S8N4, O_R_S16N4, '#', O_TODO("const"), 0, 0,
	/* bic     */ P32(0xffe08000), P32(0xea200000), 'b', 'i', 'c', S_S, S_c, '\t', '.', 'W', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_SHIFT_S4N2, 0, 0, 0, 0,
	/* bl      */ P32(0xf800d000), P32(0xf000d000), 'b', 'l', S_c, '\t', O_SIMM0_SJ2J1_REL_XXXXXXXXXX_____XXXXXXXXXXX, 0, 0, 0, 0,
	/* blx     */ P32(0xf800d001), P32(0xf000c000), 'b', 'l', 'x', S_c, '\t', O_SIMM00_SJ2J1_REL_XXXXXXXXXX_____XXXXXXXXXX_, 0, 0,
	/* cdp2    */ P32(0xff000010), P32(0xfe000000), 'c', 'd', 'p', '2', S_c, '\t', O_TODO("coproc"), O_TODO("opc1"), O_TODO("CRd"), O_TODO("CRn"), O_TODO("CRm"), O_TODO("opc2"), 0, 0, 0, 0,
	/* cdp     */ P32(0xff000010), P32(0xee000000), 'c', 'd', 'p', S_c, '\t', O_TODO("coproc"), O_TODO("opc1"), O_TODO("CRd"), O_TODO("CRn"), O_TODO("CRm"), O_TODO("opc2"), 0, 0,
	/* clz     */ P32(0xfff0f0f0), P32(0xfab0f080), 'c', 'l', 'z', S_c, '\t', O_R_S8N4, O_R_S0N4, 0, 0,
	/* cmp     */ P32(0xfff08f00), P32(0xebb00f00), 'c', 'm', 'p', S_c, '\t', '.', 'W', O_R_S16N4, O_R_S0N4, O_SHIFT_S4N2, 0, 0,
	/* sub     */ P32(0xffe08000), P32(0xeba00000), 's', 'u', 'b', S_S, S_c, '\t', '.', 'W', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_SHIFT_S4N2, 0, 0, 0, 0,
	/* cmp     */ P32(0xfbf08f00), P32(0xf1b00f00), 'c', 'm', 'p', S_c, '\t', '.', 'W', O_R_S16N4, '#', O_TODO("const"), 0, 0,
	/* sub     */ P32(0xfbe08000), P32(0xf1a00000), 's', 'u', 'b', S_S, S_c, '\t', '.', 'W', O_R_S8N4, O_R_S16N4, '#', O_TODO("const"), 0, 0, 0, 0,
	/* teq     */ P32(0xfbf08f00), P32(0xf0900f00), 't', 'e', 'q', S_c, '\t', O_R_S16N4, '#', O_TODO("const"), 0, 0, 0, 0,
	/* eor     */ P32(0xfbe08000), P32(0xf0800000), 'e', 'o', 'r', S_S, S_c, '\t', O_R_S8N4, O_R_S16N4, '#', O_TODO("const"), 0, 0,
	/* teq     */ P32(0xfff08f00), P32(0xea900f00), 't', 'e', 'q', S_c, '\t', O_R_S16N4, O_R_S0N4, O_SHIFT_S4N2, 0, 0, 0, 0,
	/* eor     */ P32(0xffe08000), P32(0xea800000), 'e', 'o', 'r', S_S, S_c, '\t', '.', 'W', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_SHIFT_S4N2, 0, 0, 0, 0,
	/* mrrc2   */ P32(0xfff00000), P32(0xfc500000), 'm', 'r', 'r', 'c', '2', S_c, '\t', O_TODO("coproc"), O_TODO("opc"), O_R_S12N4, O_TODO("Rt2"), O_TODO("CRm"), 0, 0, 0, 0,
	/* ldc2    */ P32(0xfe1f0000), P32(0xfc1f0000), 'l', 'd', 'c', '2', S_L, S_c, '\t', O_TODO("coproc"), O_TODO("CRd"), O_TODO("label"), 0, 0,
	/* ldc2    */ P32(0xfe100000), P32(0xfc100000), 'l', 'd', 'c', '2', S_L, S_c, '\t', O_TODO("coproc"), O_TODO("CRd"), '[', O_R_S16N4, '#', '+', '/', '-', O_IMM_S0N8, ']', '!', 0, 0,
	/* mrrc    */ P32(0xfff00000), P32(0xec500000), 'm', 'r', 'r', 'c', S_c, '\t', O_TODO("coproc"), O_TODO("opc"), O_R_S12N4, O_TODO("Rt2"), O_TODO("CRm"), 0, 0,
	/* ldc     */ P32(0xfe1f0000), P32(0xec1f0000), 'l', 'd', 'c', S_L, S_c, '\t', O_TODO("coproc"), O_TODO("CRd"), O_TODO("label"), 0, 0, 0, 0,
	/* ldc     */ P32(0xfe100000), P32(0xec100000), 'l', 'd', 'c', S_L, S_c, '\t', O_TODO("coproc"), O_TODO("CRd"), '[', O_R_S16N4, '#', '+', '/', '-', O_IMM_S0N8, ']', '!', 0, 0, 0, 0,
	/* pop     */ P32(0xffff0000), P32(0xe8bd0000), 'p', 'o', 'p', S_c, '\t', '.', 'W', O_RLIST_S0N16, 0, 0, 0, 0,
	/* ldm     */ P32(0xffd02000), P32(0xe8900000), 'l', 'd', 'm', S_c, '\t', '.', 'W', O_R_S16N4, '!', O_RLIST_P_S0N13, 0, 0,
	/* ldmdb   */ P32(0xffd02000), P32(0xe9100000), 'l', 'd', 'm', 'd', 'b', S_c, '\t', O_R_S16N4, '!', O_RLIST_P_S0N13, 0, 0,
	/* pop     */ P32(0xffff0fff), P32(0xf85d0b04), 'p', 'o', 'p', S_c, '\t', '.', 'W', O_RLIST_, 0, 0, 0, 0,
	/* ldr     */ P32(0xfff00fc0), P32(0xf8500000), 'l', 'd', 'r', S_c, '\t', '.', 'W', O_R_S12N4, '[', O_R_S16N4, O_R_S0N4, 'L', 'S', 'L', '#', O_TODO("imm2"), ']', 0, 0, 0, 0,
	/* ldrt    */ P32(0xfff00f00), P32(0xf8500e00), 'l', 'd', 'r', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', O_TODO("imm8"), ']', 0, 0, 0, 0,
	/* ldr     */ P32(0xfff00d00), P32(0xf8500900), 'l', 'd', 'r', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm8"), 0, 0,
	/* ldr     */ P32(0xfff00c00), P32(0xf8500c00), 'l', 'd', 'r', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', '+', '/', '-', O_TODO("imm8"), ']', '!', 0, 0,
	/* ldr     */ P32(0xfff00000), P32(0xf8d00000), 'l', 'd', 'r', S_c, '\t', '.', 'W', O_R_S12N4, '[', O_R_S16N4, '#', O_TODO("imm12"), ']', 0, 0, 0, 0,
	/* ldr     */ P32(0xff7f0000), P32(0xf85f0000), 'l', 'd', 'r', S_c, '\t', '.', 'W', O_R_S12N4, O_TODO("label"), 0, 0, 0, 0,
	/* pld     */ P32(0xfff0ffc0), P32(0xf810f000), 'p', 'l', 'd', S_c, '\t', '[', O_R_S16N4, O_R_S0N4, 'L', 'S', 'L', '#', O_TODO("imm2"), ']', 0, 0,
	/* pld     */ P32(0xfff0ff00), P32(0xf810fc00), 'p', 'l', 'd', S_c, '\t', '[', O_R_S16N4, '#', '-', O_TODO("imm8"), ']', 0, 0,
	/* ldrb    */ P32(0xfff00fc0), P32(0xf8100000), 'l', 'd', 'r', 'b', S_c, '\t', '.', 'W', O_R_S12N4, '[', O_R_S16N4, O_R_S0N4, 'L', 'S', 'L', '#', O_TODO("imm2"), ']', 0, 0,
	/* ldrbt   */ P32(0xfff00f00), P32(0xf8100e00), 'l', 'd', 'r', 'b', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', O_TODO("imm8"), ']', 0, 0, 0, 0,
	/* pld     */ P32(0xfff0f000), P32(0xf890f000), 'p', 'l', 'd', S_c, '\t', '[', O_R_S16N4, '#', O_TODO("imm12"), ']', 0, 0,
	/* ldrb    */ P32(0xfff00d00), P32(0xf8100900), 'l', 'd', 'r', 'b', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm8"), 0, 0,
	/* ldrb    */ P32(0xfff00c00), P32(0xf8100c00), 'l', 'd', 'r', 'b', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', '+', '/', '-', O_TODO("imm8"), ']', '!', 0, 0, 0, 0,
	/* ldrb    */ P32(0xfff00000), P32(0xf8900000), 'l', 'd', 'r', 'b', S_c, '\t', '.', 'W', O_R_S12N4, '[', O_R_S16N4, '#', O_TODO("imm12"), ']', 0, 0,
	/* pld     */ P32(0xff7ff000), P32(0xf81ff000), 'p', 'l', 'd', S_c, '\t', '+', '/', '-', O_TODO("label"), 0, 0, 0, 0,
	/* ldrb    */ P32(0xff7f0000), P32(0xf81f0000), 'l', 'd', 'r', 'b', S_c, '\t', O_R_S12N4, O_TODO("label"), 0, 0, 0, 0,
	/* ldrd    */ P32(0xff7f0000), P32(0xe95f0000), 'l', 'd', 'r', 'd', S_c, '\t', O_R_S12N4, O_TODO("Rt2"), O_TODO("label"), 0, 0, 0, 0,
	/* ldrd    */ P32(0xff500000), P32(0xe9500000), 'l', 'd', 'r', 'd', S_c, '\t', O_R_S12N4, O_TODO("Rt2"), '[', O_R_S16N4, '#', '+', '/', '-', O_IMM_S0N8, ']', '!', 0, 0, 0, 0,
	/* ldrd    */ P32(0xff700000), P32(0xe8700000), 'l', 'd', 'r', 'd', S_c, '\t', O_R_S12N4, O_TODO("Rt2"), '[', O_R_S16N4, ']', '#', '+', '/', '-', O_IMM_S0N8, 0, 0, 0, 0,
	/* ldrex   */ P32(0xfff00f00), P32(0xe8500f00), 'l', 'd', 'r', 'e', 'x', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', O_IMM_S0N8, ']', 0, 0, 0, 0,
	/* ldrexb  */ P32(0xfff00fff), P32(0xe8d00f4f), 'l', 'd', 'r', 'e', 'x', 'b', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', 0, 0, 0, 0,
	/* ldrexd  */ P32(0xfff000ff), P32(0xe8d0007f), 'l', 'd', 'r', 'e', 'x', 'd', S_c, '\t', O_R_S12N4, O_TODO("Rt2"), '[', O_R_S16N4, ']', 0, 0, 0, 0,
	/* ldrexh  */ P32(0xfff00fff), P32(0xe8d00f5f), 'l', 'd', 'r', 'e', 'x', 'h', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', 0, 0, 0, 0,
	/* pldw    */ P32(0xfff0ffc0), P32(0xf830f000), 'p', 'l', 'd', 'w', S_c, '\t', '[', O_R_S16N4, O_R_S0N4, 'L', 'S', 'L', '#', O_TODO("imm2"), ']', 0, 0,
	/* pldw    */ P32(0xfff0ff00), P32(0xf830fc00), 'p', 'l', 'd', 'w', S_c, '\t', '[', O_R_S16N4, '#', '-', O_TODO("imm8"), ']', 0, 0, 0, 0,
	/* ldrh    */ P32(0xfff00fc0), P32(0xf8300000), 'l', 'd', 'r', 'h', S_c, '\t', '.', 'W', O_R_S12N4, '[', O_R_S16N4, O_R_S0N4, 'L', 'S', 'L', '#', O_TODO("imm2"), ']', 0, 0,
	/* ldrht   */ P32(0xfff00f00), P32(0xf8300e00), 'l', 'd', 'r', 'h', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', O_TODO("imm8"), ']', 0, 0, 0, 0,
	/* pldw    */ P32(0xfff0f000), P32(0xf8b0f000), 'p', 'l', 'd', 'w', S_c, '\t', '[', O_R_S16N4, '#', O_TODO("imm12"), ']', 0, 0,
	/* ldrh    */ P32(0xfff00d00), P32(0xf8300900), 'l', 'd', 'r', 'h', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm8"), 0, 0,
	/* ldrh    */ P32(0xfff00c00), P32(0xf8300c00), 'l', 'd', 'r', 'h', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', '+', '/', '-', O_TODO("imm8"), ']', '!', 0, 0, 0, 0,
	/* ldrh    */ P32(0xfff00000), P32(0xf8b00000), 'l', 'd', 'r', 'h', S_c, '\t', '.', 'W', O_R_S12N4, '[', O_R_S16N4, '#', O_TODO("imm12"), ']', 0, 0,
	/* ldrh    */ P32(0xff7f0000), P32(0xf83f0000), 'l', 'd', 'r', 'h', S_c, '\t', O_R_S12N4, O_TODO("label"), 0, 0, 0, 0,
	/* pli     */ P32(0xfff0ffc0), P32(0xf910f000), 'p', 'l', 'i', S_c, '\t', '[', O_R_S16N4, O_R_S0N4, 'L', 'S', 'L', '#', O_TODO("imm2"), ']', 0, 0,
	/* pli     */ P32(0xfff0ff00), P32(0xf910fc00), 'p', 'l', 'i', S_c, '\t', '[', O_R_S16N4, '#', '-', O_TODO("imm8"), ']', 0, 0,
	/* ldrsb   */ P32(0xfff00fc0), P32(0xf9100000), 'l', 'd', 'r', 's', 'b', S_c, '\t', '.', 'W', O_R_S12N4, '[', O_R_S16N4, O_R_S0N4, 'L', 'S', 'L', '#', O_TODO("imm2"), ']', 0, 0,
	/* ldrsbt  */ P32(0xfff00f00), P32(0xf9100e00), 'l', 'd', 'r', 's', 'b', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', O_TODO("imm8"), ']', 0, 0,
	/* pli     */ P32(0xfff0f000), P32(0xf990f000), 'p', 'l', 'i', S_c, '\t', '[', O_R_S16N4, '#', O_TODO("imm12"), ']', 0, 0,
	/* ldrsb   */ P32(0xfff00d00), P32(0xf9100900), 'l', 'd', 'r', 's', 'b', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm8"), 0, 0, 0, 0,
	/* ldrsb   */ P32(0xfff00c00), P32(0xf9100c00), 'l', 'd', 'r', 's', 'b', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', '+', '/', '-', O_TODO("imm8"), ']', '!', 0, 0, 0, 0,
	/* ldrsb   */ P32(0xfff00000), P32(0xf9900000), 'l', 'd', 'r', 's', 'b', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', O_TODO("imm12"), ']', 0, 0, 0, 0,
	/* pli     */ P32(0xff7ff000), P32(0xf91ff000), 'p', 'l', 'i', S_c, '\t', '+', '/', '-', O_TODO("label"), 0, 0, 0, 0,
	/* ldrsb   */ P32(0xff7f0000), P32(0xf91f0000), 'l', 'd', 'r', 's', 'b', S_c, '\t', O_R_S12N4, O_TODO("label"), 0, 0, 0, 0,
	/* ldrsh   */ P32(0xfff00fc0), P32(0xf9300000), 'l', 'd', 'r', 's', 'h', S_c, '\t', '.', 'W', O_R_S12N4, '[', O_R_S16N4, O_R_S0N4, 'L', 'S', 'L', '#', O_TODO("imm2"), ']', 0, 0,
	/* ldrsht  */ P32(0xfff00f00), P32(0xf9300e00), 'l', 'd', 'r', 's', 'h', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', O_TODO("imm8"), ']', 0, 0,
	/* ldrsh   */ P32(0xfff00d00), P32(0xf9300900), 'l', 'd', 'r', 's', 'h', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm8"), 0, 0, 0, 0,
	/* ldrsh   */ P32(0xfff00c00), P32(0xf9300c00), 'l', 'd', 'r', 's', 'h', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', '+', '/', '-', O_TODO("imm8"), ']', '!', 0, 0, 0, 0,
	/* ldrsh   */ P32(0xfff00000), P32(0xf9b00000), 'l', 'd', 'r', 's', 'h', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', O_TODO("imm12"), ']', 0, 0, 0, 0,
	/* ldrsh   */ P32(0xff7f0000), P32(0xf93f0000), 'l', 'd', 'r', 's', 'h', S_c, '\t', O_R_S12N4, O_TODO("label"), 0, 0, 0, 0,
	/* lsl     */ P32(0xffe0f0f0), P32(0xfa00f000), 'l', 's', 'l', S_S, S_c, '\t', '.', 'W', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* lsr     */ P32(0xffe0f0f0), P32(0xfa20f000), 'l', 's', 'r', S_S, S_c, '\t', '.', 'W', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* mcr2    */ P32(0xff100010), P32(0xfe000010), 'm', 'c', 'r', '2', S_c, '\t', O_TODO("coproc"), O_TODO("opc1"), O_R_S12N4, O_TODO("CRn"), O_TODO("CRm"), O_TODO("opc2"), 0, 0, 0, 0,
	/* mcr     */ P32(0xff100010), P32(0xee000010), 'm', 'c', 'r', S_c, '\t', O_TODO("coproc"), O_TODO("opc1"), O_R_S12N4, O_TODO("CRn"), O_TODO("CRm"), O_TODO("opc2"), 0, 0,
	/* mcrr2   */ P32(0xfff00000), P32(0xfc400000), 'm', 'c', 'r', 'r', '2', S_c, '\t', O_TODO("coproc"), O_TODO("opc1"), O_R_S12N4, O_TODO("Rt2"), O_TODO("CRm"), 0, 0, 0, 0,
	/* mcrr    */ P32(0xfff00000), P32(0xec400000), 'm', 'c', 'r', 'r', S_c, '\t', O_TODO("coproc"), O_TODO("opc1"), O_R_S12N4, O_TODO("Rt2"), O_TODO("CRm"), 0, 0,
	/* mul     */ P32(0xfff0f0f0), P32(0xfb00f000), 'm', 'u', 'l', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* mla     */ P32(0xfff000f0), P32(0xfb000000), 'm', 'l', 'a', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_R_S12N4, 0, 0, 0, 0,
	/* mls     */ P32(0xfff000f0), P32(0xfb000010), 'm', 'l', 's', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_R_S12N4, 0, 0, 0, 0,
	/* movt    */ P32(0xfbf08000), P32(0xf2c00000), 'm', 'o', 'v', 't', S_c, '\t', O_R_S8N4, '#', O_TODO("imm16"), 0, 0, 0, 0,
	/* movw    */ P32(0xfbf08000), P32(0xf2400000), 'm', 'o', 'v', 'w', S_c, '\t', O_R_S8N4, '#', O_TODO("imm16"), 0, 0, 0, 0,
	/* mov     */ P32(0xfbef8000), P32(0xf04f0000), 'm', 'o', 'v', S_S, S_c, '\t', '.', 'W', O_R_S8N4, '#', O_TODO("const"), 0, 0,
	/* orr     */ P32(0xfbe08000), P32(0xf0400000), 'o', 'r', 'r', S_S, S_c, '\t', O_R_S8N4, O_R_S16N4, '#', O_TODO("const"), 0, 0,
	/* mrc2    */ P32(0xff100010), P32(0xfe100010), 'm', 'r', 'c', '2', S_c, '\t', O_TODO("coproc"), O_TODO("opc1"), O_R_S12N4, O_TODO("CRn"), O_TODO("CRm"), O_TODO("opc2"), 0, 0, 0, 0,
	/* mrc     */ P32(0xff100010), P32(0xee100010), 'm', 'r', 'c', S_c, '\t', O_TODO("coproc"), O_TODO("opc1"), O_R_S12N4, O_TODO("CRn"), O_TODO("CRm"), O_TODO("opc2"), 0, 0,
	/* mvn     */ P32(0xfbef8000), P32(0xf06f0000), 'm', 'v', 'n', S_S, S_c, '\t', O_R_S8N4, '#', O_TODO("const"), 0, 0, 0, 0,
	/* orn     */ P32(0xfbe08000), P32(0xf0600000), 'o', 'r', 'n', S_S, S_c, '\t', O_R_S8N4, O_R_S16N4, '#', O_TODO("const"), 0, 0,
	/* mvn     */ P32(0xffef8000), P32(0xea6f0000), 'm', 'v', 'n', S_S, S_c, '\t', '.', 'W', O_R_S8N4, O_R_S0N4, O_SHIFT_S4N2, 0, 0,
	/* orn     */ P32(0xffe08000), P32(0xea600000), 'o', 'r', 'n', S_S, S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_SHIFT_S4N2, 0, 0,
	/* pkhbt   */ P32(0xfff08010), P32(0xeac00000), 'p', 'k', 'h', 'b', 't', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 'L', 'S', 'L', '#', O_IMM_XXX____XX______, 0, 0,
	/* push    */ P32(0xffff0000), P32(0xe8ad0000), 'p', 'u', 's', 'h', S_c, '\t', '.', 'W', O_RLIST_S0N16, 0, 0, 0, 0,
	/* stm     */ P32(0xffd0a000), P32(0xe8800000), 's', 't', 'm', S_c, '\t', '.', 'W', O_R_S16N4, '!', O_RLIST_S0N13, 0, 0,
	/* push    */ P32(0xffff0fff), P32(0xf84d0d04), 'p', 'u', 's', 'h', S_c, '\t', '.', 'W', O_RLIST_, 0, 0, 0, 0,
	/* strt    */ P32(0xfff00f00), P32(0xf8400e00), 's', 't', 'r', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', O_TODO("imm8"), ']', 0, 0, 0, 0,
	/* str     */ P32(0xfff00c00), P32(0xf8400c00), 's', 't', 'r', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', '+', '/', '-', O_TODO("imm8"), ']', '!', 0, 0,
	/* qadd16  */ P32(0xfff0f0f0), P32(0xfa90f010), 'q', 'a', 'd', 'd', '1', '6', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* qadd8   */ P32(0xfff0f0f0), P32(0xfa80f010), 'q', 'a', 'd', 'd', '8', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* qadd    */ P32(0xfff0f0f0), P32(0xfa80f080), 'q', 'a', 'd', 'd', S_c, '\t', O_R_S8N4, O_R_S0N4, O_R_S16N4, 0, 0, 0, 0,
	/* qasx    */ P32(0xfff0f0f0), P32(0xfaa0f010), 'q', 'a', 's', 'x', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* qdadd   */ P32(0xfff0f0f0), P32(0xfa80f090), 'q', 'd', 'a', 'd', 'd', S_c, '\t', O_R_S8N4, O_R_S0N4, O_R_S16N4, 0, 0,
	/* qdsub   */ P32(0xfff0f0f0), P32(0xfa80f0b0), 'q', 'd', 's', 'u', 'b', S_c, '\t', O_R_S8N4, O_R_S0N4, O_R_S16N4, 0, 0,
	/* qsax    */ P32(0xfff0f0f0), P32(0xfae0f010), 'q', 's', 'a', 'x', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* qsub16  */ P32(0xfff0f0f0), P32(0xfad0f010), 'q', 's', 'u', 'b', '1', '6', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* qsub8   */ P32(0xfff0f0f0), P32(0xfac0f010), 'q', 's', 'u', 'b', '8', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* qsub    */ P32(0xfff0f0f0), P32(0xfa80f0a0), 'q', 's', 'u', 'b', S_c, '\t', O_R_S8N4, O_R_S0N4, O_R_S16N4, 0, 0, 0, 0,
	/* rbit    */ P32(0xfff0f0f0), P32(0xfa90f0a0), 'r', 'b', 'i', 't', S_c, '\t', O_R_S8N4, O_R_S0N4, 0, 0, 0, 0,
	/* rev16   */ P32(0xfff0f0f0), P32(0xfa90f090), 'r', 'e', 'v', '1', '6', S_c, '\t', '.', 'W', O_R_S8N4, O_R_S0N4, 0, 0,
	/* rev     */ P32(0xfff0f0f0), P32(0xfa90f080), 'r', 'e', 'v', S_c, '\t', '.', 'W', O_R_S8N4, O_R_S0N4, 0, 0, 0, 0,
	/* revsh   */ P32(0xfff0f0f0), P32(0xfa90f0b0), 'r', 'e', 'v', 's', 'h', S_c, '\t', '.', 'W', O_R_S8N4, O_R_S0N4, 0, 0,
	/* ror     */ P32(0xffe0f0f0), P32(0xfa60f000), 'r', 'o', 'r', S_S, S_c, '\t', '.', 'W', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* rsb     */ P32(0xffe08000), P32(0xebc00000), 'r', 's', 'b', S_S, S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_SHIFT_S4N2, 0, 0,
	/* rsb     */ P32(0xfbe08000), P32(0xf1c00000), 'r', 's', 'b', S_S, S_c, '\t', '.', 'W', O_R_S8N4, O_R_S16N4, '#', O_TODO("const"), 0, 0, 0, 0,
	/* sadd16  */ P32(0xfff0f0f0), P32(0xfa90f000), 's', 'a', 'd', 'd', '1', '6', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* sadd8   */ P32(0xfff0f0f0), P32(0xfa80f000), 's', 'a', 'd', 'd', '8', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* sasx    */ P32(0xfff0f0f0), P32(0xfaa0f000), 's', 'a', 's', 'x', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* sbc     */ P32(0xfbe08000), P32(0xf1600000), 's', 'b', 'c', S_S, S_c, '\t', O_R_S8N4, O_R_S16N4, '#', O_TODO("const"), 0, 0,
	/* sbc     */ P32(0xffe08000), P32(0xeb600000), 's', 'b', 'c', S_S, S_c, '\t', '.', 'W', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_SHIFT_S4N2, 0, 0, 0, 0,
	/* sbfx    */ P32(0xfff08020), P32(0xf3400000), 's', 'b', 'f', 'x', S_c, '\t', O_R_S8N4, O_R_S16N4, '#', O_TODO("lsb"), '#', O_TODO("width"), 0, 0, 0, 0,
	/* sdiv    */ P32(0xfff0f0f0), P32(0xfb90f0f0), 's', 'd', 'i', 'v', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* sel     */ P32(0xfff0f0f0), P32(0xfaa0f080), 's', 'e', 'l', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* shadd16 */ P32(0xfff0f0f0), P32(0xfa90f020), 's', 'h', 'a', 'd', 'd', '1', '6', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* shadd8  */ P32(0xfff0f0f0), P32(0xfa80f020), 's', 'h', 'a', 'd', 'd', '8', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* shasx   */ P32(0xfff0f0f0), P32(0xfaa0f020), 's', 'h', 'a', 's', 'x', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* shsax   */ P32(0xfff0f0f0), P32(0xfae0f020), 's', 'h', 's', 'a', 'x', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* shsub16 */ P32(0xfff0f0f0), P32(0xfad0f020), 's', 'h', 's', 'u', 'b', '1', '6', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* shsub8  */ P32(0xfff0f0f0), P32(0xfac0f020), 's', 'h', 's', 'u', 'b', '8', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* smultt  */ P32(0xfff0f0f0), P32(0xfb10f030), 's', 'm', 'u', 'l', 't', 't', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* smlatt  */ P32(0xfff000f0), P32(0xfb100030), 's', 'm', 'l', 'a', 't', 't', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_R_S12N4, 0, 0, 0, 0,
	/* smulbt  */ P32(0xfff0f0f0), P32(0xfb10f010), 's', 'm', 'u', 'l', 'b', 't', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* smlabt  */ P32(0xfff000f0), P32(0xfb100010), 's', 'm', 'l', 'a', 'b', 't', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_R_S12N4, 0, 0, 0, 0,
	/* smultb  */ P32(0xfff0f0f0), P32(0xfb10f020), 's', 'm', 'u', 'l', 't', 'b', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* smlatb  */ P32(0xfff000f0), P32(0xfb100020), 's', 'm', 'l', 'a', 't', 'b', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_R_S12N4, 0, 0, 0, 0,
	/* smulbb  */ P32(0xfff0f0f0), P32(0xfb10f000), 's', 'm', 'u', 'l', 'b', 'b', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* smlabb  */ P32(0xfff000f0), P32(0xfb100000), 's', 'm', 'l', 'a', 'b', 'b', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_R_S12N4, 0, 0, 0, 0,
	/* smuadx  */ P32(0xfff0f0f0), P32(0xfb20f010), 's', 'm', 'u', 'a', 'd', 'x', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* smladx  */ P32(0xfff000f0), P32(0xfb200010), 's', 'm', 'l', 'a', 'd', 'x', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_R_S12N4, 0, 0, 0, 0,
	/* smuad   */ P32(0xfff0f0f0), P32(0xfb20f000), 's', 'm', 'u', 'a', 'd', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* smlad   */ P32(0xfff000f0), P32(0xfb200000), 's', 'm', 'l', 'a', 'd', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_R_S12N4, 0, 0,
	/* smlal   */ P32(0xfff000f0), P32(0xfbc00000), 's', 'm', 'l', 'a', 'l', S_c, '\t', O_R_S12N4, O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* smlaltt */ P32(0xfff000f0), P32(0xfbc000b0), 's', 'm', 'l', 'a', 'l', 't', 't', S_c, '\t', O_R_S12N4, O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* smlalbt */ P32(0xfff000f0), P32(0xfbc00090), 's', 'm', 'l', 'a', 'l', 'b', 't', S_c, '\t', O_R_S12N4, O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* smlaltb */ P32(0xfff000f0), P32(0xfbc000a0), 's', 'm', 'l', 'a', 'l', 't', 'b', S_c, '\t', O_R_S12N4, O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* smlalbb */ P32(0xfff000f0), P32(0xfbc00080), 's', 'm', 'l', 'a', 'l', 'b', 'b', S_c, '\t', O_R_S12N4, O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* smlaldx */ P32(0xfff000f0), P32(0xfbc000d0), 's', 'm', 'l', 'a', 'l', 'd', 'x', S_c, '\t', O_R_S12N4, O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* smlald  */ P32(0xfff000f0), P32(0xfbc000c0), 's', 'm', 'l', 'a', 'l', 'd', S_c, '\t', O_R_S12N4, O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* smulwt  */ P32(0xfff0f0f0), P32(0xfb30f010), 's', 'm', 'u', 'l', 'w', 't', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* smlawt  */ P32(0xfff000f0), P32(0xfb300010), 's', 'm', 'l', 'a', 'w', 't', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_R_S12N4, 0, 0, 0, 0,
	/* smulwb  */ P32(0xfff0f0f0), P32(0xfb30f000), 's', 'm', 'u', 'l', 'w', 'b', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* smlawb  */ P32(0xfff000f0), P32(0xfb300000), 's', 'm', 'l', 'a', 'w', 'b', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_R_S12N4, 0, 0, 0, 0,
	/* smusdx  */ P32(0xfff0f0f0), P32(0xfb40f010), 's', 'm', 'u', 's', 'd', 'x', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* smlsdt  */ P32(0xfff000f0), P32(0xfb400010), 's', 'm', 'l', 's', 'd', 't', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_R_S12N4, 0, 0, 0, 0,
	/* smusd   */ P32(0xfff0f0f0), P32(0xfb40f000), 's', 'm', 'u', 's', 'd', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* smlsdb  */ P32(0xfff000f0), P32(0xfb400000), 's', 'm', 'l', 's', 'd', 'b', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_R_S12N4, 0, 0, 0, 0,
	/* smlsldt */ P32(0xfff000f0), P32(0xfbd000d0), 's', 'm', 'l', 's', 'l', 'd', 't', S_c, '\t', O_R_S12N4, O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* smlsldb */ P32(0xfff000f0), P32(0xfbd000c0), 's', 'm', 'l', 's', 'l', 'd', 'b', S_c, '\t', O_R_S12N4, O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* smmulr  */ P32(0xfff0f0f0), P32(0xfb50f010), 's', 'm', 'm', 'u', 'l', 'r', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* smmlar  */ P32(0xfff000f0), P32(0xfb500010), 's', 'm', 'm', 'l', 'a', 'r', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_R_S12N4, 0, 0, 0, 0,
	/* smmul   */ P32(0xfff0f0f0), P32(0xfb50f000), 's', 'm', 'm', 'u', 'l', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* smmla   */ P32(0xfff000f0), P32(0xfb500000), 's', 'm', 'm', 'l', 'a', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_R_S12N4, 0, 0,
	/* smmlsr  */ P32(0xfff000f0), P32(0xfb600010), 's', 'm', 'm', 'l', 's', 'r', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_R_S12N4, 0, 0, 0, 0,
	/* smmls   */ P32(0xfff000f0), P32(0xfb600000), 's', 'm', 'm', 'l', 's', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_R_S12N4, 0, 0,
	/* smull   */ P32(0xfff000f0), P32(0xfb800000), 's', 'm', 'u', 'l', 'l', S_c, '\t', O_R_S12N4, O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* ssat16  */ P32(0xfff0f0f0), P32(0xf3200000), 's', 's', 'a', 't', '1', '6', S_c, '\t', O_R_S8N4, '#', O_IMM_, O_R_S16N4, 0, 0, 0, 0,
	/* ssat    */ P32(0xffd08020), P32(0xf3000000), 's', 's', 'a', 't', S_c, '\t', O_R_S8N4, '#', O_IMM_XXX____XX______, O_R_S16N4, O_SHIFT_S21N1, 0, 0,
	/* ssax    */ P32(0xfff0f0f0), P32(0xfae0f000), 's', 's', 'a', 'x', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* ssub16  */ P32(0xfff0f0f0), P32(0xfad0f000), 's', 's', 'u', 'b', '1', '6', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* ssub8   */ P32(0xfff0f0f0), P32(0xfac0f000), 's', 's', 'u', 'b', '8', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* stc2    */ P32(0xff500000), P32(0xfd000000), 's', 't', 'c', '2', S_c, '\t', O_TODO("coproc"), O_TODO("CRd"), '[', O_R_S16N4, '#', '+', '/', '-', O_IMM_S0N8, ']', '!', 0, 0, 0, 0,
	/* stc2    */ P32(0xff700000), P32(0xfc200000), 's', 't', 'c', '2', S_c, '\t', O_TODO("coproc"), O_TODO("CRd"), '[', O_R_S16N4, ']', '#', '+', '/', '-', O_IMM_S0N8, 0, 0, 0, 0,
	/* stc2l   */ P32(0xff500000), P32(0xfd400000), 's', 't', 'c', '2', 'l', S_c, '\t', O_TODO("coproc"), O_TODO("CRd"), '[', O_R_S16N4, '#', '+', '/', '-', O_IMM_S0N8, ']', '!', 0, 0,
	/* stc2l   */ P32(0xff700000), P32(0xfc600000), 's', 't', 'c', '2', 'l', S_c, '\t', O_TODO("coproc"), O_TODO("CRd"), '[', O_R_S16N4, ']', '#', '+', '/', '-', O_IMM_S0N8, 0, 0, 0, 0,
	/* stc     */ P32(0xff500000), P32(0xed000000), 's', 't', 'c', S_c, '\t', O_TODO("coproc"), O_TODO("CRd"), '[', O_R_S16N4, '#', '+', '/', '-', O_IMM_S0N8, ']', '!', 0, 0, 0, 0,
	/* stc     */ P32(0xff700000), P32(0xec200000), 's', 't', 'c', S_c, '\t', O_TODO("coproc"), O_TODO("CRd"), '[', O_R_S16N4, ']', '#', '+', '/', '-', O_IMM_S0N8, 0, 0,
	/* stcl    */ P32(0xff500000), P32(0xed400000), 's', 't', 'c', 'l', S_c, '\t', O_TODO("coproc"), O_TODO("CRd"), '[', O_R_S16N4, '#', '+', '/', '-', O_IMM_S0N8, ']', '!', 0, 0, 0, 0,
	/* stcl    */ P32(0xff700000), P32(0xec600000), 's', 't', 'c', 'l', S_c, '\t', O_TODO("coproc"), O_TODO("CRd"), '[', O_R_S16N4, ']', '#', '+', '/', '-', O_IMM_S0N8, 0, 0, 0, 0,
	/* stmdb   */ P32(0xffd0a000), P32(0xe9000000), 's', 't', 'm', 'd', 'b', S_c, '\t', O_R_S16N4, '!', O_RLIST_S0N13, 0, 0,
	/* str     */ P32(0xfff00d00), P32(0xf8400900), 's', 't', 'r', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm8"), 0, 0,
	/* str     */ P32(0xfff00000), P32(0xf8c00000), 's', 't', 'r', S_c, '\t', '.', 'W', O_R_S12N4, '[', O_R_S16N4, '#', O_TODO("imm12"), ']', 0, 0, 0, 0,
	/* str     */ P32(0xfff00fc0), P32(0xf8400000), 's', 't', 'r', S_c, '\t', '.', 'W', O_R_S12N4, '[', O_R_S16N4, O_R_S0N4, 'L', 'S', 'L', '#', O_TODO("imm2"), ']', 0, 0, 0, 0,
	/* strbt   */ P32(0xfff00f00), P32(0xf8000e00), 's', 't', 'r', 'b', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', O_TODO("imm8"), ']', 0, 0, 0, 0,
	/* strb    */ P32(0xfff00c00), P32(0xf8000c00), 's', 't', 'r', 'b', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', '+', '/', '-', O_TODO("imm8"), ']', '!', 0, 0, 0, 0,
	/* strb    */ P32(0xfff00d00), P32(0xf8000900), 's', 't', 'r', 'b', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm8"), 0, 0,
	/* strb    */ P32(0xfff00000), P32(0xf8800000), 's', 't', 'r', 'b', S_c, '\t', '.', 'W', O_R_S12N4, '[', O_R_S16N4, '#', O_TODO("imm12"), ']', 0, 0,
	/* strb    */ P32(0xfff00fc0), P32(0xf8000000), 's', 't', 'r', 'b', S_c, '\t', '.', 'W', O_R_S12N4, '[', O_R_S16N4, O_R_S0N4, 'L', 'S', 'L', '#', O_TODO("imm2"), ']', 0, 0,
	/* strd    */ P32(0xff500000), P32(0xe9400000), 's', 't', 'r', 'd', S_c, '\t', O_R_S12N4, O_TODO("Rt2"), '[', O_R_S16N4, '#', '+', '/', '-', O_IMM_S0N8, ']', '!', 0, 0, 0, 0,
	/* strd    */ P32(0xff700000), P32(0xe8600000), 's', 't', 'r', 'd', S_c, '\t', O_R_S12N4, O_TODO("Rt2"), '[', O_R_S16N4, ']', '#', '+', '/', '-', O_IMM_S0N8, 0, 0, 0, 0,
	/* strex   */ P32(0xfff00000), P32(0xe8400000), 's', 't', 'r', 'e', 'x', S_c, '\t', O_R_S8N4, O_R_S12N4, '[', O_R_S16N4, '#', O_IMM_S0N8, ']', 0, 0,
	/* strexb  */ P32(0xfff00ff0), P32(0xe8c00f40), 's', 't', 'r', 'e', 'x', 'b', S_c, '\t', O_R_S0N4, O_R_S12N4, '[', O_R_S16N4, ']', 0, 0, 0, 0,
	/* strexd  */ P32(0xfff000f0), P32(0xe8c00070), 's', 't', 'r', 'e', 'x', 'd', S_c, '\t', O_R_S0N4, O_R_S12N4, O_TODO("Rt2"), '[', O_R_S16N4, ']', 0, 0,
	/* strexh  */ P32(0xfff00ff0), P32(0xe8c00f50), 's', 't', 'r', 'e', 'x', 'h', S_c, '\t', O_R_S0N4, O_R_S12N4, '[', O_R_S16N4, ']', 0, 0, 0, 0,
	/* strht   */ P32(0xfff00f00), P32(0xf8200e00), 's', 't', 'r', 'h', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', O_TODO("imm8"), ']', 0, 0, 0, 0,
	/* strh    */ P32(0xfff00c00), P32(0xf8200c00), 's', 't', 'r', 'h', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', '+', '/', '-', O_TODO("imm8"), ']', '!', 0, 0, 0, 0,
	/* strh    */ P32(0xfff00d00), P32(0xf8200900), 's', 't', 'r', 'h', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm8"), 0, 0,
	/* strh    */ P32(0xfff00fc0), P32(0xf8200000), 's', 't', 'r', 'h', S_c, '\t', '.', 'W', O_R_S12N4, '[', O_R_S16N4, O_R_S0N4, 'L', 'S', 'L', '#', O_TODO("imm2"), ']', 0, 0,
	/* strh    */ P32(0xfff00000), P32(0xf8a00000), 's', 't', 'r', 'h', S_c, '\t', '.', 'W', O_R_S12N4, '[', O_R_S16N4, '#', O_TODO("imm12"), ']', 0, 0,
	/* sxtb16  */ P32(0xfffff0c0), P32(0xfa2ff080), 's', 'x', 't', 'b', '1', '6', S_c, '\t', O_R_S8N4, O_R_S0N4, O_TODO("rotation"), 0, 0,
	/* sxtab16 */ P32(0xfff0f0c0), P32(0xfa20f080), 's', 'x', 't', 'a', 'b', '1', '6', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_TODO("rotation"), 0, 0, 0, 0,
	/* sxtb    */ P32(0xfffff0c0), P32(0xfa4ff080), 's', 'x', 't', 'b', S_c, '\t', '.', 'W', O_R_S8N4, O_R_S0N4, O_TODO("rotation"), 0, 0,
	/* sxtab   */ P32(0xfff0f0c0), P32(0xfa40f080), 's', 'x', 't', 'a', 'b', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_TODO("rotation"), 0, 0,
	/* sxth    */ P32(0xfffff0c0), P32(0xfa0ff080), 's', 'x', 't', 'h', S_c, '\t', '.', 'W', O_R_S8N4, O_R_S0N4, O_TODO("rotation"), 0, 0,
	/* sxtah   */ P32(0xfff0f0c0), P32(0xfa00f080), 's', 'x', 't', 'a', 'h', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_TODO("rotation"), 0, 0,
	/* tbb     */ P32(0xfff0ffe0), P32(0xe8d0f000), 't', 'b', 'b', S_c, '\t', '[', O_R_S16N4, O_R_S0N4, ']', 0, 0, 0, 0,
	/* uadd16  */ P32(0xfff0f0f0), P32(0xfa90f040), 'u', 'a', 'd', 'd', '1', '6', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* uadd8   */ P32(0xfff0f0f0), P32(0xfa80f040), 'u', 'a', 'd', 'd', '8', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* uasx    */ P32(0xfff0f0f0), P32(0xfaa0f040), 'u', 'a', 's', 'x', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* ubfx    */ P32(0xfff08020), P32(0xf3c00000), 'u', 'b', 'f', 'x', S_c, '\t', O_R_S8N4, O_R_S16N4, '#', O_TODO("lsb"), '#', O_TODO("width"), 0, 0, 0, 0,
	/* udiv    */ P32(0xfff0f0f0), P32(0xfbb0f0f0), 'u', 'd', 'i', 'v', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* uhadd16 */ P32(0xfff0f0f0), P32(0xfa90f060), 'u', 'h', 'a', 'd', 'd', '1', '6', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* uhadd8  */ P32(0xfff0f0f0), P32(0xfa80f060), 'u', 'h', 'a', 'd', 'd', '8', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* uhasx   */ P32(0xfff0f0f0), P32(0xfaa0f060), 'u', 'h', 'a', 's', 'x', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* uhsax   */ P32(0xfff0f0f0), P32(0xfae0f060), 'u', 'h', 's', 'a', 'x', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* uhsub16 */ P32(0xfff0f0f0), P32(0xfad0f060), 'u', 'h', 's', 'u', 'b', '1', '6', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* uhsub8  */ P32(0xfff0f0f0), P32(0xfac0f060), 'u', 'h', 's', 'u', 'b', '8', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* umaal   */ P32(0xfff000f0), P32(0xfbe00060), 'u', 'm', 'a', 'a', 'l', S_c, '\t', O_R_S12N4, O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* umlal   */ P32(0xfff000f0), P32(0xfbe00000), 'u', 'm', 'l', 'a', 'l', S_c, '\t', O_R_S12N4, O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* umull   */ P32(0xfff000f0), P32(0xfba00000), 'u', 'm', 'u', 'l', 'l', S_c, '\t', O_R_S12N4, O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* uqadd16 */ P32(0xfff0f0f0), P32(0xfa90f050), 'u', 'q', 'a', 'd', 'd', '1', '6', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* uqadd8  */ P32(0xfff0f0f0), P32(0xfa80f050), 'u', 'q', 'a', 'd', 'd', '8', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* uqasx   */ P32(0xfff0f0f0), P32(0xfaa0f050), 'u', 'q', 'a', 's', 'x', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* uqsax   */ P32(0xfff0f0f0), P32(0xfae0f050), 'u', 'q', 's', 'a', 'x', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* uqsub16 */ P32(0xfff0f0f0), P32(0xfad0f050), 'u', 'q', 's', 'u', 'b', '1', '6', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* uqsub8  */ P32(0xfff0f0f0), P32(0xfac0f050), 'u', 'q', 's', 'u', 'b', '8', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* usad8   */ P32(0xfff0f0f0), P32(0xfb70f000), 'u', 's', 'a', 'd', '8', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* usada8  */ P32(0xfff000f0), P32(0xfb700000), 'u', 's', 'a', 'd', 'a', '8', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_R_S12N4, 0, 0, 0, 0,
	/* usat16  */ P32(0xfff0f0f0), P32(0xf3a00000), 'u', 's', 'a', 't', '1', '6', S_c, '\t', O_R_S8N4, '#', O_TODO("imm4"), O_R_S16N4, 0, 0, 0, 0,
	/* usat    */ P32(0xffd08020), P32(0xf3800000), 'u', 's', 'a', 't', S_c, '\t', O_R_S8N4, '#', O_TODO("imm5"), O_R_S16N4, O_SHIFT_, 0, 0,
	/* usax    */ P32(0xfff0f0f0), P32(0xfae0f040), 'u', 's', 'a', 'x', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* usub16  */ P32(0xfff0f0f0), P32(0xfad0f040), 'u', 's', 'u', 'b', '1', '6', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* usub8   */ P32(0xfff0f0f0), P32(0xfac0f040), 'u', 's', 'u', 'b', '8', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* uxtb16  */ P32(0xfffff0c0), P32(0xfa3ff080), 'u', 'x', 't', 'b', '1', '6', S_c, '\t', O_R_S8N4, O_R_S0N4, O_TODO("rotation"), 0, 0,
	/* uxtab16 */ P32(0xfff0f0c0), P32(0xfa30f080), 'u', 'x', 't', 'a', 'b', '1', '6', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_TODO("rotation"), 0, 0, 0, 0,
	/* uxtb    */ P32(0xfffff0c0), P32(0xfa5ff080), 'u', 'x', 't', 'b', S_c, '\t', '.', 'W', O_R_S8N4, O_R_S0N4, O_TODO("rotation"), 0, 0,
	/* uxtab   */ P32(0xfff0f0c0), P32(0xfa50f080), 'u', 'x', 't', 'a', 'b', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_TODO("rotation"), 0, 0,
	/* uxth    */ P32(0xfffff0c0), P32(0xfa1ff080), 'u', 'x', 't', 'h', S_c, '\t', '.', 'W', O_R_S8N4, O_R_S0N4, O_TODO("rotation"), 0, 0,
	/* uxtah   */ P32(0xfff0f0c0), P32(0xfa10f080), 'u', 'x', 't', 'a', 'h', S_c, '\t', O_R_S8N4, O_R_S16N4, O_R_S0N4, O_TODO("rotation"), 0, 0,
	/* adc     */ P32(0x0fe00000), P32(0x02a00000), 'a', 'd', 'c', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, '#', O_TODO("const"), 0, 0,
	/* adc     */ P32(0x0fe00090), P32(0x00a00010), 'a', 'd', 'c', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_TODO("type"), O_R_S8N4, 0, 0,
	/* adc     */ P32(0x0fe00010), P32(0x00a00000), 'a', 'd', 'c', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_SHIFT_S5N2, 0, 0,
	/* adr     */ P32(0x0fff0000), P32(0x028f0000), 'a', 'd', 'r', S_c, '\t', O_R_S12N4, '+', O_ARMEI_REL_S0N12, 0, 0, 0, 0,
	/* add     */ P32(0x0fe00000), P32(0x02800000), 'a', 'd', 'd', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, '#', O_TODO("const"), 0, 0,
	/* add     */ P32(0x0fe00090), P32(0x00800010), 'a', 'd', 'd', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_TODO("type"), O_R_S8N4, 0, 0,
	/* add     */ P32(0x0fe00010), P32(0x00800000), 'a', 'd', 'd', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_SHIFT_S5N2, 0, 0,
	/* adr     */ P32(0x0fff0000), P32(0x024f0000), 'a', 'd', 'r', S_c, '\t', O_R_S12N4, '-', O_ARMEI_REL_S0N12, 0, 0, 0, 0,
	/* sub     */ P32(0x0fe00000), P32(0x02400000), 's', 'u', 'b', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, '#', O_TODO("const"), 0, 0,
	/* and     */ P32(0x0fe00000), P32(0x02000000), 'a', 'n', 'd', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, '#', O_ARMEI_C_S0N12, 0, 0,
	/* and     */ P32(0x0fe00090), P32(0x00000010), 'a', 'n', 'd', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_TODO("type"), O_R_S8N4, 0, 0,
	/* and     */ P32(0x0fe00010), P32(0x00000000), 'a', 'n', 'd', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_SHIFT_S5N2, 0, 0,
	/* asr     */ P32(0x0fef0070), P32(0x01a00040), 'a', 's', 'r', S_S, S_c, '\t', O_R_S12N4, O_R_S0N4, '#', O_IMM_S7N5, 0, 0,
	/* asr     */ P32(0x0fef00f0), P32(0x01a00050), 'a', 's', 'r', S_S, S_c, '\t', O_R_S12N4, O_R_S0N4, O_R_S8N4, 0, 0, 0, 0,
	/* b       */ P32(0x0f000000), P32(0x0a000000), 'b', S_c, '\t', O_SIMM00_REL_S0N24, 0, 0, 0, 0,
	/* bl      */ P32(0x0f000000), P32(0x0b000000), 'b', 'l', S_c, '\t', O_SIMM00_REL_S0N24, 0, 0, 0, 0,
	/* blx     */ P32(0xfe000000), P32(0xfa000000), 'b', 'l', 'x', '\t', O_SIMM0_H_REL_S0N25, 0, 0, 0, 0,
	/* bfc     */ P32(0x0fe0007f), P32(0x07c0001f), 'b', 'f', 'c', S_c, '\t', O_R_S12N4, '#', O_TODO("lsb"), '#', O_TODO("width"), 0, 0,
	/* bfi     */ P32(0x0fe00070), P32(0x07c00010), 'b', 'f', 'i', S_c, '\t', O_R_S12N4, O_R_S0N4, '#', O_TODO("lsb"), '#', O_TODO("width"), 0, 0,
	/* bic     */ P32(0x0fe00000), P32(0x03c00000), 'b', 'i', 'c', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, '#', O_TODO("const"), 0, 0,
	/* bic     */ P32(0x0fe00090), P32(0x01c00010), 'b', 'i', 'c', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_TODO("type"), O_R_S8N4, 0, 0,
	/* bic     */ P32(0x0fe00010), P32(0x01c00000), 'b', 'i', 'c', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_SHIFT_S5N2, 0, 0,
	/* bkpt    */ P32(0x0ff000f0), P32(0x01200070), 'b', 'k', 'p', 't', '\t', '#', O_TODO("imm16"), 0, 0,
	/* blx     */ P32(0x0ffffff0), P32(0x012fff30), 'b', 'l', 'x', S_c, '\t', O_R_S0N4, 0, 0,
	/* bx      */ P32(0x0ffffff0), P32(0x012fff10), 'b', 'x', S_c, '\t', O_R_S0N4, 0, 0, 0, 0,
	/* bxj     */ P32(0x0ffffff0), P32(0x012fff20), 'b', 'x', 'j', S_c, '\t', O_R_S0N4, 0, 0,
	/* clrex   */ P32(0xffffffff), P32(0xf57ff01f), 'c', 'l', 'r', 'e', 'x', 0, 0, 0, 0,
	/* dmb     */ P32(0xfffffff0), P32(0xf57ff050), 'd', 'm', 'b', '\t', '#', O_TODO("option"), 0, 0,
	/* dsb     */ P32(0xfffffff0), P32(0xf57ff040), 'd', 's', 'b', '\t', '#', O_TODO("option"), 0, 0,
	/* isb     */ P32(0xfffffff0), P32(0xf57ff060), 'i', 's', 'b', '\t', '#', O_TODO("option"), 0, 0,
	/* pld     */ P32(0xff7ff000), P32(0xf55ff000), 'p', 'l', 'd', '\t', '+', '/', '-', O_TODO("label"), 0, 0, 0, 0,
	/* pldw    */ P32(0xff70f000), P32(0xf550f000), 'p', 'l', 'd', 'w', '\t', '[', O_R_S16N4, '#', '+', '/', '-', O_TODO("imm12"), ']', 0, 0, 0, 0,
	/* ldrb    */ P32(0x0f7f0000), P32(0x055f0000), 'l', 'd', 'r', 'b', S_c, '\t', O_R_S12N4, O_TODO("label"), 0, 0, 0, 0,
	/* ldrb    */ P32(0x0f500000), P32(0x05500000), 'l', 'd', 'r', 'b', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', '+', '/', '-', O_TODO("imm12"), ']', '!', 0, 0, 0, 0,
	/* clz     */ P32(0x0fff0ff0), P32(0x016f0f10), 'c', 'l', 'z', S_c, '\t', O_R_S12N4, O_R_S0N4, 0, 0,
	/* cmn     */ P32(0x0ff0f000), P32(0x03700000), 'c', 'm', 'n', S_c, '\t', O_R_S16N4, '#', O_TODO("const"), 0, 0, 0, 0,
	/* cmn     */ P32(0x0ff0f090), P32(0x01700010), 'c', 'm', 'n', S_c, '\t', O_R_S16N4, O_R_S0N4, O_TODO("type"), O_R_S8N4, 0, 0, 0, 0,
	/* cmn     */ P32(0x0ff0f010), P32(0x01700000), 'c', 'm', 'n', S_c, '\t', O_R_S16N4, O_R_S0N4, O_SHIFT_S5N2, 0, 0, 0, 0,
	/* cmp     */ P32(0x0ff0f000), P32(0x03500000), 'c', 'm', 'p', S_c, '\t', O_R_S16N4, '#', O_TODO("const"), 0, 0, 0, 0,
	/* cmp     */ P32(0x0ff0f090), P32(0x01500010), 'c', 'm', 'p', S_c, '\t', O_R_S16N4, O_R_S0N4, O_TODO("type"), O_R_S8N4, 0, 0, 0, 0,
	/* cmp     */ P32(0x0ff0f010), P32(0x01500000), 'c', 'm', 'p', S_c, '\t', O_R_S16N4, O_R_S0N4, O_SHIFT_S5N2, 0, 0, 0, 0,
	/* dbg     */ P32(0x0ffffff0), P32(0x0320f0f0), 'd', 'b', 'g', S_c, '\t', '#', O_TODO("option"), 0, 0,
	/* eor     */ P32(0x0fe00000), P32(0x02200000), 'e', 'o', 'r', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, '#', O_TODO("const"), 0, 0,
	/* eor     */ P32(0x0fe00090), P32(0x00200010), 'e', 'o', 'r', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_TODO("type"), O_R_S8N4, 0, 0,
	/* eor     */ P32(0x0fe00010), P32(0x00200000), 'e', 'o', 'r', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_SHIFT_S5N2, 0, 0,
	/* pop     */ P32(0x0fff0000), P32(0x08bd0000), 'p', 'o', 'p', S_c, '\t', O_RLIST_S0N16, 0, 0,
	/* ldm     */ P32(0x0fd00000), P32(0x08900000), 'l', 'd', 'm', S_c, '\t', O_R_S16N4, '!', O_RLIST_S0N16, 0, 0, 0, 0,
	/* ldmda   */ P32(0x0fd00000), P32(0x08100000), 'l', 'd', 'm', 'd', 'a', S_c, '\t', O_R_S16N4, '!', O_RLIST_S0N16, 0, 0,
	/* ldmdb   */ P32(0x0fd00000), P32(0x09100000), 'l', 'd', 'm', 'd', 'b', S_c, '\t', O_R_S16N4, '!', O_RLIST_S0N16, 0, 0,
	/* ldmib   */ P32(0x0fd00000), P32(0x09900000), 'l', 'd', 'm', 'i', 'b', S_c, '\t', O_R_S16N4, '!', O_RLIST_S0N16, 0, 0,
	/* pld     */ P32(0xff70f000), P32(0xf510f000), 'p', 'l', 'd', '\t', '[', O_R_S16N4, '#', '+', '/', '-', O_TODO("imm12"), ']', 0, 0, 0, 0,
	/* ldr     */ P32(0x0f7f0000), P32(0x051f0000), 'l', 'd', 'r', S_c, '\t', O_R_S12N4, O_TODO("label"), 0, 0,
	/* ldr     */ P32(0x0f500000), P32(0x05100000), 'l', 'd', 'r', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', '+', '/', '-', O_TODO("imm12"), ']', '!', 0, 0,
	/* pld     */ P32(0xff70f010), P32(0xf710f000), 'p', 'l', 'd', S_c, '\t', '[', O_R_S16N4, '+', '/', '-', O_R_S0N4, O_SHIFT_S5N2, ']', 0, 0, 0, 0,
	/* ldr     */ P32(0x0f500010), P32(0x07100000), 'l', 'd', 'r', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '+', '/', '-', O_R_S0N4, O_SHIFT_S5N2, ']', '!', 0, 0,
	/* ldr     */ P32(0x0f700010), P32(0x06100000), 'l', 'd', 'r', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '+', '/', '-', O_R_S0N4, O_SHIFT_S5N2, 0, 0,
	/* pop     */ P32(0x0fff0fff), P32(0x049d0004), 'p', 'o', 'p', S_c, '\t', O_RLIST_, 0, 0,
	/* ldr     */ P32(0x0f700000), P32(0x04100000), 'l', 'd', 'r', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm12"), 0, 0,
	/* pldw    */ P32(0xff70f010), P32(0xf750f000), 'p', 'l', 'd', 'w', S_c, '\t', '[', O_R_S16N4, '+', '/', '-', O_R_S0N4, O_SHIFT_S5N2, ']', 0, 0,
	/* ldrb    */ P32(0x0f500010), P32(0x07500000), 'l', 'd', 'r', 'b', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '+', '/', '-', O_R_S0N4, O_SHIFT_S5N2, ']', '!', 0, 0, 0, 0,
	/* pli     */ P32(0xff70f010), P32(0xf650f000), 'p', 'l', 'i', '\t', '[', O_R_S16N4, '+', '/', '-', O_R_S0N4, O_SHIFT_S5N2, ']', 0, 0, 0, 0,
	/* ldrb    */ P32(0x0f700010), P32(0x06500000), 'l', 'd', 'r', 'b', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '+', '/', '-', O_R_S0N4, O_SHIFT_S5N2, 0, 0,
	/* pli     */ P32(0xff70f000), P32(0xf450f000), 'p', 'l', 'i', '\t', '[', O_R_S16N4, '#', '+', '/', '-', O_TODO("imm12"), ']', 0, 0, 0, 0,
	/* ldrb    */ P32(0x0f700000), P32(0x04500000), 'l', 'd', 'r', 'b', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm12"), 0, 0,
	/* ldrbt   */ P32(0x0f700000), P32(0x04700000), 'l', 'd', 'r', 'b', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm12"), 0, 0, 0, 0,
	/* ldrbt   */ P32(0x0f700010), P32(0x06700000), 'l', 'd', 'r', 'b', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '+', '/', '-', O_R_S0N4, O_SHIFT_S5N2, 0, 0, 0, 0,
	/* ldrd    */ P32(0x0f500ff0), P32(0x010000d0), 'l', 'd', 'r', 'd', S_c, '\t', O_R_S12N4, O_TODO("Rt2"), '[', O_R_S16N4, '+', '/', '-', O_R_S0N4, ']', '!', 0, 0, 0, 0,
	/* ldrd    */ P32(0x0f700ff0), P32(0x000000d0), 'l', 'd', 'r', 'd', S_c, '\t', O_R_S12N4, O_TODO("Rt2"), '[', O_R_S16N4, ']', '+', '/', '-', O_R_S0N4, 0, 0,
	/* ldrd    */ P32(0x0f7f00f0), P32(0x014f00d0), 'l', 'd', 'r', 'd', S_c, '\t', O_R_S12N4, O_TODO("Rt2"), O_TODO("label"), 0, 0, 0, 0,
	/* ldrd    */ P32(0x0f5000f0), P32(0x014000d0), 'l', 'd', 'r', 'd', S_c, '\t', O_R_S12N4, O_TODO("Rt2"), '[', O_R_S16N4, '#', '+', '/', '-', O_TODO("imm8"), ']', '!', 0, 0, 0, 0,
	/* ldrd    */ P32(0x0f7000f0), P32(0x004000d0), 'l', 'd', 'r', 'd', S_c, '\t', O_R_S12N4, O_TODO("Rt2"), '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm8"), 0, 0, 0, 0,
	/* ldrex   */ P32(0x0ff00fff), P32(0x01900f9f), 'l', 'd', 'r', 'e', 'x', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', 0, 0,
	/* ldrexb  */ P32(0x0ff00fff), P32(0x01d00f9f), 'l', 'd', 'r', 'e', 'x', 'b', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', 0, 0, 0, 0,
	/* ldrexd  */ P32(0x0ff00fff), P32(0x01b00f9f), 'l', 'd', 'r', 'e', 'x', 'd', S_c, '\t', O_R_S12N4, O_TODO("Rt2"), '[', O_R_S16N4, ']', 0, 0, 0, 0,
	/* ldrexh  */ P32(0x0ff00fff), P32(0x01f00f9f), 'l', 'd', 'r', 'e', 'x', 'h', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', 0, 0, 0, 0,
	/* ldrh    */ P32(0x0f7f00f0), P32(0x015f00b0), 'l', 'd', 'r', 'h', S_c, '\t', O_R_S12N4, O_TODO("label"), 0, 0, 0, 0,
	/* ldrh    */ P32(0x0f5000f0), P32(0x015000b0), 'l', 'd', 'r', 'h', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', '+', '/', '-', O_TODO("imm8"), ']', '!', 0, 0, 0, 0,
	/* ldrh    */ P32(0x0f500ff0), P32(0x011000b0), 'l', 'd', 'r', 'h', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '+', '/', '-', O_R_S0N4, ']', '!', 0, 0,
	/* ldrh    */ P32(0x0f700ff0), P32(0x001000b0), 'l', 'd', 'r', 'h', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '+', '/', '-', O_R_S0N4, 0, 0,
	/* ldrh    */ P32(0x0f7000f0), P32(0x005000b0), 'l', 'd', 'r', 'h', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm8"), 0, 0,
	/* ldrht   */ P32(0x0f7000f0), P32(0x007000b0), 'l', 'd', 'r', 'h', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm8"), 0, 0, 0, 0,
	/* ldrht   */ P32(0x0f700ff0), P32(0x003000b0), 'l', 'd', 'r', 'h', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '+', '/', '-', O_R_S0N4, 0, 0,
	/* ldrsb   */ P32(0x0f7f00f0), P32(0x015f00d0), 'l', 'd', 'r', 's', 'b', S_c, '\t', O_R_S12N4, O_TODO("label"), 0, 0, 0, 0,
	/* ldrsb   */ P32(0x0f5000f0), P32(0x015000d0), 'l', 'd', 'r', 's', 'b', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', '+', '/', '-', O_TODO("imm8"), ']', '!', 0, 0, 0, 0,
	/* ldrsb   */ P32(0x0f500ff0), P32(0x011000d0), 'l', 'd', 'r', 's', 'b', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '+', '/', '-', O_R_S0N4, ']', '!', 0, 0, 0, 0,
	/* ldrsb   */ P32(0x0f700ff0), P32(0x001000d0), 'l', 'd', 'r', 's', 'b', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '+', '/', '-', O_R_S0N4, 0, 0,
	/* ldrsb   */ P32(0x0f7000f0), P32(0x005000d0), 'l', 'd', 'r', 's', 'b', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm8"), 0, 0, 0, 0,
	/* ldrsbt  */ P32(0x0f7000f0), P32(0x007000d0), 'l', 'd', 'r', 's', 'b', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm8"), 0, 0, 0, 0,
	/* ldrsbt  */ P32(0x0f700ff0), P32(0x003000d0), 'l', 'd', 'r', 's', 'b', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '+', '/', '-', O_R_S0N4, 0, 0, 0, 0,
	/* ldrsh   */ P32(0x0f7f00f0), P32(0x015f00f0), 'l', 'd', 'r', 's', 'h', S_c, '\t', O_R_S12N4, O_TODO("label"), 0, 0, 0, 0,
	/* ldrsh   */ P32(0x0f5000f0), P32(0x015000f0), 'l', 'd', 'r', 's', 'h', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', '+', '/', '-', O_TODO("imm8"), ']', '!', 0, 0, 0, 0,
	/* ldrsh   */ P32(0x0f500ff0), P32(0x011000f0), 'l', 'd', 'r', 's', 'h', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '+', '/', '-', O_R_S0N4, ']', '!', 0, 0, 0, 0,
	/* ldrsh   */ P32(0x0f700ff0), P32(0x001000f0), 'l', 'd', 'r', 's', 'h', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '+', '/', '-', O_R_S0N4, 0, 0,
	/* ldrsh   */ P32(0x0f7000f0), P32(0x005000f0), 'l', 'd', 'r', 's', 'h', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm8"), 0, 0, 0, 0,
	/* ldrsht  */ P32(0x0f7000f0), P32(0x007000f0), 'l', 'd', 'r', 's', 'h', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm8"), 0, 0, 0, 0,
	/* ldrsht  */ P32(0x0f700ff0), P32(0x003000f0), 'l', 'd', 'r', 's', 'h', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '+', '/', '-', O_R_S0N4, 0, 0, 0, 0,
	/* ldrt    */ P32(0x0f700000), P32(0x04300000), 'l', 'd', 'r', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm12"), 0, 0,
	/* ldrt    */ P32(0x0f700010), P32(0x06300000), 'l', 'd', 'r', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '+', '/', '-', O_R_S0N4, O_SHIFT_S5N2, 0, 0,
	/* mov     */ P32(0x0fef0ff0), P32(0x01a00000), 'm', 'o', 'v', S_S, S_c, '\t', O_R_S12N4, O_R_S0N4, 0, 0, 0, 0,
	/* lsl     */ P32(0x0fef0070), P32(0x01a00000), 'l', 's', 'l', S_S, S_c, '\t', O_R_S12N4, O_R_S0N4, '#', O_TODO("imm5"), 0, 0,
	/* lsl     */ P32(0x0fef00f0), P32(0x01a00010), 'l', 's', 'l', S_S, S_c, '\t', O_R_S12N4, O_R_S0N4, O_R_S8N4, 0, 0, 0, 0,
	/* lsr     */ P32(0x0fef0070), P32(0x01a00020), 'l', 's', 'r', S_S, S_c, '\t', O_R_S12N4, O_R_S0N4, '#', O_IMM_S7N5, 0, 0,
	/* lsr     */ P32(0x0fef00f0), P32(0x01a00030), 'l', 's', 'r', S_S, S_c, '\t', O_R_S12N4, O_R_S0N4, O_R_S8N4, 0, 0, 0, 0,
	/* mla     */ P32(0x0fe000f0), P32(0x00200090), 'm', 'l', 'a', S_S, S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, O_R_S12N4, 0, 0,
	/* mls     */ P32(0x0ff000f0), P32(0x00600090), 'm', 'l', 's', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, O_R_S12N4, 0, 0, 0, 0,
	/* movt    */ P32(0x0ff00000), P32(0x03400000), 'm', 'o', 'v', 't', S_c, '\t', O_R_S12N4, '#', O_TODO("imm16"), 0, 0, 0, 0,
	/* movw    */ P32(0x0ff00000), P32(0x03000000), 'm', 'o', 'v', 'w', S_c, '\t', O_R_S12N4, '#', O_TODO("imm16"), 0, 0, 0, 0,
	/* mov     */ P32(0x0fef0000), P32(0x03a00000), 'm', 'o', 'v', S_S, S_c, '\t', O_R_S12N4, '#', O_TODO("const"), 0, 0, 0, 0,
	/* mrs     */ P32(0x0fff0fff), P32(0x010f0000), 'm', 'r', 's', S_c, '\t', O_R_S12N4, 'C', 'P', 'S', 'R', 0, 0,
	/* mrs     */ P32(0x0fff0fff), P32(0x014f0000), 'm', 'r', 's', S_c, '\t', O_R_S12N4, 'S', 'P', 'S', 'R', 0, 0,
	/* msr     */ P32(0x0ffff000), P32(0x0328f000), 'm', 's', 'r', S_c, '\t', 'C', 'P', 'S', 'R', '_', 'f', '#', O_TODO("const"), 0, 0, 0, 0,
	/* msr     */ P32(0x0ffff000), P32(0x0324f000), 'm', 's', 'r', S_c, '\t', 'C', 'P', 'S', 'R', '_', 's', '#', O_TODO("const"), 0, 0, 0, 0,
	/* msr     */ P32(0x0ffff000), P32(0x032cf000), 'm', 's', 'r', S_c, '\t', 'C', 'P', 'S', 'R', '_', 'f', 's', '#', O_TODO("const"), 0, 0,
	/* msr     */ P32(0x0ffffff0), P32(0x0128f000), 'm', 's', 'r', S_c, '\t', 'C', 'P', 'S', 'R', '_', 'f', O_R_S0N4, 0, 0, 0, 0,
	/* msr     */ P32(0x0ffffff0), P32(0x0124f000), 'm', 's', 'r', S_c, '\t', 'C', 'P', 'S', 'R', '_', 's', O_R_S0N4, 0, 0, 0, 0,
	/* msr     */ P32(0x0ffffff0), P32(0x012cf000), 'm', 's', 'r', S_c, '\t', 'C', 'P', 'S', 'R', '_', 'f', 's', O_R_S0N4, 0, 0, 0, 0,
	/* mul     */ P32(0x0fe0f0f0), P32(0x00000090), 'm', 'u', 'l', S_S, S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0, 0, 0,
	/* mvn     */ P32(0x0fef0000), P32(0x03e00000), 'm', 'v', 'n', S_S, S_c, '\t', O_R_S12N4, '#', O_TODO("const"), 0, 0, 0, 0,
	/* mvn     */ P32(0x0fef0090), P32(0x01e00010), 'm', 'v', 'n', S_S, S_c, '\t', O_R_S12N4, O_R_S0N4, O_TODO("type"), O_R_S8N4, 0, 0,
	/* mvn     */ P32(0x0fef0010), P32(0x01e00000), 'm', 'v', 'n', S_S, S_c, '\t', O_R_S12N4, O_R_S0N4, O_SHIFT_S5N2, 0, 0, 0, 0,
	/* nop     */ P32(0x0fffffff), P32(0x0320f000), 'n', 'o', 'p', S_c, 0, 0, 0, 0,
	/* orr     */ P32(0x0fe00000), P32(0x03800000), 'o', 'r', 'r', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, '#', O_TODO("const"), 0, 0,
	/* orr     */ P32(0x0fe00090), P32(0x01800010), 'o', 'r', 'r', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_TODO("type"), O_R_S8N4, 0, 0,
	/* orr     */ P32(0x0fe00010), P32(0x01800000), 'o', 'r', 'r', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_SHIFT_S5N2, 0, 0,
	/* pkhbt   */ P32(0x0ff00030), P32(0x06800010), 'p', 'k', 'h', 'b', 't', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 'L', 'S', 'L', '#', O_IMM_S7N5, 0, 0,
	/* push    */ P32(0x0fff0fff), P32(0x052d0004), 'p', 'u', 's', 'h', S_c, '\t', O_RLIST_, 0, 0,
	/* str     */ P32(0x0f500000), P32(0x05000000), 's', 't', 'r', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', '+', '/', '-', O_TODO("imm12"), ']', '!', 0, 0,
	/* push    */ P32(0x0fff0000), P32(0x092d0000), 'p', 'u', 's', 'h', S_c, '\t', O_RLIST_S0N16, 0, 0,
	/* stmdb   */ P32(0x0fd00000), P32(0x09000000), 's', 't', 'm', 'd', 'b', S_c, '\t', O_R_S16N4, '!', O_RLIST_S0N16, 0, 0,
	/* qadd16  */ P32(0x0ff00ff0), P32(0x06200f10), 'q', 'a', 'd', 'd', '1', '6', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* qadd8   */ P32(0x0ff00ff0), P32(0x06200f90), 'q', 'a', 'd', 'd', '8', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* qadd    */ P32(0x0ff00ff0), P32(0x01000050), 'q', 'a', 'd', 'd', S_c, '\t', O_R_S12N4, O_R_S0N4, O_R_S16N4, 0, 0, 0, 0,
	/* qasx    */ P32(0x0ff00ff0), P32(0x06200f30), 'q', 'a', 's', 'x', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* qdadd   */ P32(0x0ff00ff0), P32(0x01400050), 'q', 'd', 'a', 'd', 'd', S_c, '\t', O_R_S12N4, O_R_S0N4, O_R_S16N4, 0, 0,
	/* qdsub   */ P32(0x0ff00ff0), P32(0x01600050), 'q', 'd', 's', 'u', 'b', S_c, '\t', O_R_S12N4, O_R_S0N4, O_R_S16N4, 0, 0,
	/* qsax    */ P32(0x0ff00ff0), P32(0x06200f50), 'q', 's', 'a', 'x', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* qsub16  */ P32(0x0ff00ff0), P32(0x06200f70), 'q', 's', 'u', 'b', '1', '6', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* qsub8   */ P32(0x0ff00ff0), P32(0x06200ff0), 'q', 's', 'u', 'b', '8', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* qsub    */ P32(0x0ff00ff0), P32(0x01200050), 'q', 's', 'u', 'b', S_c, '\t', O_R_S12N4, O_R_S0N4, O_R_S16N4, 0, 0, 0, 0,
	/* rbit    */ P32(0x0fff0ff0), P32(0x06ff0f30), 'r', 'b', 'i', 't', S_c, '\t', O_R_S12N4, O_R_S0N4, 0, 0, 0, 0,
	/* rev16   */ P32(0x0fff0ff0), P32(0x06bf0fb0), 'r', 'e', 'v', '1', '6', S_c, '\t', O_R_S12N4, O_R_S0N4, 0, 0, 0, 0,
	/* rev     */ P32(0x0fff0ff0), P32(0x06bf0f30), 'r', 'e', 'v', S_c, '\t', O_R_S12N4, O_R_S0N4, 0, 0,
	/* revsh   */ P32(0x0fff0ff0), P32(0x06ff0fb0), 'r', 'e', 'v', 's', 'h', S_c, '\t', O_R_S12N4, O_R_S0N4, 0, 0, 0, 0,
	/* rrx     */ P32(0x0fef0ff0), P32(0x01a00060), 'r', 'r', 'x', S_S, S_c, '\t', O_R_S12N4, O_R_S0N4, 0, 0, 0, 0,
	/* ror     */ P32(0x0fef0070), P32(0x01a00060), 'r', 'o', 'r', S_S, S_c, '\t', O_R_S12N4, O_R_S0N4, '#', O_IMM_S7N5, 0, 0,
	/* ror     */ P32(0x0fef00f0), P32(0x01a00070), 'r', 'o', 'r', S_S, S_c, '\t', O_R_S12N4, O_R_S0N4, O_R_S8N4, 0, 0, 0, 0,
	/* rsb     */ P32(0x0fe00000), P32(0x02600000), 'r', 's', 'b', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, '#', O_TODO("const"), 0, 0,
	/* rsb     */ P32(0x0fe00090), P32(0x00600010), 'r', 's', 'b', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_TODO("type"), O_R_S8N4, 0, 0,
	/* rsb     */ P32(0x0fe00010), P32(0x00600000), 'r', 's', 'b', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_SHIFT_S5N2, 0, 0,
	/* rsc     */ P32(0x0fe00000), P32(0x02e00000), 'r', 's', 'c', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, '#', O_TODO("const"), 0, 0,
	/* rsc     */ P32(0x0fe00090), P32(0x00e00010), 'r', 's', 'c', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_TODO("type"), O_R_S8N4, 0, 0,
	/* rsc     */ P32(0x0fe00010), P32(0x00e00000), 'r', 's', 'c', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_SHIFT_S5N2, 0, 0,
	/* sadd16  */ P32(0x0ff00ff0), P32(0x06100f10), 's', 'a', 'd', 'd', '1', '6', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* sadd8   */ P32(0x0ff00ff0), P32(0x06100f90), 's', 'a', 'd', 'd', '8', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* sasx    */ P32(0x0ff00ff0), P32(0x06100f30), 's', 'a', 's', 'x', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* sbc     */ P32(0x0fe00000), P32(0x02c00000), 's', 'b', 'c', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, '#', O_TODO("const"), 0, 0,
	/* sbc     */ P32(0x0fe00090), P32(0x00c00010), 's', 'b', 'c', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_TODO("type"), O_R_S8N4, 0, 0,
	/* sbc     */ P32(0x0fe00010), P32(0x00c00000), 's', 'b', 'c', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_SHIFT_S5N2, 0, 0,
	/* sbfx    */ P32(0x0fe00070), P32(0x07a00050), 's', 'b', 'f', 'x', S_c, '\t', O_R_S12N4, O_R_S0N4, '#', O_TODO("lsb"), '#', O_TODO("width"), 0, 0, 0, 0,
	/* sel     */ P32(0x0ff00ff0), P32(0x06800fb0), 's', 'e', 'l', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* setend  */ P32(0xffffffff), P32(0xf1010000), 's', 'e', 't', 'e', 'n', 'd', '\t', 'L', 'E', 0, 0, 0, 0,
	/* setend  */ P32(0xffffffff), P32(0xf1010200), 's', 'e', 't', 'e', 'n', 'd', '\t', 'B', 'E', 0, 0, 0, 0,
	/* sev     */ P32(0x0fffffff), P32(0x0320f004), 's', 'e', 'v', S_c, 0, 0, 0, 0,
	/* shadd16 */ P32(0x0ff00ff0), P32(0x06300f10), 's', 'h', 'a', 'd', 'd', '1', '6', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* shadd8  */ P32(0x0ff00ff0), P32(0x06300f90), 's', 'h', 'a', 'd', 'd', '8', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* shasx   */ P32(0x0ff00ff0), P32(0x06300f30), 's', 'h', 'a', 's', 'x', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* shsax   */ P32(0x0ff00ff0), P32(0x06300f50), 's', 'h', 's', 'a', 'x', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* shsub16 */ P32(0x0ff00ff0), P32(0x06300f70), 's', 'h', 's', 'u', 'b', '1', '6', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* shsub8  */ P32(0x0ff00ff0), P32(0x06300ff0), 's', 'h', 's', 'u', 'b', '8', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* smlatt  */ P32(0x0ff000f0), P32(0x010000e0), 's', 'm', 'l', 'a', 't', 't', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, O_R_S12N4, 0, 0, 0, 0,
	/* smlabt  */ P32(0x0ff000f0), P32(0x010000c0), 's', 'm', 'l', 'a', 'b', 't', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, O_R_S12N4, 0, 0, 0, 0,
	/* smlatb  */ P32(0x0ff000f0), P32(0x010000a0), 's', 'm', 'l', 'a', 't', 'b', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, O_R_S12N4, 0, 0, 0, 0,
	/* smlabb  */ P32(0x0ff000f0), P32(0x01000080), 's', 'm', 'l', 'a', 'b', 'b', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, O_R_S12N4, 0, 0, 0, 0,
	/* smuadx  */ P32(0x0ff0f0f0), P32(0x0700f030), 's', 'm', 'u', 'a', 'd', 'x', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0,
	/* smladx  */ P32(0x0ff000f0), P32(0x07000030), 's', 'm', 'l', 'a', 'd', 'x', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, O_R_S12N4, 0, 0, 0, 0,
	/* smuad   */ P32(0x0ff0f0f0), P32(0x0700f010), 's', 'm', 'u', 'a', 'd', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0,
	/* smlad   */ P32(0x0ff000f0), P32(0x07000010), 's', 'm', 'l', 'a', 'd', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, O_R_S12N4, 0, 0,
	/* smlaltt */ P32(0x0ff000f0), P32(0x014000e0), 's', 'm', 'l', 'a', 'l', 't', 't', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0, 0, 0,
	/* smlalbt */ P32(0x0ff000f0), P32(0x014000c0), 's', 'm', 'l', 'a', 'l', 'b', 't', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0, 0, 0,
	/* smlaltb */ P32(0x0ff000f0), P32(0x014000a0), 's', 'm', 'l', 'a', 'l', 't', 'b', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0, 0, 0,
	/* smlalbb */ P32(0x0ff000f0), P32(0x01400080), 's', 'm', 'l', 'a', 'l', 'b', 'b', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0, 0, 0,
	/* smlaldx */ P32(0x0ff000f0), P32(0x07400030), 's', 'm', 'l', 'a', 'l', 'd', 'x', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0, 0, 0,
	/* smlald  */ P32(0x0ff000f0), P32(0x07400010), 's', 'm', 'l', 'a', 'l', 'd', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0, 0, 0,
	/* smlal   */ P32(0x0fe000f0), P32(0x00e00090), 's', 'm', 'l', 'a', 'l', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0, 0, 0,
	/* smlawt  */ P32(0x0ff000f0), P32(0x012000c0), 's', 'm', 'l', 'a', 'w', 't', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, O_R_S12N4, 0, 0, 0, 0,
	/* smlawb  */ P32(0x0ff000f0), P32(0x01200080), 's', 'm', 'l', 'a', 'w', 'b', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, O_R_S12N4, 0, 0, 0, 0,
	/* smusdx  */ P32(0x0ff0f0f0), P32(0x0700f070), 's', 'm', 'u', 's', 'd', 'x', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0,
	/* smlsdt  */ P32(0x0ff000f0), P32(0x07000070), 's', 'm', 'l', 's', 'd', 't', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, O_R_S12N4, 0, 0, 0, 0,
	/* smusd   */ P32(0x0ff0f0f0), P32(0x0700f050), 's', 'm', 'u', 's', 'd', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0,
	/* smlsdb  */ P32(0x0ff000f0), P32(0x07000050), 's', 'm', 'l', 's', 'd', 'b', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, O_R_S12N4, 0, 0, 0, 0,
	/* smlsldt */ P32(0x0ff000f0), P32(0x07400070), 's', 'm', 'l', 's', 'l', 'd', 't', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0, 0, 0,
	/* smlsldb */ P32(0x0ff000f0), P32(0x07400050), 's', 'm', 'l', 's', 'l', 'd', 'b', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0, 0, 0,
	/* smmulr  */ P32(0x0ff0f0f0), P32(0x0750f030), 's', 'm', 'm', 'u', 'l', 'r', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0,
	/* smmlar  */ P32(0x0ff000f0), P32(0x07500030), 's', 'm', 'm', 'l', 'a', 'r', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, O_R_S12N4, 0, 0, 0, 0,
	/* smmul   */ P32(0x0ff0f0f0), P32(0x0750f010), 's', 'm', 'm', 'u', 'l', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0,
	/* smmla   */ P32(0x0ff000f0), P32(0x07500010), 's', 'm', 'm', 'l', 'a', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, O_R_S12N4, 0, 0,
	/* smmlsr  */ P32(0x0ff000f0), P32(0x075000f0), 's', 'm', 'm', 'l', 's', 'r', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, O_R_S12N4, 0, 0, 0, 0,
	/* smmls   */ P32(0x0ff000f0), P32(0x075000d0), 's', 'm', 'm', 'l', 's', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, O_R_S12N4, 0, 0,
	/* smultt  */ P32(0x0ff000f0), P32(0x016000e0), 's', 'm', 'u', 'l', 't', 't', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0,
	/* smulbt  */ P32(0x0ff000f0), P32(0x016000c0), 's', 'm', 'u', 'l', 'b', 't', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0,
	/* smultb  */ P32(0x0ff000f0), P32(0x016000a0), 's', 'm', 'u', 'l', 't', 'b', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0,
	/* smulbb  */ P32(0x0ff000f0), P32(0x01600080), 's', 'm', 'u', 'l', 'b', 'b', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0,
	/* smull   */ P32(0x0fe000f0), P32(0x00c00090), 's', 'm', 'u', 'l', 'l', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0, 0, 0,
	/* smulwt  */ P32(0x0ff000f0), P32(0x012000e0), 's', 'm', 'u', 'l', 'w', 't', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0,
	/* smulwb  */ P32(0x0ff000f0), P32(0x012000a0), 's', 'm', 'u', 'l', 'w', 'b', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0,
	/* ssat16  */ P32(0x0ff00ff0), P32(0x06a00f30), 's', 's', 'a', 't', '1', '6', S_c, '\t', O_R_S12N4, '#', O_IMM_, O_R_S0N4, 0, 0, 0, 0,
	/* ssat    */ P32(0x0fe00030), P32(0x06a00010), 's', 's', 'a', 't', S_c, '\t', O_R_S12N4, '#', O_IMM_S7N5, O_R_S0N4, O_SHIFT_S6N1, 0, 0,
	/* ssax    */ P32(0x0ff00ff0), P32(0x06100f50), 's', 's', 'a', 'x', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* ssub16  */ P32(0x0ff00ff0), P32(0x06100f70), 's', 's', 'u', 'b', '1', '6', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* ssub8   */ P32(0x0ff00ff0), P32(0x06100ff0), 's', 's', 'u', 'b', '8', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* stm     */ P32(0x0fd00000), P32(0x08800000), 's', 't', 'm', S_c, '\t', O_R_S16N4, '!', O_RLIST_S0N16, 0, 0, 0, 0,
	/* stmda   */ P32(0x0fd00000), P32(0x08000000), 's', 't', 'm', 'd', 'a', S_c, '\t', O_R_S16N4, '!', O_RLIST_S0N16, 0, 0,
	/* stmib   */ P32(0x0fd00000), P32(0x09800000), 's', 't', 'm', 'i', 'b', S_c, '\t', O_R_S16N4, '!', O_RLIST_S0N16, 0, 0,
	/* str     */ P32(0x0f500010), P32(0x07000000), 's', 't', 'r', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '+', '/', '-', O_R_S0N4, O_SHIFT_S5N2, ']', '!', 0, 0,
	/* str     */ P32(0x0f700010), P32(0x06000000), 's', 't', 'r', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '+', '/', '-', O_R_S0N4, O_SHIFT_S5N2, 0, 0,
	/* str     */ P32(0x0f700000), P32(0x04000000), 's', 't', 'r', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm12"), 0, 0,
	/* strb    */ P32(0x0f500010), P32(0x07400000), 's', 't', 'r', 'b', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '+', '/', '-', O_R_S0N4, O_SHIFT_S5N2, ']', '!', 0, 0, 0, 0,
	/* strb    */ P32(0x0f700010), P32(0x06400000), 's', 't', 'r', 'b', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '+', '/', '-', O_R_S0N4, O_SHIFT_S5N2, 0, 0,
	/* strb    */ P32(0x0f500000), P32(0x05400000), 's', 't', 'r', 'b', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', '+', '/', '-', O_TODO("imm12"), ']', '!', 0, 0, 0, 0,
	/* strb    */ P32(0x0f700000), P32(0x04400000), 's', 't', 'r', 'b', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm12"), 0, 0,
	/* strbt   */ P32(0x0f700000), P32(0x04600000), 's', 't', 'r', 'b', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm12"), 0, 0, 0, 0,
	/* strbt   */ P32(0x0f700010), P32(0x06600000), 's', 't', 'r', 'b', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '+', '/', '-', O_R_S0N4, O_SHIFT_S5N2, 0, 0, 0, 0,
	/* strd    */ P32(0x0f500ff0), P32(0x010000f0), 's', 't', 'r', 'd', S_c, '\t', O_R_S12N4, O_TODO("Rt2"), '[', O_R_S16N4, '+', '/', '-', O_R_S0N4, ']', '!', 0, 0, 0, 0,
	/* strd    */ P32(0x0f700ff0), P32(0x000000f0), 's', 't', 'r', 'd', S_c, '\t', O_R_S12N4, O_TODO("Rt2"), '[', O_R_S16N4, ']', '+', '/', '-', O_R_S0N4, 0, 0,
	/* strd    */ P32(0x0f5000f0), P32(0x014000f0), 's', 't', 'r', 'd', S_c, '\t', O_R_S12N4, O_TODO("Rt2"), '[', O_R_S16N4, '#', '+', '/', '-', O_TODO("imm8"), ']', '!', 0, 0, 0, 0,
	/* strd    */ P32(0x0f7000f0), P32(0x004000f0), 's', 't', 'r', 'd', S_c, '\t', O_R_S12N4, O_TODO("Rt2"), '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm8"), 0, 0, 0, 0,
	/* strex   */ P32(0x0ff00ff0), P32(0x01800f90), 's', 't', 'r', 'e', 'x', S_c, '\t', O_R_S12N4, O_R_S0N4, '[', O_R_S16N4, ']', 0, 0, 0, 0,
	/* strexb  */ P32(0x0ff00ff0), P32(0x01c00f90), 's', 't', 'r', 'e', 'x', 'b', S_c, '\t', O_R_S12N4, O_R_S0N4, '[', O_R_S16N4, ']', 0, 0, 0, 0,
	/* strexd  */ P32(0x0ff00ff0), P32(0x01a00f90), 's', 't', 'r', 'e', 'x', 'd', S_c, '\t', O_R_S12N4, O_R_S0N4, O_TODO("Rt2"), '[', O_R_S16N4, ']', 0, 0,
	/* strexh  */ P32(0x0ff00ff0), P32(0x01e00f90), 's', 't', 'r', 'e', 'x', 'h', S_c, '\t', O_R_S12N4, O_R_S0N4, '[', O_R_S16N4, ']', 0, 0, 0, 0,
	/* strh    */ P32(0x0f500ff0), P32(0x010000b0), 's', 't', 'r', 'h', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '+', '/', '-', O_R_S0N4, ']', '!', 0, 0,
	/* strh    */ P32(0x0f700ff0), P32(0x000000b0), 's', 't', 'r', 'h', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '+', '/', '-', O_R_S0N4, 0, 0,
	/* strh    */ P32(0x0f5000f0), P32(0x014000b0), 's', 't', 'r', 'h', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, '#', '+', '/', '-', O_TODO("imm8"), ']', '!', 0, 0, 0, 0,
	/* strh    */ P32(0x0f7000f0), P32(0x004000b0), 's', 't', 'r', 'h', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm8"), 0, 0,
	/* strht   */ P32(0x0f7000f0), P32(0x006000b0), 's', 't', 'r', 'h', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '#', '+', '/', '-', O_TODO("imm8"), 0, 0, 0, 0,
	/* strht   */ P32(0x0f700ff0), P32(0x002000b0), 's', 't', 'r', 'h', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '+', '/', '-', O_R_S0N4, 0, 0,
	/* strt    */ P32(0x0f700000), P32(0x04200000), 's', 't', 'r', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '+', '/', '-', O_TODO("imm12"), 0, 0,
	/* strt    */ P32(0x0f700010), P32(0x06200000), 's', 't', 'r', 't', S_c, '\t', O_R_S12N4, '[', O_R_S16N4, ']', '+', '/', '-', O_R_S0N4, O_SHIFT_S5N2, 0, 0,
	/* sub     */ P32(0x0fe00090), P32(0x00400010), 's', 'u', 'b', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_TODO("type"), O_R_S8N4, 0, 0,
	/* sub     */ P32(0x0fe00010), P32(0x00400000), 's', 'u', 'b', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_SHIFT_S5N2, 0, 0,
	/* svc     */ P32(0x0f000000), P32(0x0f000000), 's', 'v', 'c', S_c, '\t', '#', O_TODO("imm24"), 0, 0,
	/* swp     */ P32(0x0ff00ff0), P32(0x01000090), 's', 'w', 'p', S_c, '\t', O_R_S12N4, O_TODO("Rt2"), '[', O_R_S16N4, ']', 0, 0,
	/* swpb    */ P32(0x0ff00ff0), P32(0x01400090), 's', 'w', 'p', 'b', S_c, '\t', O_R_S12N4, O_TODO("Rt2"), '[', O_R_S16N4, ']', 0, 0,
	/* sxtb16  */ P32(0x0fff03f0), P32(0x068f0070), 's', 'x', 't', 'b', '1', '6', S_c, '\t', O_R_S12N4, O_R_S0N4, O_TODO("rotation"), 0, 0,
	/* sxtab16 */ P32(0x0ff003f0), P32(0x06800070), 's', 'x', 't', 'a', 'b', '1', '6', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_TODO("rotation"), 0, 0, 0, 0,
	/* sxtb    */ P32(0x0fff03f0), P32(0x06af0070), 's', 'x', 't', 'b', S_c, '\t', O_R_S12N4, O_R_S0N4, O_TODO("rotation"), 0, 0, 0, 0,
	/* sxtab   */ P32(0x0ff003f0), P32(0x06a00070), 's', 'x', 't', 'a', 'b', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_TODO("rotation"), 0, 0,
	/* sxth    */ P32(0x0fff03f0), P32(0x06bf0070), 's', 'x', 't', 'h', S_c, '\t', O_R_S12N4, O_R_S0N4, O_TODO("rotation"), 0, 0, 0, 0,
	/* sxtah   */ P32(0x0ff003f0), P32(0x06b00070), 's', 'x', 't', 'a', 'h', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_TODO("rotation"), 0, 0,
	/* teq     */ P32(0x0ff0f000), P32(0x03300000), 't', 'e', 'q', S_c, '\t', O_R_S16N4, '#', O_TODO("const"), 0, 0, 0, 0,
	/* teq     */ P32(0x0ff0f090), P32(0x01300010), 't', 'e', 'q', S_c, '\t', O_R_S16N4, O_R_S0N4, O_TODO("type"), O_R_S8N4, 0, 0, 0, 0,
	/* teq     */ P32(0x0ff0f010), P32(0x01300000), 't', 'e', 'q', S_c, '\t', O_R_S16N4, O_R_S0N4, O_SHIFT_S5N2, 0, 0, 0, 0,
	/* tst     */ P32(0x0ff0f000), P32(0x03100000), 't', 's', 't', S_c, '\t', O_R_S16N4, '#', O_TODO("const"), 0, 0, 0, 0,
	/* tst     */ P32(0x0ff0f090), P32(0x01100010), 't', 's', 't', S_c, '\t', O_R_S16N4, O_R_S0N4, O_TODO("type"), O_R_S8N4, 0, 0, 0, 0,
	/* tst     */ P32(0x0ff0f010), P32(0x01100000), 't', 's', 't', S_c, '\t', O_R_S16N4, O_R_S0N4, O_SHIFT_S5N2, 0, 0, 0, 0,
	/* uadd16  */ P32(0x0ff00ff0), P32(0x06500f10), 'u', 'a', 'd', 'd', '1', '6', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* uadd8   */ P32(0x0ff00ff0), P32(0x06500f90), 'u', 'a', 'd', 'd', '8', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* uasx    */ P32(0x0ff00ff0), P32(0x06500f30), 'u', 'a', 's', 'x', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* ubfx    */ P32(0x0fe00070), P32(0x07e00050), 'u', 'b', 'f', 'x', S_c, '\t', O_R_S12N4, O_R_S0N4, '#', O_TODO("lsb"), '#', O_TODO("width"), 0, 0, 0, 0,
	/* uhadd16 */ P32(0x0ff00ff0), P32(0x06700f10), 'u', 'h', 'a', 'd', 'd', '1', '6', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* uhadd8  */ P32(0x0ff00ff0), P32(0x06700f90), 'u', 'h', 'a', 'd', 'd', '8', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* uhasx   */ P32(0x0ff00ff0), P32(0x06700f30), 'u', 'h', 'a', 's', 'x', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* uhsax   */ P32(0x0ff00ff0), P32(0x06700f50), 'u', 'h', 's', 'a', 'x', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* uhsub16 */ P32(0x0ff00ff0), P32(0x06700f70), 'u', 'h', 's', 'u', 'b', '1', '6', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* uhsub8  */ P32(0x0ff00ff0), P32(0x06700ff0), 'u', 'h', 's', 'u', 'b', '8', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* umaal   */ P32(0x0ff000f0), P32(0x00400090), 'u', 'm', 'a', 'a', 'l', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0,
	/* umlal   */ P32(0x0fe000f0), P32(0x00a00090), 'u', 'm', 'l', 'a', 'l', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0, 0, 0,
	/* umull   */ P32(0x0fe000f0), P32(0x00800090), 'u', 'm', 'u', 'l', 'l', S_S, S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0, 0, 0,
	/* uqadd16 */ P32(0x0ff00ff0), P32(0x06600f10), 'u', 'q', 'a', 'd', 'd', '1', '6', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* uqadd8  */ P32(0x0ff00ff0), P32(0x06600f90), 'u', 'q', 'a', 'd', 'd', '8', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* uqasx   */ P32(0x0ff00ff0), P32(0x06600f30), 'u', 'q', 'a', 's', 'x', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* uqsax   */ P32(0x0ff00ff0), P32(0x06600f50), 'u', 'q', 's', 'a', 'x', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* uqsub16 */ P32(0x0ff00ff0), P32(0x06600f70), 'u', 'q', 's', 'u', 'b', '1', '6', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* uqsub8  */ P32(0x0ff00ff0), P32(0x06600ff0), 'u', 'q', 's', 'u', 'b', '8', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* usad8   */ P32(0x0ff0f0f0), P32(0x0780f010), 'u', 's', 'a', 'd', '8', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, 0, 0,
	/* usada8  */ P32(0x0ff000f0), P32(0x07800010), 'u', 's', 'a', 'd', 'a', '8', S_c, '\t', O_R_S16N4, O_R_S0N4, O_R_S8N4, O_R_S12N4, 0, 0, 0, 0,
	/* usat16  */ P32(0x0ff00ff0), P32(0x06e00f30), 'u', 's', 'a', 't', '1', '6', S_c, '\t', O_R_S12N4, '#', O_TODO("imm4"), O_R_S0N4, 0, 0, 0, 0,
	/* usat    */ P32(0x0fe00030), P32(0x06e00010), 'u', 's', 'a', 't', S_c, '\t', O_R_S12N4, '#', O_TODO("imm5"), O_R_S0N4, O_SHIFT_, 0, 0,
	/* usax    */ P32(0x0ff00ff0), P32(0x06500f50), 'u', 's', 'a', 'x', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0, 0, 0,
	/* usub16  */ P32(0x0ff00ff0), P32(0x06500f70), 'u', 's', 'u', 'b', '1', '6', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* usub8   */ P32(0x0ff00ff0), P32(0x06500ff0), 'u', 's', 'u', 'b', '8', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, 0, 0,
	/* uxtb16  */ P32(0x0fff03f0), P32(0x06cf0070), 'u', 'x', 't', 'b', '1', '6', S_c, '\t', O_R_S12N4, O_R_S0N4, O_TODO("rotation"), 0, 0,
	/* uxtab16 */ P32(0x0ff003f0), P32(0x06c00070), 'u', 'x', 't', 'a', 'b', '1', '6', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_TODO("rotation"), 0, 0, 0, 0,
	/* uxtb    */ P32(0x0fff03f0), P32(0x06ef0070), 'u', 'x', 't', 'b', S_c, '\t', O_R_S12N4, O_R_S0N4, O_TODO("rotation"), 0, 0, 0, 0,
	/* uxtab   */ P32(0x0ff003f0), P32(0x06e00070), 'u', 'x', 't', 'a', 'b', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_TODO("rotation"), 0, 0,
	/* uxth    */ P32(0x0fff03f0), P32(0x06ff0070), 'u', 'x', 't', 'h', S_c, '\t', O_R_S12N4, O_R_S0N4, O_TODO("rotation"), 0, 0, 0, 0,
	/* uxtah   */ P32(0x0ff003f0), P32(0x06f00070), 'u', 'x', 't', 'a', 'h', S_c, '\t', O_R_S12N4, O_R_S16N4, O_R_S0N4, O_TODO("rotation"), 0, 0,
	/* wfe     */ P32(0x0fffffff), P32(0x0320f002), 'w', 'f', 'e', S_c, 0, 0, 0, 0,
	/* wfi     */ P32(0x0fffffff), P32(0x0320f003), 'w', 'f', 'i', S_c, 0, 0, 0, 0,
	/* yield   */ P32(0x0fffffff), P32(0x0320f001), 'y', 'i', 'e', 'l', 'd', S_c, 0, 0,
};
/* Database size:
 * groups: 6156 = 513 * 12
 * blob:   14383
 * total:  20539 (20.05KiB) */
/*[[[end]]]*/
/* clang-format on */

DECL_END

#endif /* !GUARD_LIBDISASM_ARM_DB_H */
