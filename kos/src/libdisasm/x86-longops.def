/* Copyright (c) 2019-2020 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement (see the following) in the product     *
 *    documentation is required:                                              *
 *    Portions Copyright (c) 2019-2020 Griefer@Work                           *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */

LONGOP(LO_PREFETCHNTA, "prefetchnta\t" OP_RM)

LONGOP(LO_PREFETCHWT1, "prefetchwt1\t" OP_RM)

LONGOP(LO_SHA1RNDS4, "sha1rnds4\t" OP_U8 OP_RM128_XMM OP_RXMM)

LONGOP(LO_SHA1RNDS4, "sha256rnds2\t" OP_ESC("%xmm0") OP_RM128_XMM OP_RXMM),
LONGOP(LO_SHA1RNDS4, "sha256msg1\t" OP_RM128_XMM OP_RXMM),
LONGOP(LO_SHA1RNDS4, "sha256msg2\t" OP_RM128_XMM OP_RXMM),


LONGOP(LO_VPUNPCKHBW_XMM, "vpunpckhbw\t" OP_RM128_XMM__OP_VRXMM__OP_RXMM)
LONGOP(LO_VPUNPCKHBW_YMM, "vpunpckhbw\t" OP_RM256_YMM__OP_VRYMM__OP_RYMM)
LONGOP(LO_VPUNPCKHBW_ZMM, "vpunpckhbw\t" OP_RM512_ZMM__OP_VRZMM__OP_RZMM)

LONGOP(LO_VPUNPCKHWD_XMM, "vpunpckhwd\t" OP_RM128_XMM__OP_VRXMM__OP_RXMM)
LONGOP(LO_VPUNPCKHWD_YMM, "vpunpckhwd\t" OP_RM256_YMM__OP_VRYMM__OP_RYMM)
LONGOP(LO_VPUNPCKHWD_ZMM, "vpunpckhwd\t" OP_RM512_ZMM__OP_VRZMM__OP_RZMM)

LONGOP(LO_VPUNPCKHDQ_XMM, "vpunpckhdq\t" OP_RM128_XMM__OP_VRXMM__OP_RXMM)
LONGOP(LO_VPUNPCKHDQ_YMM, "vpunpckhdq\t" OP_RM256_YMM__OP_VRYMM__OP_RYMM)
LONGOP(LO_VPUNPCKHDQ_ZMM, "vpunpckhdq\t" OP_RM512_ZMM__OP_VRZMM__OP_RZMM)

LONGOP(LO_VPUNPCKHQDQ_XMM, "vpunpckhqdq\t" OP_RM128_XMM__OP_VRXMM__OP_RXMM)
LONGOP(LO_VPUNPCKHQDQ_YMM, "vpunpckhqdq\t" OP_RM256_YMM__OP_VRYMM__OP_RYMM)
LONGOP(LO_VPUNPCKHQDQ_ZMM, "vpunpckhqdq\t" OP_RM512_ZMM__OP_VRZMM__OP_RZMM)
LONGOP(LO_PUNPCKHQDQ_XMM, "punpckhqdq\t" OP_RM128_XMM OP_RXMM)

LONGOP(LO_VPUNPCKLBW_XMM, "vpunpcklbw\t" OP_RM128_XMM__OP_VRXMM__OP_RXMM)
LONGOP(LO_VPUNPCKLBW_YMM, "vpunpcklbw\t" OP_RM256_YMM__OP_VRYMM__OP_RYMM)
LONGOP(LO_VPUNPCKLBW_ZMM, "vpunpcklbw\t" OP_RM512_ZMM__OP_VRZMM__OP_RZMM)

LONGOP(LO_VPUNPCKLWD_XMM, "vpunpcklwd\t" OP_RM128_XMM__OP_VRXMM__OP_RXMM)
LONGOP(LO_VPUNPCKLWD_YMM, "vpunpcklwd\t" OP_RM256_YMM__OP_VRYMM__OP_RYMM)
LONGOP(LO_VPUNPCKLWD_ZMM, "vpunpcklwd\t" OP_RM512_ZMM__OP_VRZMM__OP_RZMM)

LONGOP(LO_VPUNPCKLDQ_XMM, "vpunpckldq\t" OP_RM128_XMM__OP_VRXMM__OP_RXMM)
LONGOP(LO_VPUNPCKLDQ_YMM, "vpunpckldq\t" OP_RM256_YMM__OP_VRYMM__OP_RYMM)
LONGOP(LO_VPUNPCKLDQ_ZMM, "vpunpckldq\t" OP_RM512_ZMM__OP_VRZMM__OP_RZMM)

LONGOP(LO_VPUNPCKLQDQ_XMM, "vpunpcklqdq\t" OP_RM128_XMM__OP_VRXMM__OP_RXMM)
LONGOP(LO_VPUNPCKLQDQ_YMM, "vpunpcklqdq\t" OP_RM256_YMM__OP_VRYMM__OP_RYMM)
LONGOP(LO_VPUNPCKLQDQ_ZMM, "vpunpcklqdq\t" OP_RM512_ZMM__OP_VRZMM__OP_RZMM)
LONGOP(LO_PUNPCKLQDQ_XMM, "punpcklqdq\t" OP_RM128_XMM OP_RXMM)

LONGOP(LO_VPHMINPOSUW, "vphminposuw\t" OP_RM128_XMM OP_RXMM)
LONGOP(LO_PHMINPOSUW, "phminposuw\t" OP_RM128_XMM OP_RXMM)

LONGOP(LO_VCVTDQ2PD_XMM, "vcvtdq2pd\t" OP_RM128_XMM OP_RXMM)
LONGOP(LO_VCVTDQ2PD_YMM, "vcvtdq2pd\t" OP_RM128_XMM OP_RYMM)
LONGOP(LO_VCVTDQ2PD_ZMM, "vcvtdq2pd\t" OP_RM256_YMM OP_RZMM)

LONGOP(LO_VMOVDQA32_XMM, "vmovdqa32\t" OP_RM128_XMM OP_RXMM)
LONGOP(LO_VMOVDQA32_YMM, "vmovdqa32\t" OP_RM256_YMM OP_RYMM)
LONGOP(LO_VMOVDQA32_ZMM, "vmovdqa32\t" OP_RM512_ZMM OP_RZMM)

LONGOP(LO_VMOVDQA64_XMM, "vmovdqa64\t" OP_RM128_XMM OP_RXMM)
LONGOP(LO_VMOVDQA64_YMM, "vmovdqa64\t" OP_RM256_YMM OP_RYMM)
LONGOP(LO_VMOVDQA64_ZMM, "vmovdqa64\t" OP_RM512_ZMM OP_RZMM)

LONGOP(LO_VMOVDQU16_XMM, "vmovdqu16\t" OP_RM128_XMM OP_RXMM)
LONGOP(LO_VMOVDQU16_YMM, "vmovdqu16\t" OP_RM256_YMM OP_RYMM)
LONGOP(LO_VMOVDQU16_ZMM, "vmovdqu16\t" OP_RM512_ZMM OP_RZMM)
LONGOP(LO_VMOVDQU32_XMM, "vmovdqu32\t" OP_RM128_XMM OP_RXMM)
LONGOP(LO_VMOVDQU32_YMM, "vmovdqu32\t" OP_RM256_YMM OP_RYMM)
LONGOP(LO_VMOVDQU32_ZMM, "vmovdqu32\t" OP_RM512_ZMM OP_RZMM)
LONGOP(LO_VMOVDQU64_XMM, "vmovdqu64\t" OP_RM128_XMM OP_RXMM)
LONGOP(LO_VMOVDQU64_YMM, "vmovdqu64\t" OP_RM256_YMM OP_RYMM)
LONGOP(LO_VMOVDQU64_ZMM, "vmovdqu64\t" OP_RM512_ZMM OP_RZMM)

LONGOP(LO_VMOVDQA32_XMM_REV, "vmovdqa32\t" OP_RXMM OP_RM128_XMM)
LONGOP(LO_VMOVDQA32_YMM_REV, "vmovdqa32\t" OP_RYMM OP_RM256_YMM)
LONGOP(LO_VMOVDQA32_ZMM_REV, "vmovdqa32\t" OP_RZMM OP_RM512_ZMM)

LONGOP(LO_VMOVDQA64_XMM_REV, "vmovdqa64\t" OP_RXMM OP_RM128_XMM)
LONGOP(LO_VMOVDQA64_YMM_REV, "vmovdqa64\t" OP_RYMM OP_RM256_YMM)
LONGOP(LO_VMOVDQA64_ZMM_REV, "vmovdqa64\t" OP_RZMM OP_RM512_ZMM)

LONGOP(LO_VMOVDQU16_XMM_REV, "vmovdqu16\t" OP_RXMM OP_RM128_XMM)
LONGOP(LO_VMOVDQU16_YMM_REV, "vmovdqu16\t" OP_RYMM OP_RM256_YMM)
LONGOP(LO_VMOVDQU16_ZMM_REV, "vmovdqu16\t" OP_RZMM OP_RM512_ZMM)
LONGOP(LO_VMOVDQU32_XMM_REV, "vmovdqu32\t" OP_RXMM OP_RM128_XMM)
LONGOP(LO_VMOVDQU32_YMM_REV, "vmovdqu32\t" OP_RYMM OP_RM256_YMM)
LONGOP(LO_VMOVDQU32_ZMM_REV, "vmovdqu32\t" OP_RZMM OP_RM512_ZMM)
LONGOP(LO_VMOVDQU64_XMM_REV, "vmovdqu64\t" OP_RXMM OP_RM128_XMM)
LONGOP(LO_VMOVDQU64_YMM_REV, "vmovdqu64\t" OP_RYMM OP_RM256_YMM)
LONGOP(LO_VMOVDQU64_ZMM_REV, "vmovdqu64\t" OP_RZMM OP_RM512_ZMM)

LONGOP(LO_VPMADDUBSW_XMM, "vpmaddubsw\t" OP_RM128_XMM__OP_VRXMM__OP_RXMM)
LONGOP(LO_VPMADDUBSW_YMM, "vpmaddubsw\t" OP_RM256_YMM__OP_VRYMM__OP_RYMM)
LONGOP(LO_VPMADDUBSW_ZMM, "vpmaddubsw\t" OP_RM512_ZMM__OP_VRZMM__OP_RZMM)

LONGOP(LO_VPSHUFHW_XMM, "vpshufhw\t" OP_U8 OP_RM128_XMM OP_RXMM)
LONGOP(LO_VPSHUFHW_YMM, "vpshufhw\t" OP_U8 OP_RM256_YMM OP_RYMM)
LONGOP(LO_VPSHUFHW_ZMM, "vpshufhw\t" OP_U8 OP_RM512_ZMM OP_RZMM)

LONGOP(LO_VPSHUFLW_XMM, "vpshuflw\t" OP_U8 OP_RM128_XMM OP_RXMM)
LONGOP(LO_VPSHUFLW_YMM, "vpshuflw\t" OP_U8 OP_RM256_YMM OP_RYMM)
LONGOP(LO_VPSHUFLW_ZMM, "vpshuflw\t" OP_U8 OP_RM128_XMM OP_RXMM)

LONGOP(LO_VMOVSLDUP_XMM, "vmovsldup\t" OP_RM128_XMM OP_RXMM)
LONGOP(LO_VMOVSLDUP_YMM, "vmovsldup\t" OP_RM256_YMM OP_RYMM)
LONGOP(LO_VMOVSLDUP_ZMM, "vmovsldup\t" OP_RM512_ZMM OP_RZMM)

LONGOP(LO_VMOVSHDUP_XMM, "vmovshdup\t" OP_RM128_XMM OP_RXMM)
LONGOP(LO_VMOVSHDUP_YMM, "vmovshdup\t" OP_RM256_YMM OP_RYMM)
LONGOP(LO_VMOVSHDUP_ZMM, "vmovshdup\t" OP_RM512_ZMM OP_RZMM)

