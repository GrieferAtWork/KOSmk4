/* Copyright (c) 2019-2020 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement in the product documentation would be  *
 *    appreciated but is not required.                                        *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */

if (!CONFIG_ONLY_BUILD_LIBRARIES) {
BEGIN GROUP("apps.init") { COMPILE, LINK, MCOPY };
	SET_LANGUAGE("c")
	SET_OUTPUT("/bin/init")
	SOURCE({ "init/*.c" })
END

BEGIN GROUP("apps.playground") { COMPILE, LINK, MCOPY };
	SET_OUTPUT("/bin/playground")
	SOURCE({ "playground/*.c" })
END

BEGIN GROUP("apps.rpc-service") { COMPILE, LINK, MCOPY };
	SET_LANGUAGE("c")
	SET_OUTPUT("/bin/rpc-service")
	SOURCE({ "rpc-service/*.c" })
END

BEGIN GROUP("apps.keymap") { COMPILE, LINK, MCOPY };
	SET_LANGUAGE("c")
	SET_OUTPUT("/bin/keymap")
	USELIB("libkeymap")
	SOURCE({ "keymap/*.c" })
END


BEGIN GROUP("apps.gfx") { COMPILE, LINK, MCOPY };
	SET_LANGUAGE("c")
	SET_OUTPUT("/bin/gfx")
	SOURCE({ "gfx/*.c" })
END
}

BEGIN GROUP("apps.system-test") { COMPILE, LINK, MCOPY };
	DEFINE({ "__INSIDE_LIBTEST" : "1" })
	LINKER_SCRIPT("system-test/arch/" + XARCH + "/_linker.ld")
	SET_OUTPUT("/bin/system-test")

	/* When building the compatibility-mode system libraries for x86_64, also
	 * include a regular 32-bit application /bin/system-test32 that is the 32-bit
	 * variant of /bin/system-test, but will have to be executed in compatibility
	 * mode, thus also testing the system's ability to run such applications!
	 * NOTE: Aside from having a different filename, `/bin/system-test32' is
	 *       exactly the same file as the /bin/system-test from an i386 disk
	 *       image! */
	if (TARGET_REAL_ARCH == "x86_64" && TARGET_ARCH == "i386") {
		SET_OUTPUT("/bin/system-test32")
	}

	USELIB("libdl")
	SOURCE({
		"system-test/*.c",

		/* Pull in test files from various other places. */
		"../libc/libc/*.ctest",
		"../libkeymap/*.ctest",
		"../libjson/*.ctest",
		"../libinstrlen/*.ctest",

	})
END


















