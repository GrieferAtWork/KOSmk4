/* Copyright (c) 2019-2020 Griefer@Work                                       *
 *                                                                            *
 * This software is provided 'as-is', without any express or implied          *
 * warranty. In no event will the authors be held liable for any damages      *
 * arising from the use of this software.                                     *
 *                                                                            *
 * Permission is granted to anyone to use this software for any purpose,      *
 * including commercial applications, and to alter it and redistribute it     *
 * freely, subject to the following restrictions:                             *
 *                                                                            *
 * 1. The origin of this software must not be misrepresented; you must not    *
 *    claim that you wrote the original software. If you use this software    *
 *    in a product, an acknowledgement in the product documentation would be  *
 *    appreciated but is not required.                                        *
 * 2. Altered source versions must be plainly marked as such, and must not be *
 *    misrepresented as being the original software.                          *
 * 3. This notice may not be removed or altered from any source distribution. *
 */
#ifndef DL_COREFIELD
#define DL_COREFIELD(type, name) /* nothing */
#endif /* !DL_COREFIELD */

#ifndef DL_COREOP
#define DL_COREOP(attr, return, cc, name, args) /* nothing */
#endif /* !DL_COREOP */

#ifndef DL_COREOPS_SKIP_DLMODULE_DESTROY
DL_COREOP(NONNULL((1)), void, LIBDL_CC, DlModule_Destroy, (DlModule *__restrict self))
#endif /* !DL_COREOPS_SKIP_DLMODULE_DESTROY */
DL_COREOP(NONNULL((1)), void, LIBDL_CC, DlSection_Destroy, (DlSection *__restrict self))
DL_COREOP(__REF_IF(!(return->dm_flags & RTLD_NODELETE)), DlModule *, LIBDL_CC, DlModule_FindFromFilename, (char const *__restrict filename))
DL_COREOP(NONNULL((1)), int, LIBDL_VCC, dl_seterrorf, (char const *__restrict format, ...))
DL_COREOP(NONNULL((1)), int, LIBDL_CC, dl_vseterrorf, (char const *__restrict format, __builtin_va_list args))
DL_COREOP(WUNUSED ATTR_PURE_P NONNULL((1)), void *, __FCALL, dlsym_builtin, (char const *__restrict name))
DL_COREOP(WUNUSED ATTR_PURE_P NONNULL((1)), DlSection *, __FCALL, dlsec_builtin, (char const *__restrict name))
DL_COREOP(WUNUSED ATTR_CONST_P, DlSection *, __FCALL, dlsec_builtin_index, (size_t sect_index))
DL_COREOP(WUNUSED ATTR_CONST_P, char const *, __FCALL, dlsec_builtin_name, (size_t sect_index))

#undef DL_COREFIELD
#undef DL_COREOP
